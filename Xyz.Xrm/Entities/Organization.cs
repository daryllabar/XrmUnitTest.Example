//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

//------------------------------------------------------------------------------

namespace Xyz.Xrm.Entities
{
	
	/// <summary>
	/// Top level of the Microsoft Dynamics 365 business hierarchy. The organization can be a specific business, holding company, or corporation.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("organization")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.42")]
	public partial class Organization : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ACIWebEndpointUrl = "aciwebendpointurl";
			public const string AcknowledgementTemplateId = "acknowledgementtemplateid";
			public const string AllowAddressBookSyncs = "allowaddressbooksyncs";
			public const string AllowAutoResponseCreation = "allowautoresponsecreation";
			public const string AllowAutoUnsubscribe = "allowautounsubscribe";
			public const string AllowAutoUnsubscribeAcknowledgement = "allowautounsubscribeacknowledgement";
			public const string AllowClientMessageBarAd = "allowclientmessagebarad";
			public const string AllowEntityOnlyAudit = "allowentityonlyaudit";
			public const string AllowLegacyClientExperience = "allowlegacyclientexperience";
			public const string AllowLegacyDialogsEmbedding = "allowlegacydialogsembedding";
			public const string AllowMarketingEmailExecution = "allowmarketingemailexecution";
			public const string AllowOfflineScheduledSyncs = "allowofflinescheduledsyncs";
			public const string AllowOutlookScheduledSyncs = "allowoutlookscheduledsyncs";
			public const string AllowUnresolvedPartiesOnEmailSend = "allowunresolvedpartiesonemailsend";
			public const string AllowUserFormModePreference = "allowuserformmodepreference";
			public const string AllowUsersSeeAppdownloadMessage = "allowusersseeappdownloadmessage";
			public const string AllowWebExcelExport = "allowwebexcelexport";
			public const string AMDesignator = "amdesignator";
			public const string AppDesignerExperienceEnabled = "appdesignerexperienceenabled";
			public const string AppointmentRichEditorExperience = "appointmentricheditorexperience";
			public const string AuditRetentionPeriod = "auditretentionperiod";
			public const string AutoApplyDefaultonCaseCreate = "autoapplydefaultoncasecreate";
			public const string AutoApplyDefaultonCaseUpdate = "autoapplydefaultoncaseupdate";
			public const string AutoApplySLA = "autoapplysla";
			public const string AzureSchedulerJobCollectionName = "azureschedulerjobcollectionname";
			public const string BaseCurrencyId = "basecurrencyid";
			public const string BaseCurrencyPrecision = "basecurrencyprecision";
			public const string BaseCurrencySymbol = "basecurrencysymbol";
			public const string BingMapsApiKey = "bingmapsapikey";
			public const string BlockedAttachments = "blockedattachments";
			public const string BoundDashboardDefaultCardExpanded = "bounddashboarddefaultcardexpanded";
			public const string BulkOperationPrefix = "bulkoperationprefix";
			public const string BusinessCardOptions = "businesscardoptions";
			public const string BusinessClosureCalendarId = "businessclosurecalendarid";
			public const string CalendarType = "calendartype";
			public const string CampaignPrefix = "campaignprefix";
			public const string CascadeStatusUpdate = "cascadestatusupdate";
			public const string CasePrefix = "caseprefix";
			public const string CategoryPrefix = "categoryprefix";
			public const string ClientFeatureSet = "clientfeatureset";
			public const string ContentSecurityPolicyConfiguration = "contentsecuritypolicyconfiguration";
			public const string ContractPrefix = "contractprefix";
			public const string CortanaProactiveExperienceEnabled = "cortanaproactiveexperienceenabled";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreateProductsWithoutParentInActiveState = "createproductswithoutparentinactivestate";
			public const string CurrencyDecimalPrecision = "currencydecimalprecision";
			public const string CurrencyDisplayOption = "currencydisplayoption";
			public const string CurrencyFormatCode = "currencyformatcode";
			public const string CurrencySymbol = "currencysymbol";
			public const string CurrentBulkOperationNumber = "currentbulkoperationnumber";
			public const string CurrentCampaignNumber = "currentcampaignnumber";
			public const string CurrentCaseNumber = "currentcasenumber";
			public const string CurrentCategoryNumber = "currentcategorynumber";
			public const string CurrentContractNumber = "currentcontractnumber";
			public const string CurrentImportSequenceNumber = "currentimportsequencenumber";
			public const string CurrentInvoiceNumber = "currentinvoicenumber";
			public const string CurrentKaNumber = "currentkanumber";
			public const string CurrentKbNumber = "currentkbnumber";
			public const string CurrentOrderNumber = "currentordernumber";
			public const string CurrentParsedTableNumber = "currentparsedtablenumber";
			public const string CurrentQuoteNumber = "currentquotenumber";
			public const string DateFormatCode = "dateformatcode";
			public const string DateFormatString = "dateformatstring";
			public const string DateSeparator = "dateseparator";
			public const string DaysSinceRecordLastModifiedMaxValue = "dayssincerecordlastmodifiedmaxvalue";
			public const string DecimalSymbol = "decimalsymbol";
			public const string DefaultCountryCode = "defaultcountrycode";
			public const string DefaultCrmCustomName = "defaultcrmcustomname";
			public const string DefaultEmailServerProfileId = "defaultemailserverprofileid";
			public const string DefaultEmailSettings = "defaultemailsettings";
			public const string DefaultMobileOfflineProfileId = "defaultmobileofflineprofileid";
			public const string DefaultRecurrenceEndRangeType = "defaultrecurrenceendrangetype";
			public const string DefaultThemeData = "defaultthemedata";
			public const string DelegatedAdminUserId = "delegatedadminuserid";
			public const string DisabledReason = "disabledreason";
			public const string DisableSocialCare = "disablesocialcare";
			public const string DiscountCalculationMethod = "discountcalculationmethod";
			public const string DisplayNavigationTour = "displaynavigationtour";
			public const string EmailConnectionChannel = "emailconnectionchannel";
			public const string EmailCorrelationEnabled = "emailcorrelationenabled";
			public const string EmailSendPollingPeriod = "emailsendpollingperiod";
			public const string EnableBingMapsIntegration = "enablebingmapsintegration";
			public const string EnableImmersiveSkypeIntegration = "enableimmersiveskypeintegration";
			public const string EnableLivePersonaCardUCI = "enablelivepersonacarduci";
			public const string EnableLivePersonCardIntegrationInOffice = "enablelivepersoncardintegrationinoffice";
			public const string EnableLPAuthoring = "enablelpauthoring";
			public const string EnableMicrosoftFlowIntegration = "enablemicrosoftflowintegration";
			public const string EnablePricingOnCreate = "enablepricingoncreate";
			public const string EnableSmartMatching = "enablesmartmatching";
			public const string EnableUnifiedInterfaceShellRefresh = "enableunifiedinterfaceshellrefresh";
			public const string EnforceReadOnlyPlugins = "enforcereadonlyplugins";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExpireChangeTrackingInDays = "expirechangetrackingindays";
			public const string ExpireSubscriptionsInDays = "expiresubscriptionsindays";
			public const string ExternalBaseUrl = "externalbaseurl";
			public const string ExternalPartyCorrelationKeys = "externalpartycorrelationkeys";
			public const string ExternalPartyEntitySettings = "externalpartyentitysettings";
			public const string FeatureSet = "featureset";
			public const string FiscalCalendarStart = "fiscalcalendarstart";
			public const string FiscalPeriodFormat = "fiscalperiodformat";
			public const string FiscalPeriodFormatPeriod = "fiscalperiodformatperiod";
			public const string FiscalPeriodType = "fiscalperiodtype";
			public const string FiscalSettingsUpdated = "fiscalsettingsupdated";
			public const string FiscalYearDisplayCode = "fiscalyeardisplaycode";
			public const string FiscalYearFormat = "fiscalyearformat";
			public const string FiscalYearFormatPrefix = "fiscalyearformatprefix";
			public const string FiscalYearFormatSuffix = "fiscalyearformatsuffix";
			public const string FiscalYearFormatYear = "fiscalyearformatyear";
			public const string FiscalYearPeriodConnect = "fiscalyearperiodconnect";
			public const string FullNameConventionCode = "fullnameconventioncode";
			public const string FutureExpansionWindow = "futureexpansionwindow";
			public const string GenerateAlertsForErrors = "generatealertsforerrors";
			public const string GenerateAlertsForInformation = "generatealertsforinformation";
			public const string GenerateAlertsForWarnings = "generatealertsforwarnings";
			public const string GetStartedPaneContentEnabled = "getstartedpanecontentenabled";
			public const string GlobalAppendUrlParametersEnabled = "globalappendurlparametersenabled";
			public const string GlobalHelpUrl = "globalhelpurl";
			public const string GlobalHelpUrlEnabled = "globalhelpurlenabled";
			public const string GoalRollupExpiryTime = "goalrollupexpirytime";
			public const string GoalRollupFrequency = "goalrollupfrequency";
			public const string GrantAccessToNetworkService = "grantaccesstonetworkservice";
			public const string HashDeltaSubjectCount = "hashdeltasubjectcount";
			public const string HashFilterKeywords = "hashfilterkeywords";
			public const string HashMaxCount = "hashmaxcount";
			public const string HashMinAddressCount = "hashminaddresscount";
			public const string HighContrastThemeData = "highcontrastthemedata";
			public const string IgnoreInternalEmail = "ignoreinternalemail";
			public const string InactivityTimeoutEnabled = "inactivitytimeoutenabled";
			public const string InactivityTimeoutInMins = "inactivitytimeoutinmins";
			public const string InactivityTimeoutReminderInMins = "inactivitytimeoutreminderinmins";
			public const string IncomingEmailExchangeEmailRetrievalBatchSize = "incomingemailexchangeemailretrievalbatchsize";
			public const string InitialVersion = "initialversion";
			public const string IntegrationUserId = "integrationuserid";
			public const string InvoicePrefix = "invoiceprefix";
			public const string IsActionCardEnabled = "isactioncardenabled";
			public const string IsActionSupportFeatureEnabled = "isactionsupportfeatureenabled";
			public const string IsActivityAnalysisEnabled = "isactivityanalysisenabled";
			public const string IsAllMoneyDecimal = "isallmoneydecimal";
			public const string IsAppMode = "isappmode";
			public const string IsAppointmentAttachmentSyncEnabled = "isappointmentattachmentsyncenabled";
			public const string IsAssignedTasksSyncEnabled = "isassignedtaskssyncenabled";
			public const string IsAuditEnabled = "isauditenabled";
			public const string IsAutoDataCaptureEnabled = "isautodatacaptureenabled";
			public const string IsAutoDataCaptureV2Enabled = "isautodatacapturev2enabled";
			public const string IsAutoSaveEnabled = "isautosaveenabled";
			public const string IsBPFEntityCustomizationFeatureEnabled = "isbpfentitycustomizationfeatureenabled";
			public const string IsConflictDetectionEnabledForMobileClient = "isconflictdetectionenabledformobileclient";
			public const string IsContactMailingAddressSyncEnabled = "iscontactmailingaddresssyncenabled";
			public const string IsContentSecurityPolicyEnabled = "iscontentsecuritypolicyenabled";
			public const string IsContextualEmailEnabled = "iscontextualemailenabled";
			public const string IsContextualHelpEnabled = "iscontextualhelpenabled";
			public const string IsCustomControlsInCanvasAppsEnabled = "iscustomcontrolsincanvasappsenabled";
			public const string IsDefaultCountryCodeCheckEnabled = "isdefaultcountrycodecheckenabled";
			public const string IsDelegateAccessEnabled = "isdelegateaccessenabled";
			public const string IsDelveActionHubIntegrationEnabled = "isdelveactionhubintegrationenabled";
			public const string IsDisabled = "isdisabled";
			public const string IsDuplicateDetectionEnabled = "isduplicatedetectionenabled";
			public const string IsDuplicateDetectionEnabledForImport = "isduplicatedetectionenabledforimport";
			public const string IsDuplicateDetectionEnabledForOfflineSync = "isduplicatedetectionenabledforofflinesync";
			public const string IsDuplicateDetectionEnabledForOnlineCreateUpdate = "isduplicatedetectionenabledforonlinecreateupdate";
			public const string IsEmailMonitoringAllowed = "isemailmonitoringallowed";
			public const string IsEmailServerProfileContentFilteringEnabled = "isemailserverprofilecontentfilteringenabled";
			public const string IsEnabledForAllRoles = "isenabledforallroles";
			public const string IsExternalFileStorageEnabled = "isexternalfilestorageenabled";
			public const string IsExternalSearchIndexEnabled = "isexternalsearchindexenabled";
			public const string IsFiscalPeriodMonthBased = "isfiscalperiodmonthbased";
			public const string IsFolderAutoCreatedonSP = "isfolderautocreatedonsp";
			public const string IsFolderBasedTrackingEnabled = "isfolderbasedtrackingenabled";
			public const string IsFullTextSearchEnabled = "isfulltextsearchenabled";
			public const string IsHierarchicalSecurityModelEnabled = "ishierarchicalsecuritymodelenabled";
			public const string IsLUISEnabledforD365Bot = "isluisenabledford365bot";
			public const string IsMailboxForcedUnlockingEnabled = "ismailboxforcedunlockingenabled";
			public const string IsMailboxInactiveBackoffEnabled = "ismailboxinactivebackoffenabled";
			public const string IsManualSalesForecastingEnabled = "ismanualsalesforecastingenabled";
			public const string IsMobileClientOnDemandSyncEnabled = "ismobileclientondemandsyncenabled";
			public const string IsMobileOfflineEnabled = "ismobileofflineenabled";
			public const string IsMSTeamsCollaborationEnabled = "ismsteamscollaborationenabled";
			public const string IsMSTeamsEnabled = "ismsteamsenabled";
			public const string IsMSTeamsSettingChangedByUser = "ismsteamssettingchangedbyuser";
			public const string IsMSTeamsUserSyncEnabled = "ismsteamsusersyncenabled";
			public const string IsNewAddProductExperienceEnabled = "isnewaddproductexperienceenabled";
			public const string IsNotesAnalysisEnabled = "isnotesanalysisenabled";
			public const string IsOfficeGraphEnabled = "isofficegraphenabled";
			public const string IsOneDriveEnabled = "isonedriveenabled";
			public const string IsPAIEnabled = "ispaienabled";
			public const string IsPDFGenerationEnabled = "ispdfgenerationenabled";
			public const string IsPlaybookEnabled = "isplaybookenabled";
			public const string IsPresenceEnabled = "ispresenceenabled";
			public const string IsPreviewEnabledForActionCard = "ispreviewenabledforactioncard";
			public const string IsPreviewForAutoCaptureEnabled = "ispreviewforautocaptureenabled";
			public const string IsPreviewForEmailMonitoringAllowed = "ispreviewforemailmonitoringallowed";
			public const string IsPriceListMandatory = "ispricelistmandatory";
			public const string IsQuickCreateEnabledForOpportunityClose = "isquickcreateenabledforopportunityclose";
			public const string IsReadAuditEnabled = "isreadauditenabled";
			public const string IsRelationshipInsightsEnabled = "isrelationshipinsightsenabled";
			public const string IsResourceBookingExchangeSyncEnabled = "isresourcebookingexchangesyncenabled";
			public const string IsRichTextNotesEnabled = "isrichtextnotesenabled";
			public const string IsSalesAssistantEnabled = "issalesassistantenabled";
			public const string IsSOPIntegrationEnabled = "issopintegrationenabled";
			public const string IsTextWrapEnabled = "istextwrapenabled";
			public const string IsUserAccessAuditEnabled = "isuseraccessauditenabled";
			public const string ISVIntegrationCode = "isvintegrationcode";
			public const string IsWriteInProductsAllowed = "iswriteinproductsallowed";
			public const string KaPrefix = "kaprefix";
			public const string KbPrefix = "kbprefix";
			public const string KMSettings = "kmsettings";
			public const string LanguageCode = "languagecode";
			public const string LocaleId = "localeid";
			public const string LongDateFormatCode = "longdateformatcode";
			public const string MailboxIntermittentIssueMinRange = "mailboxintermittentissueminrange";
			public const string MailboxPermanentIssueMinRange = "mailboxpermanentissueminrange";
			public const string MaxActionStepsInBPF = "maxactionstepsinbpf";
			public const string MaxAppointmentDurationDays = "maxappointmentdurationdays";
			public const string MaxConditionsForMobileOfflineFilters = "maxconditionsformobileofflinefilters";
			public const string MaxDepthForHierarchicalSecurityModel = "maxdepthforhierarchicalsecuritymodel";
			public const string MaxFolderBasedTrackingMappings = "maxfolderbasedtrackingmappings";
			public const string MaximumActiveBusinessProcessFlowsAllowedPerEntity = "maximumactivebusinessprocessflowsallowedperentity";
			public const string MaximumDynamicPropertiesAllowed = "maximumdynamicpropertiesallowed";
			public const string MaximumEntitiesWithActiveSLA = "maximumentitieswithactivesla";
			public const string MaximumSLAKPIPerEntityWithActiveSLA = "maximumslakpiperentitywithactivesla";
			public const string MaximumTrackingNumber = "maximumtrackingnumber";
			public const string MaxProductsInBundle = "maxproductsinbundle";
			public const string MaxRecordsForExportToExcel = "maxrecordsforexporttoexcel";
			public const string MaxRecordsForLookupFilters = "maxrecordsforlookupfilters";
			public const string MaxSupportedInternetExplorerVersion = "maxsupportedinternetexplorerversion";
			public const string MaxUploadFileSize = "maxuploadfilesize";
			public const string MaxVerboseLoggingMailbox = "maxverboseloggingmailbox";
			public const string MaxVerboseLoggingSyncCycles = "maxverboseloggingsynccycles";
			public const string MicrosoftFlowEnvironment = "microsoftflowenvironment";
			public const string MinAddressBookSyncInterval = "minaddressbooksyncinterval";
			public const string MinOfflineSyncInterval = "minofflinesyncinterval";
			public const string MinOutlookSyncInterval = "minoutlooksyncinterval";
			public const string MobileOfflineMinLicenseProd = "mobileofflineminlicenseprod";
			public const string MobileOfflineMinLicenseTrial = "mobileofflineminlicensetrial";
			public const string MobileOfflineSyncInterval = "mobileofflinesyncinterval";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string NegativeCurrencyFormatCode = "negativecurrencyformatcode";
			public const string NegativeFormatCode = "negativeformatcode";
			public const string NextTrackingNumber = "nexttrackingnumber";
			public const string NotifyMailboxOwnerOfEmailServerLevelAlerts = "notifymailboxownerofemailserverlevelalerts";
			public const string NumberFormat = "numberformat";
			public const string NumberGroupFormat = "numbergroupformat";
			public const string NumberSeparator = "numberseparator";
			public const string OfficeAppsAutoDeploymentEnabled = "officeappsautodeploymentenabled";
			public const string OfficeGraphDelveUrl = "officegraphdelveurl";
			public const string OOBPriceCalculationEnabled = "oobpricecalculationenabled";
			public const string OrderPrefix = "orderprefix";
			public const string OrganizationId = "organizationid";
			public const string Id = "organizationid";
			public const string OrganizationState = "organizationstate";
			public const string OrgDbOrgSettings = "orgdborgsettings";
			public const string OrgInsightsEnabled = "orginsightsenabled";
			public const string PaiPreviewScenarioEnabled = "paipreviewscenarioenabled";
			public const string ParsedTableColumnPrefix = "parsedtablecolumnprefix";
			public const string ParsedTablePrefix = "parsedtableprefix";
			public const string PastExpansionWindow = "pastexpansionwindow";
			public const string Picture = "picture";
			public const string PinpointLanguageCode = "pinpointlanguagecode";
			public const string PluginTraceLogSetting = "plugintracelogsetting";
			public const string PMDesignator = "pmdesignator";
			public const string PostMessageWhitelistDomains = "postmessagewhitelistdomains";
			public const string PowerBiFeatureEnabled = "powerbifeatureenabled";
			public const string PricingDecimalPrecision = "pricingdecimalprecision";
			public const string PrivacyStatementUrl = "privacystatementurl";
			public const string PrivilegeUserGroupId = "privilegeusergroupid";
			public const string PrivReportingGroupId = "privreportinggroupid";
			public const string PrivReportingGroupName = "privreportinggroupname";
			public const string ProductRecommendationsEnabled = "productrecommendationsenabled";
			public const string QualifyLeadAdditionalOptions = "qualifyleadadditionaloptions";
			public const string QuickFindRecordLimitEnabled = "quickfindrecordlimitenabled";
			public const string QuotePrefix = "quoteprefix";
			public const string RecurrenceDefaultNumberOfOccurrences = "recurrencedefaultnumberofoccurrences";
			public const string RecurrenceExpansionJobBatchInterval = "recurrenceexpansionjobbatchinterval";
			public const string RecurrenceExpansionJobBatchSize = "recurrenceexpansionjobbatchsize";
			public const string RecurrenceExpansionSynchCreateMax = "recurrenceexpansionsynchcreatemax";
			public const string ReferenceSiteMapXml = "referencesitemapxml";
			public const string RenderSecureIFrameForEmail = "rendersecureiframeforemail";
			public const string ReportingGroupId = "reportinggroupid";
			public const string ReportingGroupName = "reportinggroupname";
			public const string ReportScriptErrors = "reportscripterrors";
			public const string RequireApprovalForQueueEmail = "requireapprovalforqueueemail";
			public const string RequireApprovalForUserEmail = "requireapprovalforuseremail";
			public const string ResolveSimilarUnresolvedEmailAddress = "resolvesimilarunresolvedemailaddress";
			public const string RestrictStatusUpdate = "restrictstatusupdate";
			public const string RiErrorStatus = "rierrorstatus";
			public const string SampleDataImportId = "sampledataimportid";
			public const string SchedulingEngine = "schedulingengine";
			public const string SchemaNamePrefix = "schemanameprefix";
			public const string SendBulkEmailInUCI = "sendbulkemailinuci";
			public const string ServeStaticResourcesFromAzureCDN = "servestaticresourcesfromazurecdn";
			public const string SessionTimeoutEnabled = "sessiontimeoutenabled";
			public const string SessionTimeoutInMins = "sessiontimeoutinmins";
			public const string SessionTimeoutReminderInMins = "sessiontimeoutreminderinmins";
			public const string SharePointDeploymentType = "sharepointdeploymenttype";
			public const string ShareToPreviousOwnerOnAssign = "sharetopreviousowneronassign";
			public const string ShowKBArticleDeprecationNotification = "showkbarticledeprecationnotification";
			public const string ShowWeekNumber = "showweeknumber";
			public const string SignupOutlookDownloadFWLink = "signupoutlookdownloadfwlink";
			public const string SiteMapXml = "sitemapxml";
			public const string SlaPauseStates = "slapausestates";
			public const string SocialInsightsEnabled = "socialinsightsenabled";
			public const string SocialInsightsInstance = "socialinsightsinstance";
			public const string SocialInsightsTermsAccepted = "socialinsightstermsaccepted";
			public const string SortId = "sortid";
			public const string SqlAccessGroupId = "sqlaccessgroupid";
			public const string SqlAccessGroupName = "sqlaccessgroupname";
			public const string SQMEnabled = "sqmenabled";
			public const string SupportUserId = "supportuserid";
			public const string SuppressSLA = "suppresssla";
			public const string SyncBulkOperationBatchSize = "syncbulkoperationbatchsize";
			public const string SyncBulkOperationMaxLimit = "syncbulkoperationmaxlimit";
			public const string SyncOptInSelection = "syncoptinselection";
			public const string SyncOptInSelectionStatus = "syncoptinselectionstatus";
			public const string SystemUserId = "systemuserid";
			public const string TagMaxAggressiveCycles = "tagmaxaggressivecycles";
			public const string TagPollingPeriod = "tagpollingperiod";
			public const string TaskBasedFlowEnabled = "taskbasedflowenabled";
			public const string TextAnalyticsEnabled = "textanalyticsenabled";
			public const string TimeFormatCode = "timeformatcode";
			public const string TimeFormatString = "timeformatstring";
			public const string TimeSeparator = "timeseparator";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TokenExpiry = "tokenexpiry";
			public const string TokenKey = "tokenkey";
			public const string TraceLogMaximumAgeInDays = "tracelogmaximumageindays";
			public const string TrackingPrefix = "trackingprefix";
			public const string TrackingTokenIdBase = "trackingtokenidbase";
			public const string TrackingTokenIdDigits = "trackingtokeniddigits";
			public const string UniqueSpecifierLength = "uniquespecifierlength";
			public const string UnresolveEmailAddressIfMultipleMatch = "unresolveemailaddressifmultiplematch";
			public const string UseInbuiltRuleForDefaultPricelistSelection = "useinbuiltrulefordefaultpricelistselection";
			public const string UseLegacyRendering = "uselegacyrendering";
			public const string UsePositionHierarchy = "usepositionhierarchy";
			public const string UseQuickFindViewForGridSearch = "usequickfindviewforgridsearch";
			public const string UserAccessAuditingInterval = "useraccessauditinginterval";
			public const string UseReadForm = "usereadform";
			public const string UserGroupId = "usergroupid";
			public const string UseSkypeProtocol = "useskypeprotocol";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string V3CalloutConfigHash = "v3calloutconfighash";
			public const string VersionNumber = "versionnumber";
			public const string WebResourceHash = "webresourcehash";
			public const string WeekStartDayCode = "weekstartdaycode";
			public const string WidgetProperties = "widgetproperties";
			public const string YammerGroupId = "yammergroupid";
			public const string YammerNetworkPermalink = "yammernetworkpermalink";
			public const string YammerOAuthAccessTokenExpired = "yammeroauthaccesstokenexpired";
			public const string YammerPostMethod = "yammerpostmethod";
			public const string YearStartWeekCode = "yearstartweekcode";
			public const string basecurrency_organization = "basecurrency_organization";
			public const string lk_organization_createdonbehalfby = "lk_organization_createdonbehalfby";
			public const string lk_organization_modifiedonbehalfby = "lk_organization_modifiedonbehalfby";
			public const string lk_organizationbase_createdby = "lk_organizationbase_createdby";
			public const string lk_organizationbase_modifiedby = "lk_organizationbase_modifiedby";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Organization() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "organization";
		
		public const string EntitySchemaName = "Organization";
		
		public const string PrimaryIdAttribute = "organizationid";
		
		public const string PrimaryNameAttribute = "name";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// ACI Web Endpoint URL.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aciwebendpointurl")]
		public string ACIWebEndpointUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("aciwebendpointurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ACIWebEndpointUrl");
				this.SetAttributeValue("aciwebendpointurl", value);
				this.OnPropertyChanged("ACIWebEndpointUrl");
			}
		}
		
		/// <summary>
		/// Unique identifier of the template to be used for acknowledgement when a user unsubscribes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("acknowledgementtemplateid")]
		public Microsoft.Xrm.Sdk.EntityReference AcknowledgementTemplateId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("acknowledgementtemplateid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AcknowledgementTemplateId");
				this.SetAttributeValue("acknowledgementtemplateid", value);
				this.OnPropertyChanged("AcknowledgementTemplateId");
			}
		}
		
		/// <summary>
		/// Indicates whether background address book synchronization in Microsoft Office Outlook is allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowaddressbooksyncs")]
		public System.Nullable<bool> AllowAddressBookSyncs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowaddressbooksyncs");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowAddressBookSyncs");
				this.SetAttributeValue("allowaddressbooksyncs", value);
				this.OnPropertyChanged("AllowAddressBookSyncs");
			}
		}
		
		/// <summary>
		/// Indicates whether automatic response creation is allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowautoresponsecreation")]
		public System.Nullable<bool> AllowAutoResponseCreation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowautoresponsecreation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowAutoResponseCreation");
				this.SetAttributeValue("allowautoresponsecreation", value);
				this.OnPropertyChanged("AllowAutoResponseCreation");
			}
		}
		
		/// <summary>
		/// Indicates whether automatic unsubscribe is allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowautounsubscribe")]
		public System.Nullable<bool> AllowAutoUnsubscribe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowautounsubscribe");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowAutoUnsubscribe");
				this.SetAttributeValue("allowautounsubscribe", value);
				this.OnPropertyChanged("AllowAutoUnsubscribe");
			}
		}
		
		/// <summary>
		/// Indicates whether automatic unsubscribe acknowledgement email is allowed to send.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowautounsubscribeacknowledgement")]
		public System.Nullable<bool> AllowAutoUnsubscribeAcknowledgement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowautounsubscribeacknowledgement");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowAutoUnsubscribeAcknowledgement");
				this.SetAttributeValue("allowautounsubscribeacknowledgement", value);
				this.OnPropertyChanged("AllowAutoUnsubscribeAcknowledgement");
			}
		}
		
		/// <summary>
		/// Indicates whether Outlook Client message bar advertisement is allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowclientmessagebarad")]
		public System.Nullable<bool> AllowClientMessageBarAd
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowclientmessagebarad");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowClientMessageBarAd");
				this.SetAttributeValue("allowclientmessagebarad", value);
				this.OnPropertyChanged("AllowClientMessageBarAd");
			}
		}
		
		/// <summary>
		/// Indicates whether auditing of changes to entity is allowed when no attributes have changed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowentityonlyaudit")]
		public System.Nullable<bool> AllowEntityOnlyAudit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowentityonlyaudit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowEntityOnlyAudit");
				this.SetAttributeValue("allowentityonlyaudit", value);
				this.OnPropertyChanged("AllowEntityOnlyAudit");
			}
		}
		
		/// <summary>
		/// Enable access to legacy web client UI
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowlegacyclientexperience")]
		public System.Nullable<bool> AllowLegacyClientExperience
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowlegacyclientexperience");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowLegacyClientExperience");
				this.SetAttributeValue("allowlegacyclientexperience", value);
				this.OnPropertyChanged("AllowLegacyClientExperience");
			}
		}
		
		/// <summary>
		/// Enable embedding of certain legacy dialogs in Unified Interface browser client
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowlegacydialogsembedding")]
		public System.Nullable<bool> AllowLegacyDialogsEmbedding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowlegacydialogsembedding");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowLegacyDialogsEmbedding");
				this.SetAttributeValue("allowlegacydialogsembedding", value);
				this.OnPropertyChanged("AllowLegacyDialogsEmbedding");
			}
		}
		
		/// <summary>
		/// Indicates whether marketing emails execution is allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowmarketingemailexecution")]
		public System.Nullable<bool> AllowMarketingEmailExecution
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowmarketingemailexecution");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowMarketingEmailExecution");
				this.SetAttributeValue("allowmarketingemailexecution", value);
				this.OnPropertyChanged("AllowMarketingEmailExecution");
			}
		}
		
		/// <summary>
		/// Indicates whether background offline synchronization in Microsoft Office Outlook is allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowofflinescheduledsyncs")]
		public System.Nullable<bool> AllowOfflineScheduledSyncs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowofflinescheduledsyncs");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowOfflineScheduledSyncs");
				this.SetAttributeValue("allowofflinescheduledsyncs", value);
				this.OnPropertyChanged("AllowOfflineScheduledSyncs");
			}
		}
		
		/// <summary>
		/// Indicates whether scheduled synchronizations to Outlook are allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowoutlookscheduledsyncs")]
		public System.Nullable<bool> AllowOutlookScheduledSyncs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowoutlookscheduledsyncs");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowOutlookScheduledSyncs");
				this.SetAttributeValue("allowoutlookscheduledsyncs", value);
				this.OnPropertyChanged("AllowOutlookScheduledSyncs");
			}
		}
		
		/// <summary>
		/// Indicates whether users are allowed to send email to unresolved parties (parties must still have an email address).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowunresolvedpartiesonemailsend")]
		public System.Nullable<bool> AllowUnresolvedPartiesOnEmailSend
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowunresolvedpartiesonemailsend");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowUnresolvedPartiesOnEmailSend");
				this.SetAttributeValue("allowunresolvedpartiesonemailsend", value);
				this.OnPropertyChanged("AllowUnresolvedPartiesOnEmailSend");
			}
		}
		
		/// <summary>
		/// Indicates whether individuals can select their form mode preference in their personal options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowuserformmodepreference")]
		public System.Nullable<bool> AllowUserFormModePreference
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowuserformmodepreference");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowUserFormModePreference");
				this.SetAttributeValue("allowuserformmodepreference", value);
				this.OnPropertyChanged("AllowUserFormModePreference");
			}
		}
		
		/// <summary>
		/// Indicates whether the showing tablet application notification bars in a browser is allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowusersseeappdownloadmessage")]
		public System.Nullable<bool> AllowUsersSeeAppdownloadMessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowusersseeappdownloadmessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowUsersSeeAppdownloadMessage");
				this.SetAttributeValue("allowusersseeappdownloadmessage", value);
				this.OnPropertyChanged("AllowUsersSeeAppdownloadMessage");
			}
		}
		
		/// <summary>
		/// Indicates whether Web-based export of grids to Microsoft Office Excel is allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowwebexcelexport")]
		public System.Nullable<bool> AllowWebExcelExport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowwebexcelexport");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AllowWebExcelExport");
				this.SetAttributeValue("allowwebexcelexport", value);
				this.OnPropertyChanged("AllowWebExcelExport");
			}
		}
		
		/// <summary>
		/// AM designator to use throughout Microsoft Dynamics CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("amdesignator")]
		public string AMDesignator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("amdesignator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AMDesignator");
				this.SetAttributeValue("amdesignator", value);
				this.OnPropertyChanged("AMDesignator");
			}
		}
		
		/// <summary>
		/// Indicates whether the appDesignerExperience is enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("appdesignerexperienceenabled")]
		public System.Nullable<bool> AppDesignerExperienceEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("appdesignerexperienceenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AppDesignerExperienceEnabled");
				this.SetAttributeValue("appdesignerexperienceenabled", value);
				this.OnPropertyChanged("AppDesignerExperienceEnabled");
			}
		}
		
		/// <summary>
		/// Information on whether rich editing experience for Appointment is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("appointmentricheditorexperience")]
		public System.Nullable<bool> AppointmentRichEditorExperience
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("appointmentricheditorexperience");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AppointmentRichEditorExperience");
				this.SetAttributeValue("appointmentricheditorexperience", value);
				this.OnPropertyChanged("AppointmentRichEditorExperience");
			}
		}
		
		/// <summary>
		/// Audit Retention Period settings stored in Organization Database.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("auditretentionperiod")]
		public System.Nullable<int> AuditRetentionPeriod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("auditretentionperiod");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AuditRetentionPeriod");
				this.SetAttributeValue("auditretentionperiod", value);
				this.OnPropertyChanged("AuditRetentionPeriod");
			}
		}
		
		/// <summary>
		/// Select whether to auto apply the default customer entitlement on case creation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("autoapplydefaultoncasecreate")]
		public System.Nullable<bool> AutoApplyDefaultonCaseCreate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("autoapplydefaultoncasecreate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AutoApplyDefaultonCaseCreate");
				this.SetAttributeValue("autoapplydefaultoncasecreate", value);
				this.OnPropertyChanged("AutoApplyDefaultonCaseCreate");
			}
		}
		
		/// <summary>
		/// Select whether to auto apply the default customer entitlement on case update.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("autoapplydefaultoncaseupdate")]
		public System.Nullable<bool> AutoApplyDefaultonCaseUpdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("autoapplydefaultoncaseupdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AutoApplyDefaultonCaseUpdate");
				this.SetAttributeValue("autoapplydefaultoncaseupdate", value);
				this.OnPropertyChanged("AutoApplyDefaultonCaseUpdate");
			}
		}
		
		/// <summary>
		/// Indicates whether to Auto-apply SLA on case record update after SLA was manually applied.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("autoapplysla")]
		public System.Nullable<bool> AutoApplySLA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("autoapplysla");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AutoApplySLA");
				this.SetAttributeValue("autoapplysla", value);
				this.OnPropertyChanged("AutoApplySLA");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("azureschedulerjobcollectionname")]
		public string AzureSchedulerJobCollectionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("azureschedulerjobcollectionname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AzureSchedulerJobCollectionName");
				this.SetAttributeValue("azureschedulerjobcollectionname", value);
				this.OnPropertyChanged("AzureSchedulerJobCollectionName");
			}
		}
		
		/// <summary>
		/// Unique identifier of the base currency of the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("basecurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference BaseCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("basecurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BaseCurrencyId");
				this.SetAttributeValue("basecurrencyid", value);
				this.OnPropertyChanged("BaseCurrencyId");
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("basecurrencyprecision")]
		public System.Nullable<int> BaseCurrencyPrecision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("basecurrencyprecision");
			}
		}
		
		/// <summary>
		/// Symbol used for the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("basecurrencysymbol")]
		public string BaseCurrencySymbol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("basecurrencysymbol");
			}
		}
		
		/// <summary>
		/// Api Key to be used in requests to Bing Maps services.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bingmapsapikey")]
		public string BingMapsApiKey
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("bingmapsapikey");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BingMapsApiKey");
				this.SetAttributeValue("bingmapsapikey", value);
				this.OnPropertyChanged("BingMapsApiKey");
			}
		}
		
		/// <summary>
		/// Prevent upload or download of certain attachment types that are considered dangerous.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("blockedattachments")]
		public string BlockedAttachments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("blockedattachments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BlockedAttachments");
				this.SetAttributeValue("blockedattachments", value);
				this.OnPropertyChanged("BlockedAttachments");
			}
		}
		
		/// <summary>
		/// Display cards in expanded state for interactive dashboard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bounddashboarddefaultcardexpanded")]
		public System.Nullable<bool> BoundDashboardDefaultCardExpanded
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("bounddashboarddefaultcardexpanded");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BoundDashboardDefaultCardExpanded");
				this.SetAttributeValue("bounddashboarddefaultcardexpanded", value);
				this.OnPropertyChanged("BoundDashboardDefaultCardExpanded");
			}
		}
		
		/// <summary>
		/// Prefix used for bulk operation numbering.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bulkoperationprefix")]
		public string BulkOperationPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("bulkoperationprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BulkOperationPrefix");
				this.SetAttributeValue("bulkoperationprefix", value);
				this.OnPropertyChanged("BulkOperationPrefix");
			}
		}
		
		/// <summary>
		/// BusinessCardOptions
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesscardoptions")]
		public string BusinessCardOptions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("businesscardoptions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BusinessCardOptions");
				this.SetAttributeValue("businesscardoptions", value);
				this.OnPropertyChanged("BusinessCardOptions");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business closure calendar of organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessclosurecalendarid")]
		public System.Nullable<System.Guid> BusinessClosureCalendarId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("businessclosurecalendarid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BusinessClosureCalendarId");
				this.SetAttributeValue("businessclosurecalendarid", value);
				this.OnPropertyChanged("BusinessClosureCalendarId");
			}
		}
		
		/// <summary>
		/// Calendar type for the system. Set to Gregorian US by default.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("calendartype")]
		public System.Nullable<int> CalendarType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("calendartype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CalendarType");
				this.SetAttributeValue("calendartype", value);
				this.OnPropertyChanged("CalendarType");
			}
		}
		
		/// <summary>
		/// Prefix used for campaign numbering.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("campaignprefix")]
		public string CampaignPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("campaignprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CampaignPrefix");
				this.SetAttributeValue("campaignprefix", value);
				this.OnPropertyChanged("CampaignPrefix");
			}
		}
		
		/// <summary>
		/// Flag to cascade Update on incident.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cascadestatusupdate")]
		public System.Nullable<bool> CascadeStatusUpdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cascadestatusupdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CascadeStatusUpdate");
				this.SetAttributeValue("cascadestatusupdate", value);
				this.OnPropertyChanged("CascadeStatusUpdate");
			}
		}
		
		/// <summary>
		/// Prefix to use for all cases throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("caseprefix")]
		public string CasePrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("caseprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CasePrefix");
				this.SetAttributeValue("caseprefix", value);
				this.OnPropertyChanged("CasePrefix");
			}
		}
		
		/// <summary>
		/// Type the prefix to use for all categories in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("categoryprefix")]
		public string CategoryPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("categoryprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CategoryPrefix");
				this.SetAttributeValue("categoryprefix", value);
				this.OnPropertyChanged("CategoryPrefix");
			}
		}
		
		/// <summary>
		/// Client Features to be enabled as an XML BLOB.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientfeatureset")]
		public string ClientFeatureSet
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("clientfeatureset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ClientFeatureSet");
				this.SetAttributeValue("clientfeatureset", value);
				this.OnPropertyChanged("ClientFeatureSet");
			}
		}
		
		/// <summary>
		/// Policy configuration for CSP
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contentsecuritypolicyconfiguration")]
		public string ContentSecurityPolicyConfiguration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("contentsecuritypolicyconfiguration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ContentSecurityPolicyConfiguration");
				this.SetAttributeValue("contentsecuritypolicyconfiguration", value);
				this.OnPropertyChanged("ContentSecurityPolicyConfiguration");
			}
		}
		
		/// <summary>
		/// Prefix to use for all contracts throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractprefix")]
		public string ContractPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("contractprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ContractPrefix");
				this.SetAttributeValue("contractprefix", value);
				this.OnPropertyChanged("ContractPrefix");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature CortanaProactiveExperience Flow processes should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cortanaproactiveexperienceenabled")]
		public System.Nullable<bool> CortanaProactiveExperienceEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cortanaproactiveexperienceenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CortanaProactiveExperienceEnabled");
				this.SetAttributeValue("cortanaproactiveexperienceenabled", value);
				this.OnPropertyChanged("CortanaProactiveExperienceEnabled");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the organization was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Enable Initial state of newly created products to be Active instead of Draft
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createproductswithoutparentinactivestate")]
		public System.Nullable<bool> CreateProductsWithoutParentInActiveState
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("createproductswithoutparentinactivestate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreateProductsWithoutParentInActiveState");
				this.SetAttributeValue("createproductswithoutparentinactivestate", value);
				this.OnPropertyChanged("CreateProductsWithoutParentInActiveState");
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencydecimalprecision")]
		public System.Nullable<int> CurrencyDecimalPrecision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currencydecimalprecision");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrencyDecimalPrecision");
				this.SetAttributeValue("currencydecimalprecision", value);
				this.OnPropertyChanged("CurrencyDecimalPrecision");
			}
		}
		
		/// <summary>
		/// Indicates whether to display money fields with currency code or currency symbol.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencydisplayoption")]
		public virtual Organization_CurrencyDisplayOption? CurrencyDisplayOption
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_CurrencyDisplayOption?)(EntityOptionSetEnum.GetEnum(this, "currencydisplayoption")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrencyDisplayOption");
				this.SetAttributeValue("currencydisplayoption", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("CurrencyDisplayOption");
			}
		}
		
		/// <summary>
		/// Information about how currency symbols are placed throughout Microsoft Dynamics CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyformatcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue CurrencyFormatCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("currencyformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrencyFormatCode");
				this.SetAttributeValue("currencyformatcode", value);
				this.OnPropertyChanged("CurrencyFormatCode");
			}
		}
		
		/// <summary>
		/// Symbol used for currency throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencysymbol")]
		public string CurrencySymbol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("currencysymbol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrencySymbol");
				this.SetAttributeValue("currencysymbol", value);
				this.OnPropertyChanged("CurrencySymbol");
			}
		}
		
		/// <summary>
		/// Current bulk operation number. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentbulkoperationnumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentBulkOperationNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentbulkoperationnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentBulkOperationNumber");
				this.SetAttributeValue("currentbulkoperationnumber", value);
				this.OnPropertyChanged("CurrentBulkOperationNumber");
			}
		}
		
		/// <summary>
		/// Current campaign number. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentcampaignnumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentCampaignNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentcampaignnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentCampaignNumber");
				this.SetAttributeValue("currentcampaignnumber", value);
				this.OnPropertyChanged("CurrentCampaignNumber");
			}
		}
		
		/// <summary>
		/// First case number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentcasenumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentCaseNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentcasenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentCaseNumber");
				this.SetAttributeValue("currentcasenumber", value);
				this.OnPropertyChanged("CurrentCaseNumber");
			}
		}
		
		/// <summary>
		/// Enter the first number to use for Categories. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentcategorynumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentCategoryNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentcategorynumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentCategoryNumber");
				this.SetAttributeValue("currentcategorynumber", value);
				this.OnPropertyChanged("CurrentCategoryNumber");
			}
		}
		
		/// <summary>
		/// First contract number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentcontractnumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentContractNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentcontractnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentContractNumber");
				this.SetAttributeValue("currentcontractnumber", value);
				this.OnPropertyChanged("CurrentContractNumber");
			}
		}
		
		/// <summary>
		/// Import sequence to use.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentimportsequencenumber")]
		public System.Nullable<int> CurrentImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentimportsequencenumber");
			}
		}
		
		/// <summary>
		/// First invoice number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentinvoicenumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentInvoiceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentinvoicenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentInvoiceNumber");
				this.SetAttributeValue("currentinvoicenumber", value);
				this.OnPropertyChanged("CurrentInvoiceNumber");
			}
		}
		
		/// <summary>
		/// Enter the first number to use for knowledge articles. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentkanumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentKaNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentkanumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentKaNumber");
				this.SetAttributeValue("currentkanumber", value);
				this.OnPropertyChanged("CurrentKaNumber");
			}
		}
		
		/// <summary>
		/// First article number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentkbnumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentKbNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentkbnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentKbNumber");
				this.SetAttributeValue("currentkbnumber", value);
				this.OnPropertyChanged("CurrentKbNumber");
			}
		}
		
		/// <summary>
		/// First order number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentordernumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentOrderNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentordernumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentOrderNumber");
				this.SetAttributeValue("currentordernumber", value);
				this.OnPropertyChanged("CurrentOrderNumber");
			}
		}
		
		/// <summary>
		/// First parsed table number to use.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentparsedtablenumber")]
		public System.Nullable<int> CurrentParsedTableNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentparsedtablenumber");
			}
		}
		
		/// <summary>
		/// First quote number to use. Deprecated. Use SetAutoNumberSeed message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentquotenumber")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> CurrentQuoteNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currentquotenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CurrentQuoteNumber");
				this.SetAttributeValue("currentquotenumber", value);
				this.OnPropertyChanged("CurrentQuoteNumber");
			}
		}
		
		/// <summary>
		/// Information about how the date is displayed throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dateformatcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue DateFormatCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("dateformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DateFormatCode");
				this.SetAttributeValue("dateformatcode", value);
				this.OnPropertyChanged("DateFormatCode");
			}
		}
		
		/// <summary>
		/// String showing how the date is displayed throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dateformatstring")]
		public string DateFormatString
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dateformatstring");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DateFormatString");
				this.SetAttributeValue("dateformatstring", value);
				this.OnPropertyChanged("DateFormatString");
			}
		}
		
		/// <summary>
		/// Character used to separate the month, the day, and the year in dates throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dateseparator")]
		public string DateSeparator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dateseparator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DateSeparator");
				this.SetAttributeValue("dateseparator", value);
				this.OnPropertyChanged("DateSeparator");
			}
		}
		
		/// <summary>
		/// The maximum value for the Mobile Offline setting Days since record last modified
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dayssincerecordlastmodifiedmaxvalue")]
		public System.Nullable<int> DaysSinceRecordLastModifiedMaxValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dayssincerecordlastmodifiedmaxvalue");
			}
		}
		
		/// <summary>
		/// Symbol used for decimal in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decimalsymbol")]
		public string DecimalSymbol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("decimalsymbol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DecimalSymbol");
				this.SetAttributeValue("decimalsymbol", value);
				this.OnPropertyChanged("DecimalSymbol");
			}
		}
		
		/// <summary>
		/// Text area to enter default country code.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultcountrycode")]
		public string DefaultCountryCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("defaultcountrycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DefaultCountryCode");
				this.SetAttributeValue("defaultcountrycode", value);
				this.OnPropertyChanged("DefaultCountryCode");
			}
		}
		
		/// <summary>
		/// Name of the default crm custom.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultcrmcustomname")]
		public string DefaultCrmCustomName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("defaultcrmcustomname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DefaultCrmCustomName");
				this.SetAttributeValue("defaultcrmcustomname", value);
				this.OnPropertyChanged("DefaultCrmCustomName");
			}
		}
		
		/// <summary>
		/// Unique identifier of the default email server profile.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultemailserverprofileid")]
		public Microsoft.Xrm.Sdk.EntityReference DefaultEmailServerProfileId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultemailserverprofileid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DefaultEmailServerProfileId");
				this.SetAttributeValue("defaultemailserverprofileid", value);
				this.OnPropertyChanged("DefaultEmailServerProfileId");
			}
		}
		
		/// <summary>
		/// XML string containing the default email settings that are applied when a user or queue is created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultemailsettings")]
		public string DefaultEmailSettings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("defaultemailsettings");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DefaultEmailSettings");
				this.SetAttributeValue("defaultemailsettings", value);
				this.OnPropertyChanged("DefaultEmailSettings");
			}
		}
		
		/// <summary>
		/// Unique identifier of the default mobile offline profile.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultmobileofflineprofileid")]
		public Microsoft.Xrm.Sdk.EntityReference DefaultMobileOfflineProfileId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultmobileofflineprofileid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DefaultMobileOfflineProfileId");
				this.SetAttributeValue("defaultmobileofflineprofileid", value);
				this.OnPropertyChanged("DefaultMobileOfflineProfileId");
			}
		}
		
		/// <summary>
		/// Type of default recurrence end range date.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultrecurrenceendrangetype")]
		public virtual Organization_DefaultRecurrenceEndRangeType? DefaultRecurrenceEndRangeType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_DefaultRecurrenceEndRangeType?)(EntityOptionSetEnum.GetEnum(this, "defaultrecurrenceendrangetype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DefaultRecurrenceEndRangeType");
				this.SetAttributeValue("defaultrecurrenceendrangetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("DefaultRecurrenceEndRangeType");
			}
		}
		
		/// <summary>
		/// Default theme data for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultthemedata")]
		public string DefaultThemeData
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("defaultthemedata");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DefaultThemeData");
				this.SetAttributeValue("defaultthemedata", value);
				this.OnPropertyChanged("DefaultThemeData");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegated admin user for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("delegatedadminuserid")]
		public System.Nullable<System.Guid> DelegatedAdminUserId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("delegatedadminuserid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DelegatedAdminUserId");
				this.SetAttributeValue("delegatedadminuserid", value);
				this.OnPropertyChanged("DelegatedAdminUserId");
			}
		}
		
		/// <summary>
		/// Reason for disabling the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("disabledreason")]
		public string DisabledReason
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("disabledreason");
			}
		}
		
		/// <summary>
		/// Indicates whether Social Care is disabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("disablesocialcare")]
		public System.Nullable<bool> DisableSocialCare
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("disablesocialcare");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DisableSocialCare");
				this.SetAttributeValue("disablesocialcare", value);
				this.OnPropertyChanged("DisableSocialCare");
			}
		}
		
		/// <summary>
		/// Discount calculation method for the QOOI product.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discountcalculationmethod")]
		public virtual Organization_DiscountCalculationMethod? DiscountCalculationMethod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_DiscountCalculationMethod?)(EntityOptionSetEnum.GetEnum(this, "discountcalculationmethod")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DiscountCalculationMethod");
				this.SetAttributeValue("discountcalculationmethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("DiscountCalculationMethod");
			}
		}
		
		/// <summary>
		/// Indicates whether or not navigation tour is displayed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("displaynavigationtour")]
		public System.Nullable<bool> DisplayNavigationTour
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("displaynavigationtour");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DisplayNavigationTour");
				this.SetAttributeValue("displaynavigationtour", value);
				this.OnPropertyChanged("DisplayNavigationTour");
			}
		}
		
		/// <summary>
		/// Select if you want to use the Email Router or server-side synchronization for email processing.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailconnectionchannel")]
		public virtual Organization_EmailConnectionChannel? EmailConnectionChannel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_EmailConnectionChannel?)(EntityOptionSetEnum.GetEnum(this, "emailconnectionchannel")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EmailConnectionChannel");
				this.SetAttributeValue("emailconnectionchannel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("EmailConnectionChannel");
			}
		}
		
		/// <summary>
		/// Flag to turn email correlation on or off.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailcorrelationenabled")]
		public System.Nullable<bool> EmailCorrelationEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("emailcorrelationenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EmailCorrelationEnabled");
				this.SetAttributeValue("emailcorrelationenabled", value);
				this.OnPropertyChanged("EmailCorrelationEnabled");
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for sending email in Microsoft Office Outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsendpollingperiod")]
		public System.Nullable<int> EmailSendPollingPeriod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("emailsendpollingperiod");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EmailSendPollingPeriod");
				this.SetAttributeValue("emailsendpollingperiod", value);
				this.OnPropertyChanged("EmailSendPollingPeriod");
			}
		}
		
		/// <summary>
		/// Enable Integration with Bing Maps
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablebingmapsintegration")]
		public System.Nullable<bool> EnableBingMapsIntegration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enablebingmapsintegration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnableBingMapsIntegration");
				this.SetAttributeValue("enablebingmapsintegration", value);
				this.OnPropertyChanged("EnableBingMapsIntegration");
			}
		}
		
		/// <summary>
		/// Enable Integration with Immersive Skype
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enableimmersiveskypeintegration")]
		public System.Nullable<bool> EnableImmersiveSkypeIntegration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enableimmersiveskypeintegration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnableImmersiveSkypeIntegration");
				this.SetAttributeValue("enableimmersiveskypeintegration", value);
				this.OnPropertyChanged("EnableImmersiveSkypeIntegration");
			}
		}
		
		/// <summary>
		/// Indicates whether the user has enabled or disabled Live Persona Card feature in UCI.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablelivepersonacarduci")]
		public System.Nullable<bool> EnableLivePersonaCardUCI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enablelivepersonacarduci");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnableLivePersonaCardUCI");
				this.SetAttributeValue("enablelivepersonacarduci", value);
				this.OnPropertyChanged("EnableLivePersonaCardUCI");
			}
		}
		
		/// <summary>
		/// Indicates whether the user has enabled or disabled LivePersonCardIntegration in Office.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablelivepersoncardintegrationinoffice")]
		public System.Nullable<bool> EnableLivePersonCardIntegrationInOffice
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enablelivepersoncardintegrationinoffice");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnableLivePersonCardIntegrationInOffice");
				this.SetAttributeValue("enablelivepersoncardintegrationinoffice", value);
				this.OnPropertyChanged("EnableLivePersonCardIntegrationInOffice");
			}
		}
		
		/// <summary>
		/// Select to enable learning path auhtoring.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablelpauthoring")]
		public System.Nullable<bool> EnableLPAuthoring
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enablelpauthoring");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnableLPAuthoring");
				this.SetAttributeValue("enablelpauthoring", value);
				this.OnPropertyChanged("EnableLPAuthoring");
			}
		}
		
		/// <summary>
		/// Enable Integration with Microsoft Flow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablemicrosoftflowintegration")]
		public System.Nullable<bool> EnableMicrosoftFlowIntegration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enablemicrosoftflowintegration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnableMicrosoftFlowIntegration");
				this.SetAttributeValue("enablemicrosoftflowintegration", value);
				this.OnPropertyChanged("EnableMicrosoftFlowIntegration");
			}
		}
		
		/// <summary>
		/// Enable pricing calculations on a Create call.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablepricingoncreate")]
		public System.Nullable<bool> EnablePricingOnCreate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enablepricingoncreate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnablePricingOnCreate");
				this.SetAttributeValue("enablepricingoncreate", value);
				this.OnPropertyChanged("EnablePricingOnCreate");
			}
		}
		
		/// <summary>
		/// Use Smart Matching.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablesmartmatching")]
		public System.Nullable<bool> EnableSmartMatching
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enablesmartmatching");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnableSmartMatching");
				this.SetAttributeValue("enablesmartmatching", value);
				this.OnPropertyChanged("EnableSmartMatching");
			}
		}
		
		/// <summary>
		/// Enable site map and commanding update
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enableunifiedinterfaceshellrefresh")]
		public System.Nullable<bool> EnableUnifiedInterfaceShellRefresh
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enableunifiedinterfaceshellrefresh");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnableUnifiedInterfaceShellRefresh");
				this.SetAttributeValue("enableunifiedinterfaceshellrefresh", value);
				this.OnPropertyChanged("EnableUnifiedInterfaceShellRefresh");
			}
		}
		
		/// <summary>
		/// Organization setting to enforce read only plugins.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enforcereadonlyplugins")]
		public System.Nullable<bool> EnforceReadOnlyPlugins
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enforcereadonlyplugins");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EnforceReadOnlyPlugins");
				this.SetAttributeValue("enforcereadonlyplugins", value);
				this.OnPropertyChanged("EnforceReadOnlyPlugins");
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityImage");
				this.SetAttributeValue("entityimage", value);
				this.OnPropertyChanged("EntityImage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Maximum number of days to keep change tracking deleted records
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expirechangetrackingindays")]
		public System.Nullable<int> ExpireChangeTrackingInDays
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("expirechangetrackingindays");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExpireChangeTrackingInDays");
				this.SetAttributeValue("expirechangetrackingindays", value);
				this.OnPropertyChanged("ExpireChangeTrackingInDays");
			}
		}
		
		/// <summary>
		/// Maximum number of days before deleting inactive subscriptions.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expiresubscriptionsindays")]
		public System.Nullable<int> ExpireSubscriptionsInDays
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("expiresubscriptionsindays");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExpireSubscriptionsInDays");
				this.SetAttributeValue("expiresubscriptionsindays", value);
				this.OnPropertyChanged("ExpireSubscriptionsInDays");
			}
		}
		
		/// <summary>
		/// Specify the base URL to use to look for external document suggestions.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalbaseurl")]
		public string ExternalBaseUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("externalbaseurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExternalBaseUrl");
				this.SetAttributeValue("externalbaseurl", value);
				this.OnPropertyChanged("ExternalBaseUrl");
			}
		}
		
		/// <summary>
		/// XML string containing the ExternalPartyEnabled entities correlation keys for association of existing External Party instance entities to newly created IsExternalPartyEnabled entities.For internal use only
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalpartycorrelationkeys")]
		public string ExternalPartyCorrelationKeys
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("externalpartycorrelationkeys");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExternalPartyCorrelationKeys");
				this.SetAttributeValue("externalpartycorrelationkeys", value);
				this.OnPropertyChanged("ExternalPartyCorrelationKeys");
			}
		}
		
		/// <summary>
		/// XML string containing the ExternalPartyEnabled entities settings.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalpartyentitysettings")]
		public string ExternalPartyEntitySettings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("externalpartyentitysettings");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExternalPartyEntitySettings");
				this.SetAttributeValue("externalpartyentitysettings", value);
				this.OnPropertyChanged("ExternalPartyEntitySettings");
			}
		}
		
		/// <summary>
		/// Features to be enabled as an XML BLOB.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("featureset")]
		public string FeatureSet
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("featureset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FeatureSet");
				this.SetAttributeValue("featureset", value);
				this.OnPropertyChanged("FeatureSet");
			}
		}
		
		/// <summary>
		/// Start date for the fiscal period that is to be used throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalcalendarstart")]
		public System.Nullable<System.DateTime> FiscalCalendarStart
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("fiscalcalendarstart");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalCalendarStart");
				this.SetAttributeValue("fiscalcalendarstart", value);
				this.OnPropertyChanged("FiscalCalendarStart");
			}
		}
		
		/// <summary>
		/// Information that specifies how the name of the fiscal period is displayed throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalperiodformat")]
		public string FiscalPeriodFormat
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fiscalperiodformat");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalPeriodFormat");
				this.SetAttributeValue("fiscalperiodformat", value);
				this.OnPropertyChanged("FiscalPeriodFormat");
			}
		}
		
		/// <summary>
		/// Format in which the fiscal period will be displayed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalperiodformatperiod")]
		public virtual Organization_FiscalPeriodFormatPeriod? FiscalPeriodFormatPeriod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_FiscalPeriodFormatPeriod?)(EntityOptionSetEnum.GetEnum(this, "fiscalperiodformatperiod")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalPeriodFormatPeriod");
				this.SetAttributeValue("fiscalperiodformatperiod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("FiscalPeriodFormatPeriod");
			}
		}
		
		/// <summary>
		/// Type of fiscal period used throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalperiodtype")]
		public System.Nullable<int> FiscalPeriodType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("fiscalperiodtype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalPeriodType");
				this.SetAttributeValue("fiscalperiodtype", value);
				this.OnPropertyChanged("FiscalPeriodType");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the fiscal settings have been updated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalsettingsupdated")]
		[System.ObsoleteAttribute()]
		public System.Nullable<bool> FiscalSettingsUpdated
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("fiscalsettingsupdated");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the fiscal year should be displayed based on the start date or the end date of the fiscal year.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalyeardisplaycode")]
		public System.Nullable<int> FiscalYearDisplayCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("fiscalyeardisplaycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalYearDisplayCode");
				this.SetAttributeValue("fiscalyeardisplaycode", value);
				this.OnPropertyChanged("FiscalYearDisplayCode");
			}
		}
		
		/// <summary>
		/// Information that specifies how the name of the fiscal year is displayed throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalyearformat")]
		public string FiscalYearFormat
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fiscalyearformat");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalYearFormat");
				this.SetAttributeValue("fiscalyearformat", value);
				this.OnPropertyChanged("FiscalYearFormat");
			}
		}
		
		/// <summary>
		/// Prefix for the display of the fiscal year.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalyearformatprefix")]
		public virtual Organization_FiscalYearFormatPrefix? FiscalYearFormatPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_FiscalYearFormatPrefix?)(EntityOptionSetEnum.GetEnum(this, "fiscalyearformatprefix")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalYearFormatPrefix");
				this.SetAttributeValue("fiscalyearformatprefix", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("FiscalYearFormatPrefix");
			}
		}
		
		/// <summary>
		/// Suffix for the display of the fiscal year.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalyearformatsuffix")]
		public virtual Organization_FiscalYearFormatSuffix? FiscalYearFormatSuffix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_FiscalYearFormatSuffix?)(EntityOptionSetEnum.GetEnum(this, "fiscalyearformatsuffix")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalYearFormatSuffix");
				this.SetAttributeValue("fiscalyearformatsuffix", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("FiscalYearFormatSuffix");
			}
		}
		
		/// <summary>
		/// Format for the year.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalyearformatyear")]
		public virtual Organization_FiscalYearFormatYear? FiscalYearFormatYear
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_FiscalYearFormatYear?)(EntityOptionSetEnum.GetEnum(this, "fiscalyearformatyear")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalYearFormatYear");
				this.SetAttributeValue("fiscalyearformatyear", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("FiscalYearFormatYear");
			}
		}
		
		/// <summary>
		/// Information that specifies how the names of the fiscal year and the fiscal period should be connected when displayed together.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fiscalyearperiodconnect")]
		public string FiscalYearPeriodConnect
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fiscalyearperiodconnect");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FiscalYearPeriodConnect");
				this.SetAttributeValue("fiscalyearperiodconnect", value);
				this.OnPropertyChanged("FiscalYearPeriodConnect");
			}
		}
		
		/// <summary>
		/// Order in which names are to be displayed throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullnameconventioncode")]
		public virtual Organization_FullNameConventionCode? FullNameConventionCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_FullNameConventionCode?)(EntityOptionSetEnum.GetEnum(this, "fullnameconventioncode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FullNameConventionCode");
				this.SetAttributeValue("fullnameconventioncode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("FullNameConventionCode");
			}
		}
		
		/// <summary>
		/// Specifies the maximum number of months in future for which the recurring activities can be created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("futureexpansionwindow")]
		public System.Nullable<int> FutureExpansionWindow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("futureexpansionwindow");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FutureExpansionWindow");
				this.SetAttributeValue("futureexpansionwindow", value);
				this.OnPropertyChanged("FutureExpansionWindow");
			}
		}
		
		/// <summary>
		/// Indicates whether alerts will be generated for errors.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("generatealertsforerrors")]
		public System.Nullable<bool> GenerateAlertsForErrors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("generatealertsforerrors");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GenerateAlertsForErrors");
				this.SetAttributeValue("generatealertsforerrors", value);
				this.OnPropertyChanged("GenerateAlertsForErrors");
			}
		}
		
		/// <summary>
		/// Indicates whether alerts will be generated for information.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("generatealertsforinformation")]
		public System.Nullable<bool> GenerateAlertsForInformation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("generatealertsforinformation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GenerateAlertsForInformation");
				this.SetAttributeValue("generatealertsforinformation", value);
				this.OnPropertyChanged("GenerateAlertsForInformation");
			}
		}
		
		/// <summary>
		/// Indicates whether alerts will be generated for warnings.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("generatealertsforwarnings")]
		public System.Nullable<bool> GenerateAlertsForWarnings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("generatealertsforwarnings");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GenerateAlertsForWarnings");
				this.SetAttributeValue("generatealertsforwarnings", value);
				this.OnPropertyChanged("GenerateAlertsForWarnings");
			}
		}
		
		/// <summary>
		/// Indicates whether Get Started content is enabled for this organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("getstartedpanecontentenabled")]
		public System.Nullable<bool> GetStartedPaneContentEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("getstartedpanecontentenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GetStartedPaneContentEnabled");
				this.SetAttributeValue("getstartedpanecontentenabled", value);
				this.OnPropertyChanged("GetStartedPaneContentEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the append URL parameters is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("globalappendurlparametersenabled")]
		public System.Nullable<bool> GlobalAppendUrlParametersEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("globalappendurlparametersenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GlobalAppendUrlParametersEnabled");
				this.SetAttributeValue("globalappendurlparametersenabled", value);
				this.OnPropertyChanged("GlobalAppendUrlParametersEnabled");
			}
		}
		
		/// <summary>
		/// URL for the web page global help.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("globalhelpurl")]
		public string GlobalHelpUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("globalhelpurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GlobalHelpUrl");
				this.SetAttributeValue("globalhelpurl", value);
				this.OnPropertyChanged("GlobalHelpUrl");
			}
		}
		
		/// <summary>
		/// Indicates whether the customizable global help is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("globalhelpurlenabled")]
		public System.Nullable<bool> GlobalHelpUrlEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("globalhelpurlenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GlobalHelpUrlEnabled");
				this.SetAttributeValue("globalhelpurlenabled", value);
				this.OnPropertyChanged("GlobalHelpUrlEnabled");
			}
		}
		
		/// <summary>
		/// Number of days after the goal's end date after which the rollup of the goal stops automatically.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalrollupexpirytime")]
		public System.Nullable<int> GoalRollupExpiryTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("goalrollupexpirytime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GoalRollupExpiryTime");
				this.SetAttributeValue("goalrollupexpirytime", value);
				this.OnPropertyChanged("GoalRollupExpiryTime");
			}
		}
		
		/// <summary>
		/// Number of hours between automatic rollup jobs .
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("goalrollupfrequency")]
		public System.Nullable<int> GoalRollupFrequency
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("goalrollupfrequency");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GoalRollupFrequency");
				this.SetAttributeValue("goalrollupfrequency", value);
				this.OnPropertyChanged("GoalRollupFrequency");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("grantaccesstonetworkservice")]
		public System.Nullable<bool> GrantAccessToNetworkService
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("grantaccesstonetworkservice");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GrantAccessToNetworkService");
				this.SetAttributeValue("grantaccesstonetworkservice", value);
				this.OnPropertyChanged("GrantAccessToNetworkService");
			}
		}
		
		/// <summary>
		/// Maximum difference allowed between subject keywords count of the email messaged to be correlated
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hashdeltasubjectcount")]
		public System.Nullable<int> HashDeltaSubjectCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("hashdeltasubjectcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("HashDeltaSubjectCount");
				this.SetAttributeValue("hashdeltasubjectcount", value);
				this.OnPropertyChanged("HashDeltaSubjectCount");
			}
		}
		
		/// <summary>
		/// Filter Subject Keywords
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hashfilterkeywords")]
		public string HashFilterKeywords
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("hashfilterkeywords");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("HashFilterKeywords");
				this.SetAttributeValue("hashfilterkeywords", value);
				this.OnPropertyChanged("HashFilterKeywords");
			}
		}
		
		/// <summary>
		/// Maximum number of subject keywords or recipients used for correlation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hashmaxcount")]
		public System.Nullable<int> HashMaxCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("hashmaxcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("HashMaxCount");
				this.SetAttributeValue("hashmaxcount", value);
				this.OnPropertyChanged("HashMaxCount");
			}
		}
		
		/// <summary>
		/// Minimum number of recipients required to match for email messaged to be correlated
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hashminaddresscount")]
		public System.Nullable<int> HashMinAddressCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("hashminaddresscount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("HashMinAddressCount");
				this.SetAttributeValue("hashminaddresscount", value);
				this.OnPropertyChanged("HashMinAddressCount");
			}
		}
		
		/// <summary>
		/// High contrast theme data for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("highcontrastthemedata")]
		public string HighContrastThemeData
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("highcontrastthemedata");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("HighContrastThemeData");
				this.SetAttributeValue("highcontrastthemedata", value);
				this.OnPropertyChanged("HighContrastThemeData");
			}
		}
		
		/// <summary>
		/// Indicates whether incoming email sent by internal Microsoft Dynamics 365 users or queues should be tracked.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreinternalemail")]
		public System.Nullable<bool> IgnoreInternalEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ignoreinternalemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IgnoreInternalEmail");
				this.SetAttributeValue("ignoreinternalemail", value);
				this.OnPropertyChanged("IgnoreInternalEmail");
			}
		}
		
		/// <summary>
		/// Information that specifies whether Inactivity timeout is enabled
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inactivitytimeoutenabled")]
		public System.Nullable<bool> InactivityTimeoutEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("inactivitytimeoutenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InactivityTimeoutEnabled");
				this.SetAttributeValue("inactivitytimeoutenabled", value);
				this.OnPropertyChanged("InactivityTimeoutEnabled");
			}
		}
		
		/// <summary>
		/// Inactivity timeout in minutes
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inactivitytimeoutinmins")]
		public System.Nullable<int> InactivityTimeoutInMins
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("inactivitytimeoutinmins");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InactivityTimeoutInMins");
				this.SetAttributeValue("inactivitytimeoutinmins", value);
				this.OnPropertyChanged("InactivityTimeoutInMins");
			}
		}
		
		/// <summary>
		/// Inactivity timeout reminder in minutes
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inactivitytimeoutreminderinmins")]
		public System.Nullable<int> InactivityTimeoutReminderInMins
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("inactivitytimeoutreminderinmins");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InactivityTimeoutReminderInMins");
				this.SetAttributeValue("inactivitytimeoutreminderinmins", value);
				this.OnPropertyChanged("InactivityTimeoutReminderInMins");
			}
		}
		
		/// <summary>
		/// Setting for the Async Service Mailbox Queue. Defines the retrieval batch size of exchange server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemailexchangeemailretrievalbatchsize")]
		public System.Nullable<int> IncomingEmailExchangeEmailRetrievalBatchSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("incomingemailexchangeemailretrievalbatchsize");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingEmailExchangeEmailRetrievalBatchSize");
				this.SetAttributeValue("incomingemailexchangeemailretrievalbatchsize", value);
				this.OnPropertyChanged("IncomingEmailExchangeEmailRetrievalBatchSize");
			}
		}
		
		/// <summary>
		/// Initial version of the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialversion")]
		public string InitialVersion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("initialversion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InitialVersion");
				this.SetAttributeValue("initialversion", value);
				this.OnPropertyChanged("InitialVersion");
			}
		}
		
		/// <summary>
		/// Unique identifier of the integration user for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("integrationuserid")]
		public System.Nullable<System.Guid> IntegrationUserId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("integrationuserid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IntegrationUserId");
				this.SetAttributeValue("integrationuserid", value);
				this.OnPropertyChanged("IntegrationUserId");
			}
		}
		
		/// <summary>
		/// Prefix to use for all invoice numbers throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("invoiceprefix")]
		public string InvoicePrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("invoiceprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InvoicePrefix");
				this.SetAttributeValue("invoiceprefix", value);
				this.OnPropertyChanged("InvoicePrefix");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Action Card should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isactioncardenabled")]
		public System.Nullable<bool> IsActionCardEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isactioncardenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsActionCardEnabled");
				this.SetAttributeValue("isactioncardenabled", value);
				this.OnPropertyChanged("IsActionCardEnabled");
			}
		}
		
		/// <summary>
		/// Information that specifies whether Action Support Feature is enabled
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isactionsupportfeatureenabled")]
		public System.Nullable<bool> IsActionSupportFeatureEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isactionsupportfeatureenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsActionSupportFeatureEnabled");
				this.SetAttributeValue("isactionsupportfeatureenabled", value);
				this.OnPropertyChanged("IsActionSupportFeatureEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Relationship Analytics should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isactivityanalysisenabled")]
		public System.Nullable<bool> IsActivityAnalysisEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isactivityanalysisenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsActivityAnalysisEnabled");
				this.SetAttributeValue("isactivityanalysisenabled", value);
				this.OnPropertyChanged("IsActivityAnalysisEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether all money attributes are converted to decimal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isallmoneydecimal")]
		public System.Nullable<bool> IsAllMoneyDecimal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isallmoneydecimal");
			}
		}
		
		/// <summary>
		/// Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappmode")]
		public System.Nullable<bool> IsAppMode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isappmode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAppMode");
				this.SetAttributeValue("isappmode", value);
				this.OnPropertyChanged("IsAppMode");
			}
		}
		
		/// <summary>
		/// Enable or disable attachments sync for outlook and exchange.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappointmentattachmentsyncenabled")]
		public System.Nullable<bool> IsAppointmentAttachmentSyncEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isappointmentattachmentsyncenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAppointmentAttachmentSyncEnabled");
				this.SetAttributeValue("isappointmentattachmentsyncenabled", value);
				this.OnPropertyChanged("IsAppointmentAttachmentSyncEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable assigned tasks sync for outlook and exchange.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isassignedtaskssyncenabled")]
		public System.Nullable<bool> IsAssignedTasksSyncEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isassignedtaskssyncenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAssignedTasksSyncEnabled");
				this.SetAttributeValue("isassignedtaskssyncenabled", value);
				this.OnPropertyChanged("IsAssignedTasksSyncEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable auditing of changes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isauditenabled")]
		public System.Nullable<bool> IsAuditEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isauditenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAuditEnabled");
				this.SetAttributeValue("isauditenabled", value);
				this.OnPropertyChanged("IsAuditEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Auto Capture should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isautodatacaptureenabled")]
		public System.Nullable<bool> IsAutoDataCaptureEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isautodatacaptureenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAutoDataCaptureEnabled");
				this.SetAttributeValue("isautodatacaptureenabled", value);
				this.OnPropertyChanged("IsAutoDataCaptureEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the V2 feature of Auto Capture should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isautodatacapturev2enabled")]
		public System.Nullable<bool> IsAutoDataCaptureV2Enabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isautodatacapturev2enabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAutoDataCaptureV2Enabled");
				this.SetAttributeValue("isautodatacapturev2enabled", value);
				this.OnPropertyChanged("IsAutoDataCaptureV2Enabled");
			}
		}
		
		/// <summary>
		/// Information on whether auto save is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isautosaveenabled")]
		public System.Nullable<bool> IsAutoSaveEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isautosaveenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAutoSaveEnabled");
				this.SetAttributeValue("isautosaveenabled", value);
				this.OnPropertyChanged("IsAutoSaveEnabled");
			}
		}
		
		/// <summary>
		/// Information that specifies whether BPF Entity Customization Feature is enabled
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbpfentitycustomizationfeatureenabled")]
		public System.Nullable<bool> IsBPFEntityCustomizationFeatureEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbpfentitycustomizationfeatureenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsBPFEntityCustomizationFeatureEnabled");
				this.SetAttributeValue("isbpfentitycustomizationfeatureenabled", value);
				this.OnPropertyChanged("IsBPFEntityCustomizationFeatureEnabled");
			}
		}
		
		/// <summary>
		/// Information that specifies whether conflict detection for mobile client is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isconflictdetectionenabledformobileclient")]
		public System.Nullable<bool> IsConflictDetectionEnabledForMobileClient
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isconflictdetectionenabledformobileclient");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsConflictDetectionEnabledForMobileClient");
				this.SetAttributeValue("isconflictdetectionenabledformobileclient", value);
				this.OnPropertyChanged("IsConflictDetectionEnabledForMobileClient");
			}
		}
		
		/// <summary>
		/// Enable or disable mailing address sync for outlook and exchange.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscontactmailingaddresssyncenabled")]
		public System.Nullable<bool> IsContactMailingAddressSyncEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscontactmailingaddresssyncenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsContactMailingAddressSyncEnabled");
				this.SetAttributeValue("iscontactmailingaddresssyncenabled", value);
				this.OnPropertyChanged("IsContactMailingAddressSyncEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Content Security Policy has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscontentsecuritypolicyenabled")]
		public System.Nullable<bool> IsContentSecurityPolicyEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscontentsecuritypolicyenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsContentSecurityPolicyEnabled");
				this.SetAttributeValue("iscontentsecuritypolicyenabled", value);
				this.OnPropertyChanged("IsContentSecurityPolicyEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Contextual email experience is enabled on this organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscontextualemailenabled")]
		public System.Nullable<bool> IsContextualEmailEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscontextualemailenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsContextualEmailEnabled");
				this.SetAttributeValue("iscontextualemailenabled", value);
				this.OnPropertyChanged("IsContextualEmailEnabled");
			}
		}
		
		/// <summary>
		/// Select to enable Contextual Help in UCI.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscontextualhelpenabled")]
		public System.Nullable<bool> IsContextualHelpEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscontextualhelpenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsContextualHelpEnabled");
				this.SetAttributeValue("iscontextualhelpenabled", value);
				this.OnPropertyChanged("IsContextualHelpEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Custom Controls in canvas PowerApps feature has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomcontrolsincanvasappsenabled")]
		public System.Nullable<bool> IsCustomControlsInCanvasAppsEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscustomcontrolsincanvasappsenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsCustomControlsInCanvasAppsEnabled");
				this.SetAttributeValue("iscustomcontrolsincanvasappsenabled", value);
				this.OnPropertyChanged("IsCustomControlsInCanvasAppsEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable country code selection.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefaultcountrycodecheckenabled")]
		public System.Nullable<bool> IsDefaultCountryCodeCheckEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdefaultcountrycodecheckenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsDefaultCountryCodeCheckEnabled");
				this.SetAttributeValue("isdefaultcountrycodecheckenabled", value);
				this.OnPropertyChanged("IsDefaultCountryCodeCheckEnabled");
			}
		}
		
		/// <summary>
		/// Enable Delegation Access content
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdelegateaccessenabled")]
		public System.Nullable<bool> IsDelegateAccessEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdelegateaccessenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsDelegateAccessEnabled");
				this.SetAttributeValue("isdelegateaccessenabled", value);
				this.OnPropertyChanged("IsDelegateAccessEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Action Hub should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdelveactionhubintegrationenabled")]
		public System.Nullable<bool> IsDelveActionHubIntegrationEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdelveactionhubintegrationenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsDelveActionHubIntegrationEnabled");
				this.SetAttributeValue("isdelveactionhubintegrationenabled", value);
				this.OnPropertyChanged("IsDelveActionHubIntegrationEnabled");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the organization is disabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdisabled")]
		public System.Nullable<bool> IsDisabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdisabled");
			}
		}
		
		/// <summary>
		/// Indicates whether duplicate detection of records is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isduplicatedetectionenabled")]
		public System.Nullable<bool> IsDuplicateDetectionEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsDuplicateDetectionEnabled");
				this.SetAttributeValue("isduplicatedetectionenabled", value);
				this.OnPropertyChanged("IsDuplicateDetectionEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether duplicate detection of records during import is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isduplicatedetectionenabledforimport")]
		public System.Nullable<bool> IsDuplicateDetectionEnabledForImport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabledforimport");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsDuplicateDetectionEnabledForImport");
				this.SetAttributeValue("isduplicatedetectionenabledforimport", value);
				this.OnPropertyChanged("IsDuplicateDetectionEnabledForImport");
			}
		}
		
		/// <summary>
		/// Indicates whether duplicate detection of records during offline synchronization is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isduplicatedetectionenabledforofflinesync")]
		public System.Nullable<bool> IsDuplicateDetectionEnabledForOfflineSync
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabledforofflinesync");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsDuplicateDetectionEnabledForOfflineSync");
				this.SetAttributeValue("isduplicatedetectionenabledforofflinesync", value);
				this.OnPropertyChanged("IsDuplicateDetectionEnabledForOfflineSync");
			}
		}
		
		/// <summary>
		/// Indicates whether duplicate detection during online create or update is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isduplicatedetectionenabledforonlinecreateupdate")]
		public System.Nullable<bool> IsDuplicateDetectionEnabledForOnlineCreateUpdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabledforonlinecreateupdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsDuplicateDetectionEnabledForOnlineCreateUpdate");
				this.SetAttributeValue("isduplicatedetectionenabledforonlinecreateupdate", value);
				this.OnPropertyChanged("IsDuplicateDetectionEnabledForOnlineCreateUpdate");
			}
		}
		
		/// <summary>
		/// Allow tracking recipient activity on sent emails.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailmonitoringallowed")]
		public System.Nullable<bool> IsEmailMonitoringAllowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isemailmonitoringallowed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsEmailMonitoringAllowed");
				this.SetAttributeValue("isemailmonitoringallowed", value);
				this.OnPropertyChanged("IsEmailMonitoringAllowed");
			}
		}
		
		/// <summary>
		/// Enable Email Server Profile content filtering
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailserverprofilecontentfilteringenabled")]
		public System.Nullable<bool> IsEmailServerProfileContentFilteringEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isemailserverprofilecontentfilteringenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsEmailServerProfileContentFilteringEnabled");
				this.SetAttributeValue("isemailserverprofilecontentfilteringenabled", value);
				this.OnPropertyChanged("IsEmailServerProfileContentFilteringEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether appmodule is enabled for all roles
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isenabledforallroles")]
		public System.Nullable<bool> IsEnabledForAllRoles
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isenabledforallroles");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsEnabledForAllRoles");
				this.SetAttributeValue("isenabledforallroles", value);
				this.OnPropertyChanged("IsEnabledForAllRoles");
			}
		}
		
		/// <summary>
		/// Indicates whether the organization's files are being stored in Azure.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isexternalfilestorageenabled")]
		public System.Nullable<bool> IsExternalFileStorageEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isexternalfilestorageenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsExternalFileStorageEnabled");
				this.SetAttributeValue("isexternalfilestorageenabled", value);
				this.OnPropertyChanged("IsExternalFileStorageEnabled");
			}
		}
		
		/// <summary>
		/// Select whether data can be synchronized with an external search index.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isexternalsearchindexenabled")]
		public System.Nullable<bool> IsExternalSearchIndexEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isexternalsearchindexenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsExternalSearchIndexEnabled");
				this.SetAttributeValue("isexternalsearchindexenabled", value);
				this.OnPropertyChanged("IsExternalSearchIndexEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the fiscal period is displayed as the month number.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfiscalperiodmonthbased")]
		public System.Nullable<bool> IsFiscalPeriodMonthBased
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isfiscalperiodmonthbased");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsFiscalPeriodMonthBased");
				this.SetAttributeValue("isfiscalperiodmonthbased", value);
				this.OnPropertyChanged("IsFiscalPeriodMonthBased");
			}
		}
		
		/// <summary>
		/// Select whether folders should be automatically created on SharePoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfolderautocreatedonsp")]
		public System.Nullable<bool> IsFolderAutoCreatedonSP
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isfolderautocreatedonsp");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsFolderAutoCreatedonSP");
				this.SetAttributeValue("isfolderautocreatedonsp", value);
				this.OnPropertyChanged("IsFolderAutoCreatedonSP");
			}
		}
		
		/// <summary>
		/// Enable or disable folder based tracking for Server Side Sync.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfolderbasedtrackingenabled")]
		public System.Nullable<bool> IsFolderBasedTrackingEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isfolderbasedtrackingenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsFolderBasedTrackingEnabled");
				this.SetAttributeValue("isfolderbasedtrackingenabled", value);
				this.OnPropertyChanged("IsFolderBasedTrackingEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether full-text search for Quick Find entities should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfulltextsearchenabled")]
		public System.Nullable<bool> IsFullTextSearchEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isfulltextsearchenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsFullTextSearchEnabled");
				this.SetAttributeValue("isfulltextsearchenabled", value);
				this.OnPropertyChanged("IsFullTextSearchEnabled");
			}
		}
		
		/// <summary>
		/// Enable Hierarchical Security Model
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ishierarchicalsecuritymodelenabled")]
		public System.Nullable<bool> IsHierarchicalSecurityModelEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ishierarchicalsecuritymodelenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsHierarchicalSecurityModelEnabled");
				this.SetAttributeValue("ishierarchicalsecuritymodelenabled", value);
				this.OnPropertyChanged("IsHierarchicalSecurityModelEnabled");
			}
		}
		
		/// <summary>
		/// Give Consent to use LUIS in Dynamics 365 Bot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isluisenabledford365bot")]
		public System.Nullable<bool> IsLUISEnabledforD365Bot
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isluisenabledford365bot");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsLUISEnabledforD365Bot");
				this.SetAttributeValue("isluisenabledford365bot", value);
				this.OnPropertyChanged("IsLUISEnabledforD365Bot");
			}
		}
		
		/// <summary>
		/// Enable or disable forced unlocking for Server Side Sync mailboxes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismailboxforcedunlockingenabled")]
		public System.Nullable<bool> IsMailboxForcedUnlockingEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismailboxforcedunlockingenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMailboxForcedUnlockingEnabled");
				this.SetAttributeValue("ismailboxforcedunlockingenabled", value);
				this.OnPropertyChanged("IsMailboxForcedUnlockingEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable mailbox keep alive for Server Side Sync.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismailboxinactivebackoffenabled")]
		public System.Nullable<bool> IsMailboxInactiveBackoffEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismailboxinactivebackoffenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMailboxInactiveBackoffEnabled");
				this.SetAttributeValue("ismailboxinactivebackoffenabled", value);
				this.OnPropertyChanged("IsMailboxInactiveBackoffEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Manual Sales Forecasting feature has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanualsalesforecastingenabled")]
		public System.Nullable<bool> IsManualSalesForecastingEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanualsalesforecastingenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsManualSalesForecastingEnabled");
				this.SetAttributeValue("ismanualsalesforecastingenabled", value);
				this.OnPropertyChanged("IsManualSalesForecastingEnabled");
			}
		}
		
		/// <summary>
		/// Information that specifies whether mobile client on demand sync is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismobileclientondemandsyncenabled")]
		public System.Nullable<bool> IsMobileClientOnDemandSyncEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismobileclientondemandsyncenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMobileClientOnDemandSyncEnabled");
				this.SetAttributeValue("ismobileclientondemandsyncenabled", value);
				this.OnPropertyChanged("IsMobileClientOnDemandSyncEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature MobileOffline should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismobileofflineenabled")]
		public System.Nullable<bool> IsMobileOfflineEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismobileofflineenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMobileOfflineEnabled");
				this.SetAttributeValue("ismobileofflineenabled", value);
				this.OnPropertyChanged("IsMobileOfflineEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Microsoft Teams Collaboration feature has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismsteamscollaborationenabled")]
		public System.Nullable<bool> IsMSTeamsCollaborationEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismsteamscollaborationenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMSTeamsCollaborationEnabled");
				this.SetAttributeValue("ismsteamscollaborationenabled", value);
				this.OnPropertyChanged("IsMSTeamsCollaborationEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Microsoft Teams integration has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismsteamsenabled")]
		public System.Nullable<bool> IsMSTeamsEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismsteamsenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMSTeamsEnabled");
				this.SetAttributeValue("ismsteamsenabled", value);
				this.OnPropertyChanged("IsMSTeamsEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the user has enabled or disabled Microsoft Teams integration.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismsteamssettingchangedbyuser")]
		public System.Nullable<bool> IsMSTeamsSettingChangedByUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismsteamssettingchangedbyuser");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMSTeamsSettingChangedByUser");
				this.SetAttributeValue("ismsteamssettingchangedbyuser", value);
				this.OnPropertyChanged("IsMSTeamsSettingChangedByUser");
			}
		}
		
		/// <summary>
		/// Indicates whether Microsoft Teams User Sync feature has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismsteamsusersyncenabled")]
		public System.Nullable<bool> IsMSTeamsUserSyncEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismsteamsusersyncenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMSTeamsUserSyncEnabled");
				this.SetAttributeValue("ismsteamsusersyncenabled", value);
				this.OnPropertyChanged("IsMSTeamsUserSyncEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether new add product experience is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnewaddproductexperienceenabled")]
		public System.Nullable<bool> IsNewAddProductExperienceEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isnewaddproductexperienceenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsNewAddProductExperienceEnabled");
				this.SetAttributeValue("isnewaddproductexperienceenabled", value);
				this.OnPropertyChanged("IsNewAddProductExperienceEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Notes Analysis should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnotesanalysisenabled")]
		public System.Nullable<bool> IsNotesAnalysisEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isnotesanalysisenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsNotesAnalysisEnabled");
				this.SetAttributeValue("isnotesanalysisenabled", value);
				this.OnPropertyChanged("IsNotesAnalysisEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature OfficeGraph should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isofficegraphenabled")]
		public System.Nullable<bool> IsOfficeGraphEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isofficegraphenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsOfficeGraphEnabled");
				this.SetAttributeValue("isofficegraphenabled", value);
				this.OnPropertyChanged("IsOfficeGraphEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature One Drive should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isonedriveenabled")]
		public System.Nullable<bool> IsOneDriveEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isonedriveenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsOneDriveEnabled");
				this.SetAttributeValue("isonedriveenabled", value);
				this.OnPropertyChanged("IsOneDriveEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether PAI feature has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispaienabled")]
		public System.Nullable<bool> IsPAIEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispaienabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsPAIEnabled");
				this.SetAttributeValue("ispaienabled", value);
				this.OnPropertyChanged("IsPAIEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether PDF Generation feature has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispdfgenerationenabled")]
		public string IsPDFGenerationEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ispdfgenerationenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsPDFGenerationEnabled");
				this.SetAttributeValue("ispdfgenerationenabled", value);
				this.OnPropertyChanged("IsPDFGenerationEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether playbook feature has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isplaybookenabled")]
		public System.Nullable<bool> IsPlaybookEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isplaybookenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsPlaybookEnabled");
				this.SetAttributeValue("isplaybookenabled", value);
				this.OnPropertyChanged("IsPlaybookEnabled");
			}
		}
		
		/// <summary>
		/// Information on whether IM presence is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispresenceenabled")]
		public System.Nullable<bool> IsPresenceEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispresenceenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsPresenceEnabled");
				this.SetAttributeValue("ispresenceenabled", value);
				this.OnPropertyChanged("IsPresenceEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the Preview feature for Action Card should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispreviewenabledforactioncard")]
		public System.Nullable<bool> IsPreviewEnabledForActionCard
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispreviewenabledforactioncard");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsPreviewEnabledForActionCard");
				this.SetAttributeValue("ispreviewenabledforactioncard", value);
				this.OnPropertyChanged("IsPreviewEnabledForActionCard");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Auto Capture should be enabled for the organization at Preview Settings.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispreviewforautocaptureenabled")]
		public System.Nullable<bool> IsPreviewForAutoCaptureEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispreviewforautocaptureenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsPreviewForAutoCaptureEnabled");
				this.SetAttributeValue("ispreviewforautocaptureenabled", value);
				this.OnPropertyChanged("IsPreviewForAutoCaptureEnabled");
			}
		}
		
		/// <summary>
		/// Is Preview For Email Monitoring Allowed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispreviewforemailmonitoringallowed")]
		public System.Nullable<bool> IsPreviewForEmailMonitoringAllowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispreviewforemailmonitoringallowed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsPreviewForEmailMonitoringAllowed");
				this.SetAttributeValue("ispreviewforemailmonitoringallowed", value);
				this.OnPropertyChanged("IsPreviewForEmailMonitoringAllowed");
			}
		}
		
		/// <summary>
		/// Indicates whether PriceList is mandatory for adding existing products to sales entities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispricelistmandatory")]
		public System.Nullable<bool> IsPriceListMandatory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispricelistmandatory");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsPriceListMandatory");
				this.SetAttributeValue("ispricelistmandatory", value);
				this.OnPropertyChanged("IsPriceListMandatory");
			}
		}
		
		/// <summary>
		/// Select whether to use the standard Out-of-box Opportunity Close experience or opt to for a customized experience.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isquickcreateenabledforopportunityclose")]
		public System.Nullable<bool> IsQuickCreateEnabledForOpportunityClose
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isquickcreateenabledforopportunityclose");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsQuickCreateEnabledForOpportunityClose");
				this.SetAttributeValue("isquickcreateenabledforopportunityclose", value);
				this.OnPropertyChanged("IsQuickCreateEnabledForOpportunityClose");
			}
		}
		
		/// <summary>
		/// Enable or disable auditing of read operations.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isreadauditenabled")]
		public System.Nullable<bool> IsReadAuditEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isreadauditenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsReadAuditEnabled");
				this.SetAttributeValue("isreadauditenabled", value);
				this.OnPropertyChanged("IsReadAuditEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether the feature Relationship Insights should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isrelationshipinsightsenabled")]
		public System.Nullable<bool> IsRelationshipInsightsEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isrelationshipinsightsenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsRelationshipInsightsEnabled");
				this.SetAttributeValue("isrelationshipinsightsenabled", value);
				this.OnPropertyChanged("IsRelationshipInsightsEnabled");
			}
		}
		
		/// <summary>
		/// Indicates if the synchronization of user resource booking with Exchange is enabled at organization level.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isresourcebookingexchangesyncenabled")]
		public System.Nullable<bool> IsResourceBookingExchangeSyncEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isresourcebookingexchangesyncenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsResourceBookingExchangeSyncEnabled");
				this.SetAttributeValue("isresourcebookingexchangesyncenabled", value);
				this.OnPropertyChanged("IsResourceBookingExchangeSyncEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether rich text editor for notes experience is enabled on this organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isrichtextnotesenabled")]
		public System.Nullable<bool> IsRichTextNotesEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isrichtextnotesenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsRichTextNotesEnabled");
				this.SetAttributeValue("isrichtextnotesenabled", value);
				this.OnPropertyChanged("IsRichTextNotesEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Sales Assistant mobile app has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issalesassistantenabled")]
		public System.Nullable<bool> IsSalesAssistantEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("issalesassistantenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsSalesAssistantEnabled");
				this.SetAttributeValue("issalesassistantenabled", value);
				this.OnPropertyChanged("IsSalesAssistantEnabled");
			}
		}
		
		/// <summary>
		/// Enable sales order processing integration.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issopintegrationenabled")]
		public System.Nullable<bool> IsSOPIntegrationEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("issopintegrationenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsSOPIntegrationEnabled");
				this.SetAttributeValue("issopintegrationenabled", value);
				this.OnPropertyChanged("IsSOPIntegrationEnabled");
			}
		}
		
		/// <summary>
		/// Information on whether text wrap is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("istextwrapenabled")]
		public System.Nullable<bool> IsTextWrapEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("istextwrapenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsTextWrapEnabled");
				this.SetAttributeValue("istextwrapenabled", value);
				this.OnPropertyChanged("IsTextWrapEnabled");
			}
		}
		
		/// <summary>
		/// Enable or disable auditing of user access.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isuseraccessauditenabled")]
		public System.Nullable<bool> IsUserAccessAuditEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isuseraccessauditenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsUserAccessAuditEnabled");
				this.SetAttributeValue("isuseraccessauditenabled", value);
				this.OnPropertyChanged("IsUserAccessAuditEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isvintegrationcode")]
		[System.ObsoleteAttribute()]
		public Microsoft.Xrm.Sdk.OptionSetValue ISVIntegrationCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("isvintegrationcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ISVIntegrationCode");
				this.SetAttributeValue("isvintegrationcode", value);
				this.OnPropertyChanged("ISVIntegrationCode");
			}
		}
		
		/// <summary>
		/// Indicates whether Write-in Products can be added to Opportunity/Quote/Order/Invoice or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iswriteinproductsallowed")]
		public System.Nullable<bool> IsWriteInProductsAllowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iswriteinproductsallowed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsWriteInProductsAllowed");
				this.SetAttributeValue("iswriteinproductsallowed", value);
				this.OnPropertyChanged("IsWriteInProductsAllowed");
			}
		}
		
		/// <summary>
		/// Type the prefix to use for all knowledge articles in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kaprefix")]
		public string KaPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("kaprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("KaPrefix");
				this.SetAttributeValue("kaprefix", value);
				this.OnPropertyChanged("KaPrefix");
			}
		}
		
		/// <summary>
		/// Prefix to use for all articles in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kbprefix")]
		public string KbPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("kbprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("KbPrefix");
				this.SetAttributeValue("kbprefix", value);
				this.OnPropertyChanged("KbPrefix");
			}
		}
		
		/// <summary>
		/// XML string containing the Knowledge Management settings that are applied in Knowledge Management Wizard.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kmsettings")]
		public string KMSettings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("kmsettings");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("KMSettings");
				this.SetAttributeValue("kmsettings", value);
				this.OnPropertyChanged("KMSettings");
			}
		}
		
		/// <summary>
		/// Preferred language for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languagecode")]
		public System.Nullable<int> LanguageCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("languagecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LanguageCode");
				this.SetAttributeValue("languagecode", value);
				this.OnPropertyChanged("LanguageCode");
			}
		}
		
		/// <summary>
		/// Unique identifier of the locale of the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("localeid")]
		public System.Nullable<int> LocaleId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("localeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LocaleId");
				this.SetAttributeValue("localeid", value);
				this.OnPropertyChanged("LocaleId");
			}
		}
		
		/// <summary>
		/// Information that specifies how the Long Date format is displayed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("longdateformatcode")]
		public System.Nullable<int> LongDateFormatCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("longdateformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LongDateFormatCode");
				this.SetAttributeValue("longdateformatcode", value);
				this.OnPropertyChanged("LongDateFormatCode");
			}
		}
		
		/// <summary>
		/// Lower Threshold For Mailbox Intermittent Issue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxintermittentissueminrange")]
		public System.Nullable<int> MailboxIntermittentIssueMinRange
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("mailboxintermittentissueminrange");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MailboxIntermittentIssueMinRange");
				this.SetAttributeValue("mailboxintermittentissueminrange", value);
				this.OnPropertyChanged("MailboxIntermittentIssueMinRange");
			}
		}
		
		/// <summary>
		/// Lower Threshold For Mailbox Permanent Issue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxpermanentissueminrange")]
		public System.Nullable<int> MailboxPermanentIssueMinRange
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("mailboxpermanentissueminrange");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MailboxPermanentIssueMinRange");
				this.SetAttributeValue("mailboxpermanentissueminrange", value);
				this.OnPropertyChanged("MailboxPermanentIssueMinRange");
			}
		}
		
		/// <summary>
		/// Maximum number of actionsteps allowed in a BPF
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxactionstepsinbpf")]
		public System.Nullable<int> MaxActionStepsInBPF
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxactionstepsinbpf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxActionStepsInBPF");
				this.SetAttributeValue("maxactionstepsinbpf", value);
				this.OnPropertyChanged("MaxActionStepsInBPF");
			}
		}
		
		/// <summary>
		/// Maximum number of days an appointment can last.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxappointmentdurationdays")]
		public System.Nullable<int> MaxAppointmentDurationDays
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxappointmentdurationdays");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxAppointmentDurationDays");
				this.SetAttributeValue("maxappointmentdurationdays", value);
				this.OnPropertyChanged("MaxAppointmentDurationDays");
			}
		}
		
		/// <summary>
		/// Maximum number of conditions allowed for mobile offline filters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxconditionsformobileofflinefilters")]
		public System.Nullable<int> MaxConditionsForMobileOfflineFilters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxconditionsformobileofflinefilters");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxConditionsForMobileOfflineFilters");
				this.SetAttributeValue("maxconditionsformobileofflinefilters", value);
				this.OnPropertyChanged("MaxConditionsForMobileOfflineFilters");
			}
		}
		
		/// <summary>
		/// Maximum depth for hierarchy security propagation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxdepthforhierarchicalsecuritymodel")]
		public System.Nullable<int> MaxDepthForHierarchicalSecurityModel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxdepthforhierarchicalsecuritymodel");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxDepthForHierarchicalSecurityModel");
				this.SetAttributeValue("maxdepthforhierarchicalsecuritymodel", value);
				this.OnPropertyChanged("MaxDepthForHierarchicalSecurityModel");
			}
		}
		
		/// <summary>
		/// Maximum number of Folder Based Tracking mappings user can add
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxfolderbasedtrackingmappings")]
		public System.Nullable<int> MaxFolderBasedTrackingMappings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxfolderbasedtrackingmappings");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxFolderBasedTrackingMappings");
				this.SetAttributeValue("maxfolderbasedtrackingmappings", value);
				this.OnPropertyChanged("MaxFolderBasedTrackingMappings");
			}
		}
		
		/// <summary>
		/// Maximum number of active business process flows allowed per entity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maximumactivebusinessprocessflowsallowedperentity")]
		public System.Nullable<int> MaximumActiveBusinessProcessFlowsAllowedPerEntity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maximumactivebusinessprocessflowsallowedperentity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaximumActiveBusinessProcessFlowsAllowedPerEntity");
				this.SetAttributeValue("maximumactivebusinessprocessflowsallowedperentity", value);
				this.OnPropertyChanged("MaximumActiveBusinessProcessFlowsAllowedPerEntity");
			}
		}
		
		/// <summary>
		/// Restrict the maximum number of product properties for a product family/bundle
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maximumdynamicpropertiesallowed")]
		public System.Nullable<int> MaximumDynamicPropertiesAllowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maximumdynamicpropertiesallowed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaximumDynamicPropertiesAllowed");
				this.SetAttributeValue("maximumdynamicpropertiesallowed", value);
				this.OnPropertyChanged("MaximumDynamicPropertiesAllowed");
			}
		}
		
		/// <summary>
		/// Maximum number of active SLA allowed per entity in online
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maximumentitieswithactivesla")]
		public System.Nullable<int> MaximumEntitiesWithActiveSLA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maximumentitieswithactivesla");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaximumEntitiesWithActiveSLA");
				this.SetAttributeValue("maximumentitieswithactivesla", value);
				this.OnPropertyChanged("MaximumEntitiesWithActiveSLA");
			}
		}
		
		/// <summary>
		/// Maximum number of SLA KPI per active SLA allowed for entity in online
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maximumslakpiperentitywithactivesla")]
		public System.Nullable<int> MaximumSLAKPIPerEntityWithActiveSLA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maximumslakpiperentitywithactivesla");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaximumSLAKPIPerEntityWithActiveSLA");
				this.SetAttributeValue("maximumslakpiperentitywithactivesla", value);
				this.OnPropertyChanged("MaximumSLAKPIPerEntityWithActiveSLA");
			}
		}
		
		/// <summary>
		/// Maximum tracking number before recycling takes place.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maximumtrackingnumber")]
		public System.Nullable<int> MaximumTrackingNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maximumtrackingnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaximumTrackingNumber");
				this.SetAttributeValue("maximumtrackingnumber", value);
				this.OnPropertyChanged("MaximumTrackingNumber");
			}
		}
		
		/// <summary>
		/// Restrict the maximum no of items in a bundle
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxproductsinbundle")]
		public System.Nullable<int> MaxProductsInBundle
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxproductsinbundle");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxProductsInBundle");
				this.SetAttributeValue("maxproductsinbundle", value);
				this.OnPropertyChanged("MaxProductsInBundle");
			}
		}
		
		/// <summary>
		/// Maximum number of records that will be exported to a static Microsoft Office Excel worksheet when exporting from the grid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxrecordsforexporttoexcel")]
		public System.Nullable<int> MaxRecordsForExportToExcel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxrecordsforexporttoexcel");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxRecordsForExportToExcel");
				this.SetAttributeValue("maxrecordsforexporttoexcel", value);
				this.OnPropertyChanged("MaxRecordsForExportToExcel");
			}
		}
		
		/// <summary>
		/// Maximum number of lookup and picklist records that can be selected by user for filtering.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxrecordsforlookupfilters")]
		public System.Nullable<int> MaxRecordsForLookupFilters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxrecordsforlookupfilters");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxRecordsForLookupFilters");
				this.SetAttributeValue("maxrecordsforlookupfilters", value);
				this.OnPropertyChanged("MaxRecordsForLookupFilters");
			}
		}
		
		/// <summary>
		/// The maximum version of IE to run browser emulation for in Outlook client
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxsupportedinternetexplorerversion")]
		public System.Nullable<int> MaxSupportedInternetExplorerVersion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxsupportedinternetexplorerversion");
			}
		}
		
		/// <summary>
		/// Maximum allowed size of an attachment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxuploadfilesize")]
		public System.Nullable<int> MaxUploadFileSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxuploadfilesize");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxUploadFileSize");
				this.SetAttributeValue("maxuploadfilesize", value);
				this.OnPropertyChanged("MaxUploadFileSize");
			}
		}
		
		/// <summary>
		/// Maximum number of mailboxes that can be toggled for verbose logging
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxverboseloggingmailbox")]
		public System.Nullable<int> MaxVerboseLoggingMailbox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxverboseloggingmailbox");
			}
		}
		
		/// <summary>
		/// Maximum number of sync cycles for which verbose logging will be enabled by default
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxverboseloggingsynccycles")]
		public System.Nullable<int> MaxVerboseLoggingSyncCycles
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxverboseloggingsynccycles");
			}
		}
		
		/// <summary>
		/// (Deprecated) Environment selected for Integration with Microsoft Flow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("microsoftflowenvironment")]
		public string MicrosoftFlowEnvironment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("microsoftflowenvironment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MicrosoftFlowEnvironment");
				this.SetAttributeValue("microsoftflowenvironment", value);
				this.OnPropertyChanged("MicrosoftFlowEnvironment");
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for address book synchronization in Microsoft Office Outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("minaddressbooksyncinterval")]
		public System.Nullable<int> MinAddressBookSyncInterval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("minaddressbooksyncinterval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MinAddressBookSyncInterval");
				this.SetAttributeValue("minaddressbooksyncinterval", value);
				this.OnPropertyChanged("MinAddressBookSyncInterval");
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("minofflinesyncinterval")]
		public System.Nullable<int> MinOfflineSyncInterval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("minofflinesyncinterval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MinOfflineSyncInterval");
				this.SetAttributeValue("minofflinesyncinterval", value);
				this.OnPropertyChanged("MinOfflineSyncInterval");
			}
		}
		
		/// <summary>
		/// Minimum allowed time between scheduled Outlook synchronizations.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("minoutlooksyncinterval")]
		public System.Nullable<int> MinOutlookSyncInterval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("minoutlooksyncinterval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MinOutlookSyncInterval");
				this.SetAttributeValue("minoutlooksyncinterval", value);
				this.OnPropertyChanged("MinOutlookSyncInterval");
			}
		}
		
		/// <summary>
		/// Minimum number of user license required for mobile offline service by production/preview organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobileofflineminlicenseprod")]
		public System.Nullable<int> MobileOfflineMinLicenseProd
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("mobileofflineminlicenseprod");
			}
		}
		
		/// <summary>
		/// Minimum number of user license required for mobile offline service by trial organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobileofflineminlicensetrial")]
		public System.Nullable<int> MobileOfflineMinLicenseTrial
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("mobileofflineminlicensetrial");
			}
		}
		
		/// <summary>
		/// Sync interval for mobile offline.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobileofflinesyncinterval")]
		public System.Nullable<int> MobileOfflineSyncInterval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("mobileofflinesyncinterval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MobileOfflineSyncInterval");
				this.SetAttributeValue("mobileofflinesyncinterval", value);
				this.OnPropertyChanged("MobileOfflineSyncInterval");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the organization was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Name of the organization. The name is set when Microsoft CRM is installed and should not be changed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Information that specifies how negative currency numbers are displayed throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("negativecurrencyformatcode")]
		public System.Nullable<int> NegativeCurrencyFormatCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("negativecurrencyformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("NegativeCurrencyFormatCode");
				this.SetAttributeValue("negativecurrencyformatcode", value);
				this.OnPropertyChanged("NegativeCurrencyFormatCode");
			}
		}
		
		/// <summary>
		/// Information that specifies how negative numbers are displayed throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("negativeformatcode")]
		public virtual Organization_NegativeFormatCode? NegativeFormatCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_NegativeFormatCode?)(EntityOptionSetEnum.GetEnum(this, "negativeformatcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("NegativeFormatCode");
				this.SetAttributeValue("negativeformatcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("NegativeFormatCode");
			}
		}
		
		/// <summary>
		/// Next token to be placed on the subject line of an email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nexttrackingnumber")]
		public System.Nullable<int> NextTrackingNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("nexttrackingnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("NextTrackingNumber");
				this.SetAttributeValue("nexttrackingnumber", value);
				this.OnPropertyChanged("NextTrackingNumber");
			}
		}
		
		/// <summary>
		/// Indicates whether mailbox owners will be notified of email server profile level alerts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("notifymailboxownerofemailserverlevelalerts")]
		public System.Nullable<bool> NotifyMailboxOwnerOfEmailServerLevelAlerts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("notifymailboxownerofemailserverlevelalerts");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("NotifyMailboxOwnerOfEmailServerLevelAlerts");
				this.SetAttributeValue("notifymailboxownerofemailserverlevelalerts", value);
				this.OnPropertyChanged("NotifyMailboxOwnerOfEmailServerLevelAlerts");
			}
		}
		
		/// <summary>
		/// Specification of how numbers are displayed throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberformat")]
		public string NumberFormat
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("numberformat");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("NumberFormat");
				this.SetAttributeValue("numberformat", value);
				this.OnPropertyChanged("NumberFormat");
			}
		}
		
		/// <summary>
		/// Specifies how numbers are grouped in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numbergroupformat")]
		public string NumberGroupFormat
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("numbergroupformat");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("NumberGroupFormat");
				this.SetAttributeValue("numbergroupformat", value);
				this.OnPropertyChanged("NumberGroupFormat");
			}
		}
		
		/// <summary>
		/// Symbol used for number separation in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberseparator")]
		public string NumberSeparator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("numberseparator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("NumberSeparator");
				this.SetAttributeValue("numberseparator", value);
				this.OnPropertyChanged("NumberSeparator");
			}
		}
		
		/// <summary>
		/// Indicates whether the Office Apps auto deployment is enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsautodeploymentenabled")]
		public System.Nullable<bool> OfficeAppsAutoDeploymentEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("officeappsautodeploymentenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OfficeAppsAutoDeploymentEnabled");
				this.SetAttributeValue("officeappsautodeploymentenabled", value);
				this.OnPropertyChanged("OfficeAppsAutoDeploymentEnabled");
			}
		}
		
		/// <summary>
		/// The url to open the Delve for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officegraphdelveurl")]
		public string OfficeGraphDelveUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("officegraphdelveurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OfficeGraphDelveUrl");
				this.SetAttributeValue("officegraphdelveurl", value);
				this.OnPropertyChanged("OfficeGraphDelveUrl");
			}
		}
		
		/// <summary>
		/// Enable OOB pricing calculation logic for Opportunity, Quote, Order and Invoice entities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oobpricecalculationenabled")]
		public System.Nullable<bool> OOBPriceCalculationEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("oobpricecalculationenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OOBPriceCalculationEnabled");
				this.SetAttributeValue("oobpricecalculationenabled", value);
				this.OnPropertyChanged("OOBPriceCalculationEnabled");
			}
		}
		
		/// <summary>
		/// Prefix to use for all orders throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("orderprefix")]
		public string OrderPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("orderprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OrderPrefix");
				this.SetAttributeValue("orderprefix", value);
				this.OnPropertyChanged("OrderPrefix");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public System.Nullable<System.Guid> OrganizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				base.Id = value;
			}
		}
		
		/// <summary>
		/// Indicates the organization lifecycle state
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationstate")]
		public virtual Organization_OrganizationState? OrganizationState
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_OrganizationState?)(EntityOptionSetEnum.GetEnum(this, "organizationstate")));
			}
		}
		
		/// <summary>
		/// Organization settings stored in Organization Database.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("orgdborgsettings")]
		public string OrgDbOrgSettings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("orgdborgsettings");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OrgDbOrgSettings");
				this.SetAttributeValue("orgdborgsettings", value);
				this.OnPropertyChanged("OrgDbOrgSettings");
			}
		}
		
		/// <summary>
		/// Select whether to turn on OrgInsights for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("orginsightsenabled")]
		public System.Nullable<bool> OrgInsightsEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("orginsightsenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OrgInsightsEnabled");
				this.SetAttributeValue("orginsightsenabled", value);
				this.OnPropertyChanged("OrgInsightsEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether Preview feature has been enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paipreviewscenarioenabled")]
		public System.Nullable<bool> PaiPreviewScenarioEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("paipreviewscenarioenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PaiPreviewScenarioEnabled");
				this.SetAttributeValue("paipreviewscenarioenabled", value);
				this.OnPropertyChanged("PaiPreviewScenarioEnabled");
			}
		}
		
		/// <summary>
		/// Prefix used for parsed table columns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parsedtablecolumnprefix")]
		public string ParsedTableColumnPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("parsedtablecolumnprefix");
			}
		}
		
		/// <summary>
		/// Prefix used for parsed tables.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parsedtableprefix")]
		public string ParsedTablePrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("parsedtableprefix");
			}
		}
		
		/// <summary>
		/// Specifies the maximum number of months in past for which the recurring activities can be created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pastexpansionwindow")]
		public System.Nullable<int> PastExpansionWindow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("pastexpansionwindow");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PastExpansionWindow");
				this.SetAttributeValue("pastexpansionwindow", value);
				this.OnPropertyChanged("PastExpansionWindow");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("picture")]
		public string Picture
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("picture");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Picture");
				this.SetAttributeValue("picture", value);
				this.OnPropertyChanged("Picture");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pinpointlanguagecode")]
		public System.Nullable<int> PinpointLanguageCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("pinpointlanguagecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PinpointLanguageCode");
				this.SetAttributeValue("pinpointlanguagecode", value);
				this.OnPropertyChanged("PinpointLanguageCode");
			}
		}
		
		/// <summary>
		/// Plug-in Trace Log Setting for the Organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("plugintracelogsetting")]
		public virtual Organization_PluginTraceLogSetting? PluginTraceLogSetting
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_PluginTraceLogSetting?)(EntityOptionSetEnum.GetEnum(this, "plugintracelogsetting")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PluginTraceLogSetting");
				this.SetAttributeValue("plugintracelogsetting", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("PluginTraceLogSetting");
			}
		}
		
		/// <summary>
		/// PM designator to use throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pmdesignator")]
		public string PMDesignator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("pmdesignator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PMDesignator");
				this.SetAttributeValue("pmdesignator", value);
				this.OnPropertyChanged("PMDesignator");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postmessagewhitelistdomains")]
		public string PostMessageWhitelistDomains
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("postmessagewhitelistdomains");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PostMessageWhitelistDomains");
				this.SetAttributeValue("postmessagewhitelistdomains", value);
				this.OnPropertyChanged("PostMessageWhitelistDomains");
			}
		}
		
		/// <summary>
		/// Indicates whether the Power BI feature should be enabled for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("powerbifeatureenabled")]
		public System.Nullable<bool> PowerBiFeatureEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("powerbifeatureenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PowerBiFeatureEnabled");
				this.SetAttributeValue("powerbifeatureenabled", value);
				this.OnPropertyChanged("PowerBiFeatureEnabled");
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for prices.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricingdecimalprecision")]
		public System.Nullable<int> PricingDecimalPrecision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("pricingdecimalprecision");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PricingDecimalPrecision");
				this.SetAttributeValue("pricingdecimalprecision", value);
				this.OnPropertyChanged("PricingDecimalPrecision");
			}
		}
		
		/// <summary>
		/// Privacy Statement URL
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privacystatementurl")]
		public string PrivacyStatementUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("privacystatementurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PrivacyStatementUrl");
				this.SetAttributeValue("privacystatementurl", value);
				this.OnPropertyChanged("PrivacyStatementUrl");
			}
		}
		
		/// <summary>
		/// Unique identifier of the default privilege for users in the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privilegeusergroupid")]
		public System.Nullable<System.Guid> PrivilegeUserGroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("privilegeusergroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PrivilegeUserGroupId");
				this.SetAttributeValue("privilegeusergroupid", value);
				this.OnPropertyChanged("PrivilegeUserGroupId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privreportinggroupid")]
		public System.Nullable<System.Guid> PrivReportingGroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("privreportinggroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PrivReportingGroupId");
				this.SetAttributeValue("privreportinggroupid", value);
				this.OnPropertyChanged("PrivReportingGroupId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privreportinggroupname")]
		public string PrivReportingGroupName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("privreportinggroupname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PrivReportingGroupName");
				this.SetAttributeValue("privreportinggroupname", value);
				this.OnPropertyChanged("PrivReportingGroupName");
			}
		}
		
		/// <summary>
		/// Select whether to turn on product recommendations for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productrecommendationsenabled")]
		public System.Nullable<bool> ProductRecommendationsEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("productrecommendationsenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProductRecommendationsEnabled");
				this.SetAttributeValue("productrecommendationsenabled", value);
				this.OnPropertyChanged("ProductRecommendationsEnabled");
			}
		}
		
		/// <summary>
		/// Indicates whether prompt should be shown for new Qualify Lead Experience
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("qualifyleadadditionaloptions")]
		public string QualifyLeadAdditionalOptions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("qualifyleadadditionaloptions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("QualifyLeadAdditionalOptions");
				this.SetAttributeValue("qualifyleadadditionaloptions", value);
				this.OnPropertyChanged("QualifyLeadAdditionalOptions");
			}
		}
		
		/// <summary>
		/// Indicates whether a quick find record limit should be enabled for this organization (allows for faster Quick Find queries but prevents overly broad searches).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("quickfindrecordlimitenabled")]
		public System.Nullable<bool> QuickFindRecordLimitEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("quickfindrecordlimitenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("QuickFindRecordLimitEnabled");
				this.SetAttributeValue("quickfindrecordlimitenabled", value);
				this.OnPropertyChanged("QuickFindRecordLimitEnabled");
			}
		}
		
		/// <summary>
		/// Prefix to use for all quotes throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("quoteprefix")]
		public string QuotePrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("quoteprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("QuotePrefix");
				this.SetAttributeValue("quoteprefix", value);
				this.OnPropertyChanged("QuotePrefix");
			}
		}
		
		/// <summary>
		/// Specifies the default value for number of occurrences field in the recurrence dialog.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencedefaultnumberofoccurrences")]
		public System.Nullable<int> RecurrenceDefaultNumberOfOccurrences
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("recurrencedefaultnumberofoccurrences");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurrenceDefaultNumberOfOccurrences");
				this.SetAttributeValue("recurrencedefaultnumberofoccurrences", value);
				this.OnPropertyChanged("RecurrenceDefaultNumberOfOccurrences");
			}
		}
		
		/// <summary>
		/// Specifies the interval (in seconds) for pausing expansion job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrenceexpansionjobbatchinterval")]
		public System.Nullable<int> RecurrenceExpansionJobBatchInterval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("recurrenceexpansionjobbatchinterval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurrenceExpansionJobBatchInterval");
				this.SetAttributeValue("recurrenceexpansionjobbatchinterval", value);
				this.OnPropertyChanged("RecurrenceExpansionJobBatchInterval");
			}
		}
		
		/// <summary>
		/// Specifies the value for number of instances created in on demand job in one shot.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrenceexpansionjobbatchsize")]
		public System.Nullable<int> RecurrenceExpansionJobBatchSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("recurrenceexpansionjobbatchsize");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurrenceExpansionJobBatchSize");
				this.SetAttributeValue("recurrenceexpansionjobbatchsize", value);
				this.OnPropertyChanged("RecurrenceExpansionJobBatchSize");
			}
		}
		
		/// <summary>
		/// Specifies the maximum number of instances to be created synchronously after creating a recurring appointment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrenceexpansionsynchcreatemax")]
		public System.Nullable<int> RecurrenceExpansionSynchCreateMax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("recurrenceexpansionsynchcreatemax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurrenceExpansionSynchCreateMax");
				this.SetAttributeValue("recurrenceexpansionsynchcreatemax", value);
				this.OnPropertyChanged("RecurrenceExpansionSynchCreateMax");
			}
		}
		
		/// <summary>
		/// XML string that defines the navigation structure for the application. This is the site map from the previously upgraded build and is used in a 3-way merge during upgrade.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("referencesitemapxml")]
		[System.ObsoleteAttribute()]
		public string ReferenceSiteMapXml
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("referencesitemapxml");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReferenceSiteMapXml");
				this.SetAttributeValue("referencesitemapxml", value);
				this.OnPropertyChanged("ReferenceSiteMapXml");
			}
		}
		
		/// <summary>
		/// Flag to render the body of email in the Web form in an IFRAME with the security='restricted' attribute set. This is additional security but can cause a credentials prompt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rendersecureiframeforemail")]
		public System.Nullable<bool> RenderSecureIFrameForEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("rendersecureiframeforemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RenderSecureIFrameForEmail");
				this.SetAttributeValue("rendersecureiframeforemail", value);
				this.OnPropertyChanged("RenderSecureIFrameForEmail");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportinggroupid")]
		public System.Nullable<System.Guid> ReportingGroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("reportinggroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReportingGroupId");
				this.SetAttributeValue("reportinggroupid", value);
				this.OnPropertyChanged("ReportingGroupId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportinggroupname")]
		public string ReportingGroupName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("reportinggroupname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReportingGroupName");
				this.SetAttributeValue("reportinggroupname", value);
				this.OnPropertyChanged("ReportingGroupName");
			}
		}
		
		/// <summary>
		/// Picklist for selecting the organization preference for reporting scripting errors.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportscripterrors")]
		public virtual Organization_ReportScriptErrors? ReportScriptErrors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_ReportScriptErrors?)(EntityOptionSetEnum.GetEnum(this, "reportscripterrors")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReportScriptErrors");
				this.SetAttributeValue("reportscripterrors", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ReportScriptErrors");
			}
		}
		
		/// <summary>
		/// Indicates whether Send As Other User privilege is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requireapprovalforqueueemail")]
		public System.Nullable<bool> RequireApprovalForQueueEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("requireapprovalforqueueemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RequireApprovalForQueueEmail");
				this.SetAttributeValue("requireapprovalforqueueemail", value);
				this.OnPropertyChanged("RequireApprovalForQueueEmail");
			}
		}
		
		/// <summary>
		/// Indicates whether Send As Other User privilege is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requireapprovalforuseremail")]
		public System.Nullable<bool> RequireApprovalForUserEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("requireapprovalforuseremail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RequireApprovalForUserEmail");
				this.SetAttributeValue("requireapprovalforuseremail", value);
				this.OnPropertyChanged("RequireApprovalForUserEmail");
			}
		}
		
		/// <summary>
		/// Apply same email address to all unresolved matches when you manually resolve it for one
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvesimilarunresolvedemailaddress")]
		public System.Nullable<bool> ResolveSimilarUnresolvedEmailAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("resolvesimilarunresolvedemailaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ResolveSimilarUnresolvedEmailAddress");
				this.SetAttributeValue("resolvesimilarunresolvedemailaddress", value);
				this.OnPropertyChanged("ResolveSimilarUnresolvedEmailAddress");
			}
		}
		
		/// <summary>
		/// Flag to restrict Update on incident.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("restrictstatusupdate")]
		public System.Nullable<bool> RestrictStatusUpdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("restrictstatusupdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RestrictStatusUpdate");
				this.SetAttributeValue("restrictstatusupdate", value);
				this.OnPropertyChanged("RestrictStatusUpdate");
			}
		}
		
		/// <summary>
		/// Error status of Relationship Insights provisioning.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rierrorstatus")]
		public System.Nullable<int> RiErrorStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("rierrorstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RiErrorStatus");
				this.SetAttributeValue("rierrorstatus", value);
				this.OnPropertyChanged("RiErrorStatus");
			}
		}
		
		/// <summary>
		/// Unique identifier of the sample data import job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sampledataimportid")]
		public System.Nullable<System.Guid> SampleDataImportId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("sampledataimportid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SampleDataImportId");
				this.SetAttributeValue("sampledataimportid", value);
				this.OnPropertyChanged("SampleDataImportId");
			}
		}
		
		/// <summary>
		/// Scheduling engine for Appointments and Service Activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schedulingengine")]
		public virtual Organization_SchedulingEngine? SchedulingEngine
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_SchedulingEngine?)(EntityOptionSetEnum.GetEnum(this, "schedulingengine")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SchedulingEngine");
				this.SetAttributeValue("schedulingengine", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("SchedulingEngine");
			}
		}
		
		/// <summary>
		/// Prefix used for custom entities and attributes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schemanameprefix")]
		public string SchemaNamePrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("schemanameprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SchemaNamePrefix");
				this.SetAttributeValue("schemanameprefix", value);
				this.OnPropertyChanged("SchemaNamePrefix");
			}
		}
		
		/// <summary>
		/// Indicates whether Send Bulk Email in UCI is enabled for the org.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendbulkemailinuci")]
		public System.Nullable<bool> SendBulkEmailInUCI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sendbulkemailinuci");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SendBulkEmailInUCI");
				this.SetAttributeValue("sendbulkemailinuci", value);
				this.OnPropertyChanged("SendBulkEmailInUCI");
			}
		}
		
		/// <summary>
		/// Serve Static Content From CDN
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servestaticresourcesfromazurecdn")]
		public System.Nullable<bool> ServeStaticResourcesFromAzureCDN
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("servestaticresourcesfromazurecdn");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServeStaticResourcesFromAzureCDN");
				this.SetAttributeValue("servestaticresourcesfromazurecdn", value);
				this.OnPropertyChanged("ServeStaticResourcesFromAzureCDN");
			}
		}
		
		/// <summary>
		/// Information that specifies whether session timeout is enabled
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sessiontimeoutenabled")]
		public System.Nullable<bool> SessionTimeoutEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sessiontimeoutenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SessionTimeoutEnabled");
				this.SetAttributeValue("sessiontimeoutenabled", value);
				this.OnPropertyChanged("SessionTimeoutEnabled");
			}
		}
		
		/// <summary>
		/// Session timeout in minutes
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sessiontimeoutinmins")]
		public System.Nullable<int> SessionTimeoutInMins
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("sessiontimeoutinmins");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SessionTimeoutInMins");
				this.SetAttributeValue("sessiontimeoutinmins", value);
				this.OnPropertyChanged("SessionTimeoutInMins");
			}
		}
		
		/// <summary>
		/// Session timeout reminder in minutes
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sessiontimeoutreminderinmins")]
		public System.Nullable<int> SessionTimeoutReminderInMins
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("sessiontimeoutreminderinmins");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SessionTimeoutReminderInMins");
				this.SetAttributeValue("sessiontimeoutreminderinmins", value);
				this.OnPropertyChanged("SessionTimeoutReminderInMins");
			}
		}
		
		/// <summary>
		/// Indicates which SharePoint deployment type is configured for Server to Server. (Online or On-Premises)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharepointdeploymenttype")]
		public virtual Organization_SharePointDeploymentType? SharePointDeploymentType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_SharePointDeploymentType?)(EntityOptionSetEnum.GetEnum(this, "sharepointdeploymenttype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SharePointDeploymentType");
				this.SetAttributeValue("sharepointdeploymenttype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("SharePointDeploymentType");
			}
		}
		
		/// <summary>
		/// Information that specifies whether to share to previous owner on assign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharetopreviousowneronassign")]
		public System.Nullable<bool> ShareToPreviousOwnerOnAssign
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sharetopreviousowneronassign");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ShareToPreviousOwnerOnAssign");
				this.SetAttributeValue("sharetopreviousowneronassign", value);
				this.OnPropertyChanged("ShareToPreviousOwnerOnAssign");
			}
		}
		
		/// <summary>
		/// Select whether to display a KB article deprecation notification to the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("showkbarticledeprecationnotification")]
		public System.Nullable<bool> ShowKBArticleDeprecationNotification
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("showkbarticledeprecationnotification");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ShowKBArticleDeprecationNotification");
				this.SetAttributeValue("showkbarticledeprecationnotification", value);
				this.OnPropertyChanged("ShowKBArticleDeprecationNotification");
			}
		}
		
		/// <summary>
		/// Information that specifies whether to display the week number in calendar displays throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("showweeknumber")]
		public System.Nullable<bool> ShowWeekNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("showweeknumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ShowWeekNumber");
				this.SetAttributeValue("showweeknumber", value);
				this.OnPropertyChanged("ShowWeekNumber");
			}
		}
		
		/// <summary>
		/// CRM for Outlook Download URL
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("signupoutlookdownloadfwlink")]
		public string SignupOutlookDownloadFWLink
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("signupoutlookdownloadfwlink");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SignupOutlookDownloadFWLink");
				this.SetAttributeValue("signupoutlookdownloadfwlink", value);
				this.OnPropertyChanged("SignupOutlookDownloadFWLink");
			}
		}
		
		/// <summary>
		/// XML string that defines the navigation structure for the application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sitemapxml")]
		[System.ObsoleteAttribute()]
		public string SiteMapXml
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("sitemapxml");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SiteMapXml");
				this.SetAttributeValue("sitemapxml", value);
				this.OnPropertyChanged("SiteMapXml");
			}
		}
		
		/// <summary>
		/// Contains the on hold case status values.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slapausestates")]
		public string SlaPauseStates
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("slapausestates");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SlaPauseStates");
				this.SetAttributeValue("slapausestates", value);
				this.OnPropertyChanged("SlaPauseStates");
			}
		}
		
		/// <summary>
		/// Flag for whether the organization is using Social Insights.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("socialinsightsenabled")]
		public System.Nullable<bool> SocialInsightsEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("socialinsightsenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SocialInsightsEnabled");
				this.SetAttributeValue("socialinsightsenabled", value);
				this.OnPropertyChanged("SocialInsightsEnabled");
			}
		}
		
		/// <summary>
		/// Identifier for the Social Insights instance for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("socialinsightsinstance")]
		public string SocialInsightsInstance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("socialinsightsinstance");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SocialInsightsInstance");
				this.SetAttributeValue("socialinsightsinstance", value);
				this.OnPropertyChanged("SocialInsightsInstance");
			}
		}
		
		/// <summary>
		/// Flag for whether the organization has accepted the Social Insights terms of use.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("socialinsightstermsaccepted")]
		public System.Nullable<bool> SocialInsightsTermsAccepted
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("socialinsightstermsaccepted");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SocialInsightsTermsAccepted");
				this.SetAttributeValue("socialinsightstermsaccepted", value);
				this.OnPropertyChanged("SocialInsightsTermsAccepted");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortid")]
		public System.Nullable<int> SortId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("sortid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SortId");
				this.SetAttributeValue("sortid", value);
				this.OnPropertyChanged("SortId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sqlaccessgroupid")]
		public System.Nullable<System.Guid> SqlAccessGroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("sqlaccessgroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SqlAccessGroupId");
				this.SetAttributeValue("sqlaccessgroupid", value);
				this.OnPropertyChanged("SqlAccessGroupId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sqlaccessgroupname")]
		public string SqlAccessGroupName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("sqlaccessgroupname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SqlAccessGroupName");
				this.SetAttributeValue("sqlaccessgroupname", value);
				this.OnPropertyChanged("SqlAccessGroupName");
			}
		}
		
		/// <summary>
		/// Setting for SQM data collection, 0 no, 1 yes enabled
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sqmenabled")]
		public System.Nullable<bool> SQMEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sqmenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SQMEnabled");
				this.SetAttributeValue("sqmenabled", value);
				this.OnPropertyChanged("SQMEnabled");
			}
		}
		
		/// <summary>
		/// Unique identifier of the support user for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("supportuserid")]
		public System.Nullable<System.Guid> SupportUserId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("supportuserid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SupportUserId");
				this.SetAttributeValue("supportuserid", value);
				this.OnPropertyChanged("SupportUserId");
			}
		}
		
		/// <summary>
		/// Indicates whether SLA is suppressed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("suppresssla")]
		public System.Nullable<bool> SuppressSLA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("suppresssla");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SuppressSLA");
				this.SetAttributeValue("suppresssla", value);
				this.OnPropertyChanged("SuppressSLA");
			}
		}
		
		/// <summary>
		/// Number of records to update per operation in Sync Bulk Pause/Resume/Cancel
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("syncbulkoperationbatchsize")]
		public System.Nullable<int> SyncBulkOperationBatchSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("syncbulkoperationbatchsize");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SyncBulkOperationBatchSize");
				this.SetAttributeValue("syncbulkoperationbatchsize", value);
				this.OnPropertyChanged("SyncBulkOperationBatchSize");
			}
		}
		
		/// <summary>
		/// Max total number of records to update in database for Sync Bulk Pause/Resume/Cancel
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("syncbulkoperationmaxlimit")]
		public System.Nullable<int> SyncBulkOperationMaxLimit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("syncbulkoperationmaxlimit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SyncBulkOperationMaxLimit");
				this.SetAttributeValue("syncbulkoperationmaxlimit", value);
				this.OnPropertyChanged("SyncBulkOperationMaxLimit");
			}
		}
		
		/// <summary>
		/// Indicates the selection to use the dynamics 365 azure sync framework or server side sync.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("syncoptinselection")]
		public System.Nullable<bool> SyncOptInSelection
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("syncoptinselection");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SyncOptInSelection");
				this.SetAttributeValue("syncoptinselection", value);
				this.OnPropertyChanged("SyncOptInSelection");
			}
		}
		
		/// <summary>
		/// Indicates the status of the opt-in or opt-out operation for dynamics 365 azure sync.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("syncoptinselectionstatus")]
		public virtual Organization_SyncOptInSelectionStatus? SyncOptInSelectionStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_SyncOptInSelectionStatus?)(EntityOptionSetEnum.GetEnum(this, "syncoptinselectionstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SyncOptInSelectionStatus");
				this.SetAttributeValue("syncoptinselectionstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("SyncOptInSelectionStatus");
			}
		}
		
		/// <summary>
		/// Unique identifier of the system user for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserid")]
		public System.Nullable<System.Guid> SystemUserId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("systemuserid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SystemUserId");
				this.SetAttributeValue("systemuserid", value);
				this.OnPropertyChanged("SystemUserId");
			}
		}
		
		/// <summary>
		/// Maximum number of aggressive polling cycles executed for email auto-tagging when a new email is received.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tagmaxaggressivecycles")]
		public System.Nullable<int> TagMaxAggressiveCycles
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("tagmaxaggressivecycles");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TagMaxAggressiveCycles");
				this.SetAttributeValue("tagmaxaggressivecycles", value);
				this.OnPropertyChanged("TagMaxAggressiveCycles");
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for email receive auto-tagging in outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tagpollingperiod")]
		public System.Nullable<int> TagPollingPeriod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("tagpollingperiod");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TagPollingPeriod");
				this.SetAttributeValue("tagpollingperiod", value);
				this.OnPropertyChanged("TagPollingPeriod");
			}
		}
		
		/// <summary>
		/// Select whether to turn on task flows for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("taskbasedflowenabled")]
		public System.Nullable<bool> TaskBasedFlowEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("taskbasedflowenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TaskBasedFlowEnabled");
				this.SetAttributeValue("taskbasedflowenabled", value);
				this.OnPropertyChanged("TaskBasedFlowEnabled");
			}
		}
		
		/// <summary>
		/// Select whether to turn on text analytics for the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("textanalyticsenabled")]
		public System.Nullable<bool> TextAnalyticsEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("textanalyticsenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TextAnalyticsEnabled");
				this.SetAttributeValue("textanalyticsenabled", value);
				this.OnPropertyChanged("TextAnalyticsEnabled");
			}
		}
		
		/// <summary>
		/// Information that specifies how the time is displayed throughout Microsoft CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeformatcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue TimeFormatCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("timeformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeFormatCode");
				this.SetAttributeValue("timeformatcode", value);
				this.OnPropertyChanged("TimeFormatCode");
			}
		}
		
		/// <summary>
		/// Text for how time is displayed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeformatstring")]
		public string TimeFormatString
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("timeformatstring");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeFormatString");
				this.SetAttributeValue("timeformatstring", value);
				this.OnPropertyChanged("TimeFormatString");
			}
		}
		
		/// <summary>
		/// Text for how the time separator is displayed throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeseparator")]
		public string TimeSeparator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("timeseparator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeSeparator");
				this.SetAttributeValue("timeseparator", value);
				this.OnPropertyChanged("TimeSeparator");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Duration used for token expiration.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tokenexpiry")]
		public System.Nullable<int> TokenExpiry
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("tokenexpiry");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TokenExpiry");
				this.SetAttributeValue("tokenexpiry", value);
				this.OnPropertyChanged("TokenExpiry");
			}
		}
		
		/// <summary>
		/// Token key.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tokenkey")]
		public string TokenKey
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("tokenkey");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TokenKey");
				this.SetAttributeValue("tokenkey", value);
				this.OnPropertyChanged("TokenKey");
			}
		}
		
		/// <summary>
		/// Tracelog record maximum age in days
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tracelogmaximumageindays")]
		public System.Nullable<int> TraceLogMaximumAgeInDays
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("tracelogmaximumageindays");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TraceLogMaximumAgeInDays");
				this.SetAttributeValue("tracelogmaximumageindays", value);
				this.OnPropertyChanged("TraceLogMaximumAgeInDays");
			}
		}
		
		/// <summary>
		/// History list of tracking token prefixes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trackingprefix")]
		public string TrackingPrefix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("trackingprefix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TrackingPrefix");
				this.SetAttributeValue("trackingprefix", value);
				this.OnPropertyChanged("TrackingPrefix");
			}
		}
		
		/// <summary>
		/// Base number used to provide separate tracking token identifiers to users belonging to different deployments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trackingtokenidbase")]
		public System.Nullable<int> TrackingTokenIdBase
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("trackingtokenidbase");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TrackingTokenIdBase");
				this.SetAttributeValue("trackingtokenidbase", value);
				this.OnPropertyChanged("TrackingTokenIdBase");
			}
		}
		
		/// <summary>
		/// Number of digits used to represent a tracking token identifier.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trackingtokeniddigits")]
		public System.Nullable<int> TrackingTokenIdDigits
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("trackingtokeniddigits");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TrackingTokenIdDigits");
				this.SetAttributeValue("trackingtokeniddigits", value);
				this.OnPropertyChanged("TrackingTokenIdDigits");
			}
		}
		
		/// <summary>
		/// Number of characters appended to invoice, quote, and order numbers.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uniquespecifierlength")]
		public System.Nullable<int> UniqueSpecifierLength
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("uniquespecifierlength");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UniqueSpecifierLength");
				this.SetAttributeValue("uniquespecifierlength", value);
				this.OnPropertyChanged("UniqueSpecifierLength");
			}
		}
		
		/// <summary>
		/// Indicates whether email address should be unresolved if multiple matches are found
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("unresolveemailaddressifmultiplematch")]
		public System.Nullable<bool> UnresolveEmailAddressIfMultipleMatch
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("unresolveemailaddressifmultiplematch");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UnresolveEmailAddressIfMultipleMatch");
				this.SetAttributeValue("unresolveemailaddressifmultiplematch", value);
				this.OnPropertyChanged("UnresolveEmailAddressIfMultipleMatch");
			}
		}
		
		/// <summary>
		/// Flag indicates whether to Use Inbuilt Rule For DefaultPricelist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("useinbuiltrulefordefaultpricelistselection")]
		public System.Nullable<bool> UseInbuiltRuleForDefaultPricelistSelection
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("useinbuiltrulefordefaultpricelistselection");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UseInbuiltRuleForDefaultPricelistSelection");
				this.SetAttributeValue("useinbuiltrulefordefaultpricelistselection", value);
				this.OnPropertyChanged("UseInbuiltRuleForDefaultPricelistSelection");
			}
		}
		
		/// <summary>
		/// Select whether to use legacy form rendering.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uselegacyrendering")]
		public System.Nullable<bool> UseLegacyRendering
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("uselegacyrendering");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UseLegacyRendering");
				this.SetAttributeValue("uselegacyrendering", value);
				this.OnPropertyChanged("UseLegacyRendering");
			}
		}
		
		/// <summary>
		/// Use position hierarchy
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usepositionhierarchy")]
		public System.Nullable<bool> UsePositionHierarchy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usepositionhierarchy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UsePositionHierarchy");
				this.SetAttributeValue("usepositionhierarchy", value);
				this.OnPropertyChanged("UsePositionHierarchy");
			}
		}
		
		/// <summary>
		/// Indicates whether searching in a grid should use the Quick Find view for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usequickfindviewforgridsearch")]
		public System.Nullable<bool> UseQuickFindViewForGridSearch
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usequickfindviewforgridsearch");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UseQuickFindViewForGridSearch");
				this.SetAttributeValue("usequickfindviewforgridsearch", value);
				this.OnPropertyChanged("UseQuickFindViewForGridSearch");
			}
		}
		
		/// <summary>
		/// The interval at which user access is checked for auditing.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("useraccessauditinginterval")]
		public System.Nullable<int> UserAccessAuditingInterval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("useraccessauditinginterval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UserAccessAuditingInterval");
				this.SetAttributeValue("useraccessauditinginterval", value);
				this.OnPropertyChanged("UserAccessAuditingInterval");
			}
		}
		
		/// <summary>
		/// Indicates whether the read-optimized form should be enabled for this organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usereadform")]
		public System.Nullable<bool> UseReadForm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usereadform");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UseReadForm");
				this.SetAttributeValue("usereadform", value);
				this.OnPropertyChanged("UseReadForm");
			}
		}
		
		/// <summary>
		/// Unique identifier of the default group of users in the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usergroupid")]
		public System.Nullable<System.Guid> UserGroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("usergroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UserGroupId");
				this.SetAttributeValue("usergroupid", value);
				this.OnPropertyChanged("UserGroupId");
			}
		}
		
		/// <summary>
		/// Indicates default protocol selected for organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("useskypeprotocol")]
		public System.Nullable<bool> UseSkypeProtocol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("useskypeprotocol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UseSkypeProtocol");
				this.SetAttributeValue("useskypeprotocol", value);
				this.OnPropertyChanged("UseSkypeProtocol");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Hash of the V3 callout configuration file.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("v3calloutconfighash")]
		public string V3CalloutConfigHash
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("v3calloutconfighash");
			}
		}
		
		/// <summary>
		/// Version number of the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Hash value of web resources.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("webresourcehash")]
		public string WebResourceHash
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("webresourcehash");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("WebResourceHash");
				this.SetAttributeValue("webresourcehash", value);
				this.OnPropertyChanged("WebResourceHash");
			}
		}
		
		/// <summary>
		/// Designated first day of the week throughout Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("weekstartdaycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue WeekStartDayCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("weekstartdaycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("WeekStartDayCode");
				this.SetAttributeValue("weekstartdaycode", value);
				this.OnPropertyChanged("WeekStartDayCode");
			}
		}
		
		/// <summary>
		/// For Internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("widgetproperties")]
		public string WidgetProperties
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("widgetproperties");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("WidgetProperties");
				this.SetAttributeValue("widgetproperties", value);
				this.OnPropertyChanged("WidgetProperties");
			}
		}
		
		/// <summary>
		/// Denotes the Yammer group ID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yammergroupid")]
		public System.Nullable<int> YammerGroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("yammergroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("YammerGroupId");
				this.SetAttributeValue("yammergroupid", value);
				this.OnPropertyChanged("YammerGroupId");
			}
		}
		
		/// <summary>
		/// Denotes the Yammer network permalink
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yammernetworkpermalink")]
		public string YammerNetworkPermalink
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yammernetworkpermalink");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("YammerNetworkPermalink");
				this.SetAttributeValue("yammernetworkpermalink", value);
				this.OnPropertyChanged("YammerNetworkPermalink");
			}
		}
		
		/// <summary>
		/// Denotes whether the OAuth access token for Yammer network has expired
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yammeroauthaccesstokenexpired")]
		public System.Nullable<bool> YammerOAuthAccessTokenExpired
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("yammeroauthaccesstokenexpired");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("YammerOAuthAccessTokenExpired");
				this.SetAttributeValue("yammeroauthaccesstokenexpired", value);
				this.OnPropertyChanged("YammerOAuthAccessTokenExpired");
			}
		}
		
		/// <summary>
		/// Internal Use Only
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yammerpostmethod")]
		public virtual Organization_YammerPostMethod? YammerPostMethod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Organization_YammerPostMethod?)(EntityOptionSetEnum.GetEnum(this, "yammerpostmethod")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("YammerPostMethod");
				this.SetAttributeValue("yammerpostmethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("YammerPostMethod");
			}
		}
		
		/// <summary>
		/// Information that specifies how the first week of the year is specified in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yearstartweekcode")]
		public System.Nullable<int> YearStartWeekCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("yearstartweekcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("YearStartWeekCode");
				this.SetAttributeValue("yearstartweekcode", value);
				this.OnPropertyChanged("YearStartWeekCode");
			}
		}
		
		/// <summary>
		/// 1:N organization_apisettings
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_apisettings")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.apisettings> organization_apisettings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.apisettings>("organization_apisettings", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_apisettings");
				this.SetRelatedEntities<Xyz.Xrm.Entities.apisettings>("organization_apisettings", null, value);
				this.OnPropertyChanged("organization_apisettings");
			}
		}
		
		/// <summary>
		/// 1:N organization_appconfig
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_appconfig")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.AppConfig> organization_appconfig
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.AppConfig>("organization_appconfig", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_appconfig");
				this.SetRelatedEntities<Xyz.Xrm.Entities.AppConfig>("organization_appconfig", null, value);
				this.OnPropertyChanged("organization_appconfig");
			}
		}
		
		/// <summary>
		/// 1:N organization_appconfiginstance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_appconfiginstance")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.AppConfigInstance> organization_appconfiginstance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.AppConfigInstance>("organization_appconfiginstance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_appconfiginstance");
				this.SetRelatedEntities<Xyz.Xrm.Entities.AppConfigInstance>("organization_appconfiginstance", null, value);
				this.OnPropertyChanged("organization_appconfiginstance");
			}
		}
		
		/// <summary>
		/// 1:N organization_appconfigmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_appconfigmaster")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.AppConfigMaster> organization_appconfigmaster
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.AppConfigMaster>("organization_appconfigmaster", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_appconfigmaster");
				this.SetRelatedEntities<Xyz.Xrm.Entities.AppConfigMaster>("organization_appconfigmaster", null, value);
				this.OnPropertyChanged("organization_appconfigmaster");
			}
		}
		
		/// <summary>
		/// 1:N Organization_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Organization_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.AsyncOperation> Organization_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.AsyncOperation>("Organization_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Organization_AsyncOperations");
				this.SetRelatedEntities<Xyz.Xrm.Entities.AsyncOperation>("Organization_AsyncOperations", null, value);
				this.OnPropertyChanged("Organization_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N organization_attributemap
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_attributemap")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.AttributeMap> organization_attributemap
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.AttributeMap>("organization_attributemap", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_attributemap");
				this.SetRelatedEntities<Xyz.Xrm.Entities.AttributeMap>("organization_attributemap", null, value);
				this.OnPropertyChanged("organization_attributemap");
			}
		}
		
		/// <summary>
		/// 1:N organization_business_units
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_business_units")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.BusinessUnit> organization_business_units
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.BusinessUnit>("organization_business_units", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_business_units");
				this.SetRelatedEntities<Xyz.Xrm.Entities.BusinessUnit>("organization_business_units", null, value);
				this.OnPropertyChanged("organization_business_units");
			}
		}
		
		/// <summary>
		/// 1:N organization_competitors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_competitors")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Competitor> organization_competitors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Competitor>("organization_competitors", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_competitors");
				this.SetRelatedEntities<Xyz.Xrm.Entities.Competitor>("organization_competitors", null, value);
				this.OnPropertyChanged("organization_competitors");
			}
		}
		
		/// <summary>
		/// 1:N organization_msdyn_processnotes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_msdyn_processnotes")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.msdyn_processnotes> organization_msdyn_processnotes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.msdyn_processnotes>("organization_msdyn_processnotes", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_msdyn_processnotes");
				this.SetRelatedEntities<Xyz.Xrm.Entities.msdyn_processnotes>("organization_msdyn_processnotes", null, value);
				this.OnPropertyChanged("organization_msdyn_processnotes");
			}
		}
		
		/// <summary>
		/// 1:N organization_opportunitysalesprocess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_opportunitysalesprocess")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.OpportunitySalesProcess> organization_opportunitysalesprocess
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.OpportunitySalesProcess>("organization_opportunitysalesprocess", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_opportunitysalesprocess");
				this.SetRelatedEntities<Xyz.Xrm.Entities.OpportunitySalesProcess>("organization_opportunitysalesprocess", null, value);
				this.OnPropertyChanged("organization_opportunitysalesprocess");
			}
		}
		
		/// <summary>
		/// 1:N organization_pluginassembly
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_pluginassembly")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.PluginAssembly> organization_pluginassembly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.PluginAssembly>("organization_pluginassembly", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_pluginassembly");
				this.SetRelatedEntities<Xyz.Xrm.Entities.PluginAssembly>("organization_pluginassembly", null, value);
				this.OnPropertyChanged("organization_pluginassembly");
			}
		}
		
		/// <summary>
		/// 1:N organization_plugintype
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_plugintype")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.PluginType> organization_plugintype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.PluginType>("organization_plugintype", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_plugintype");
				this.SetRelatedEntities<Xyz.Xrm.Entities.PluginType>("organization_plugintype", null, value);
				this.OnPropertyChanged("organization_plugintype");
			}
		}
		
		/// <summary>
		/// 1:N organization_plugintypestatistic
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_plugintypestatistic")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.PluginTypeStatistic> organization_plugintypestatistic
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.PluginTypeStatistic>("organization_plugintypestatistic", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_plugintypestatistic");
				this.SetRelatedEntities<Xyz.Xrm.Entities.PluginTypeStatistic>("organization_plugintypestatistic", null, value);
				this.OnPropertyChanged("organization_plugintypestatistic");
			}
		}
		
		/// <summary>
		/// 1:N organization_price_levels
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_price_levels")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.PriceLevel> organization_price_levels
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.PriceLevel>("organization_price_levels", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_price_levels");
				this.SetRelatedEntities<Xyz.Xrm.Entities.PriceLevel>("organization_price_levels", null, value);
				this.OnPropertyChanged("organization_price_levels");
			}
		}
		
		/// <summary>
		/// 1:N organization_products
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_products")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Product> organization_products
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Product>("organization_products", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_products");
				this.SetRelatedEntities<Xyz.Xrm.Entities.Product>("organization_products", null, value);
				this.OnPropertyChanged("organization_products");
			}
		}
		
		/// <summary>
		/// 1:N organization_queueitems
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_queueitems")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.QueueItem> organization_queueitems
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.QueueItem>("organization_queueitems", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_queueitems");
				this.SetRelatedEntities<Xyz.Xrm.Entities.QueueItem>("organization_queueitems", null, value);
				this.OnPropertyChanged("organization_queueitems");
			}
		}
		
		/// <summary>
		/// 1:N organization_queues
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_queues")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Queue> organization_queues
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Queue>("organization_queues", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_queues");
				this.SetRelatedEntities<Xyz.Xrm.Entities.Queue>("organization_queues", null, value);
				this.OnPropertyChanged("organization_queues");
			}
		}
		
		/// <summary>
		/// 1:N organization_ribbon_customization
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_ribbon_customization")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.RibbonCustomization> organization_ribbon_customization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.RibbonCustomization>("organization_ribbon_customization", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_ribbon_customization");
				this.SetRelatedEntities<Xyz.Xrm.Entities.RibbonCustomization>("organization_ribbon_customization", null, value);
				this.OnPropertyChanged("organization_ribbon_customization");
			}
		}
		
		/// <summary>
		/// 1:N organization_roles
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_roles")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Role> organization_roles
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Role>("organization_roles", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_roles");
				this.SetRelatedEntities<Xyz.Xrm.Entities.Role>("organization_roles", null, value);
				this.OnPropertyChanged("organization_roles");
			}
		}
		
		/// <summary>
		/// 1:N organization_sites
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_sites")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Site> organization_sites
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Site>("organization_sites", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_sites");
				this.SetRelatedEntities<Xyz.Xrm.Entities.Site>("organization_sites", null, value);
				this.OnPropertyChanged("organization_sites");
			}
		}
		
		/// <summary>
		/// 1:N organization_system_users
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_system_users")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.SystemUser> organization_system_users
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.SystemUser>("organization_system_users", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_system_users");
				this.SetRelatedEntities<Xyz.Xrm.Entities.SystemUser>("organization_system_users", null, value);
				this.OnPropertyChanged("organization_system_users");
			}
		}
		
		/// <summary>
		/// 1:N organization_teams
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_teams")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Team> organization_teams
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Team>("organization_teams", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_teams");
				this.SetRelatedEntities<Xyz.Xrm.Entities.Team>("organization_teams", null, value);
				this.OnPropertyChanged("organization_teams");
			}
		}
		
		/// <summary>
		/// 1:N organization_transactioncurrencies
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_transactioncurrencies")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.TransactionCurrency> organization_transactioncurrencies
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.TransactionCurrency>("organization_transactioncurrencies", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_transactioncurrencies");
				this.SetRelatedEntities<Xyz.Xrm.Entities.TransactionCurrency>("organization_transactioncurrencies", null, value);
				this.OnPropertyChanged("organization_transactioncurrencies");
			}
		}
		
		/// <summary>
		/// N:1 basecurrency_organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("basecurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("basecurrency_organization")]
		public Xyz.Xrm.Entities.TransactionCurrency basecurrency_organization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.TransactionCurrency>("basecurrency_organization", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("basecurrency_organization");
				this.SetRelatedEntity<Xyz.Xrm.Entities.TransactionCurrency>("basecurrency_organization", null, value);
				this.OnPropertyChanged("basecurrency_organization");
			}
		}
		
		/// <summary>
		/// N:1 lk_organization_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_organization_createdonbehalfby")]
		public Xyz.Xrm.Entities.SystemUser lk_organization_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_organization_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_organization_createdonbehalfby");
				this.SetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_organization_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_organization_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_organization_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_organization_modifiedonbehalfby")]
		public Xyz.Xrm.Entities.SystemUser lk_organization_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_organization_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_organization_modifiedonbehalfby");
				this.SetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_organization_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_organization_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_organizationbase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_organizationbase_createdby")]
		public Xyz.Xrm.Entities.SystemUser lk_organizationbase_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_organizationbase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_organizationbase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_organizationbase_modifiedby")]
		public Xyz.Xrm.Entities.SystemUser lk_organizationbase_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_organizationbase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Organization(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["organizationid"] = base.Id;
                        break;
                    case "organizationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}