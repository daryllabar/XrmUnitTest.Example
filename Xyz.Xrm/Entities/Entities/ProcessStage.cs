#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xyz.Xrm.Entities
{
	
	
	/// <summary>
	/// The operation kind
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ProcessStage_OperationKind
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("AddToTime", 11, "#0000ff")]
		Addtotime = 473330011,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Alert", 5, "#0000ff")]
		Alert = 473330005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ApiConnection", 4, "#0000ff")]
		Apiconnection = 473330004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("AzureMonitorAlert", 13, "#0000ff")]
		Azuremonitoralert = 473330013,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Button", 3, "#0000ff")]
		Button = 473330003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ConvertTimeZone", 8, "#0000ff")]
		Converttimezone = 473330008,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("CurrentTime", 7, "#0000ff")]
		Currenttime = 473330007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("EventGrid", 6, "#0000ff")]
		Eventgrid = 473330006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("FormatNumber", 24, "#0000ff")]
		Formatnumber = 473330024,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Geofence", 19, "#0000ff")]
		Geofence = 473330019,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("GetFutureTime", 9, "#0000ff")]
		Getfuturetime = 473330009,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("GetPastTime", 10, "#0000ff")]
		Getpasttime = 473330010,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Http", 0, "#0000ff")]
		Http = 473330000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("IndexOf", 21, "#0000ff")]
		Indexof = 473330021,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("JsonToJson", 15, "#0000ff")]
		Jsontojson = 473330015,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("JsonToText", 16, "#0000ff")]
		Jsontotext = 473330016,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ODataOpenApiConnection", 20, "#0000ff")]
		Odataopenapiconnection = 473330020,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("PowerApp", 1, "#0000ff")]
		Powerapp = 473330001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("PowerAppV2", 2, "#0000ff")]
		Powerappv2 = 473330002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("SecurityCenterAlert", 14, "#0000ff")]
		Securitycenteralert = 473330014,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Skills", 25, "#0000ff")]
		Skills = 473330025,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Substring", 22, "#0000ff")]
		Substring = 473330022,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("SubtractFromTime", 12, "#0000ff")]
		Subtractfromtime = 473330012,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("VirtualAgent", 23, "#0000ff")]
		Virtualagent = 473330023,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("XmlToJson", 17, "#0000ff")]
		Xmltojson = 473330017,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("XmlToText", 18, "#0000ff")]
		Xmltotext = 473330018,
	}
	
	/// <summary>
	/// The type of the operation
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ProcessStage_OperationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ApiApp", 1, "#0000ff")]
		Apiapp = 473330001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ApiConnection", 6, "#0000ff")]
		Apiconnection = 473330006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ApiConnectionNotification", 50, "#0000ff")]
		Apiconnectionnotification = 473330050,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ApiConnectionWebhook", 9, "#0000ff")]
		Apiconnectionwebhook = 473330009,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ApiManagement", 16, "#0000ff")]
		Apimanagement = 473330016,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("AppendToArrayVariable", 37, "#0000ff")]
		Appendtoarrayvariable = 473330037,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("AppendToStringVariable", 38, "#0000ff")]
		Appendtostringvariable = 473330038,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("As2Decode", 45, "#0000ff")]
		As2decode = 473330045,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("As2Encode", 46, "#0000ff")]
		As2encode = 473330046,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Batch", 39, "#0000ff")]
		Batch = 473330039,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Changeset", 51, "#0000ff")]
		Changeset = 473330051,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Compose", 13, "#0000ff")]
		Compose = 473330013,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("DecrementVariable", 35, "#0000ff")]
		Decrementvariable = 473330035,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Expression", 42, "#0000ff")]
		Expression = 473330042,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("FlatFileDecoding", 25, "#0000ff")]
		Flatfiledecoding = 473330025,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("FlatFileEncoding", 18, "#0000ff")]
		Flatfileencoding = 473330018,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Flow", 4, "#0000ff")]
		Flow = 473330004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Foreach", 22, "#0000ff")]
		Foreach = 473330022,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Function", 15, "#0000ff")]
		Function = 473330015,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Http", 0, "#0000ff")]
		Http = 473330000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("HttpWebhook", 12, "#0000ff")]
		Httpwebhook = 473330012,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("If", 21, "#0000ff")]
		If = 473330021,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("IncrementVariable", 34, "#0000ff")]
		Incrementvariable = 473330034,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("InitializeVariable", 33, "#0000ff")]
		Initializevariable = 473330033,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("IntegrationAccountArtifactLookup", 27, "#0000ff")]
		Integrationaccountartifactlookup = 473330027,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("JavascriptCode", 44, "#0000ff")]
		Javascriptcode = 473330044,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Join", 31, "#0000ff")]
		Join = 473330031,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Liquid", 43, "#0000ff")]
		Liquid = 473330043,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Manual", 8, "#0000ff")]
		Manual = 473330008,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("OpenApiConnection", 7, "#0000ff")]
		Openapiconnection = 473330007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("OpenApiConnectionWebhook", 10, "#0000ff")]
		Openapiconnectionwebhook = 473330010,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ParseJson", 29, "#0000ff")]
		Parsejson = 473330029,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Query", 14, "#0000ff")]
		Query = 473330014,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Recurrence", 2, "#0000ff")]
		Recurrence = 473330002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Request", 20, "#0000ff")]
		Request = 473330020,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Response", 11, "#0000ff")]
		Response = 473330011,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("RosettaNetDecode", 48, "#0000ff")]
		Rosettanetdecode = 473330048,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("RosettaNetEncode", 47, "#0000ff")]
		Rosettanetencode = 473330047,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("RosettaNetWaitForResponse", 49, "#0000ff")]
		Rosettanetwaitforresponse = 473330049,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Scope", 19, "#0000ff")]
		Scope = 473330019,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Select", 32, "#0000ff")]
		Select = 473330032,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("SendToBatch", 40, "#0000ff")]
		Sendtobatch = 473330040,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("SetVariable", 36, "#0000ff")]
		Setvariable = 473330036,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("SlidingWindow", 41, "#0000ff")]
		Slidingwindow = 473330041,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("SwiftEncode", 52, "#0000ff")]
		Swiftencode = 473330052,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Switch", 28, "#0000ff")]
		Switch = 473330028,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Table", 30, "#0000ff")]
		Table = 473330030,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Terminate", 26, "#0000ff")]
		Terminate = 473330026,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Until", 23, "#0000ff")]
		Until = 473330023,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Wait", 5, "#0000ff")]
		Wait = 473330005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Workflow", 3, "#0000ff")]
		Workflow = 473330003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("XmlValidation", 17, "#0000ff")]
		Xmlvalidation = 473330017,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Xslt", 24, "#0000ff")]
		Xslt = 473330024,
	}
	
	/// <summary>
	/// Stage associated with a process.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("processstage")]
	public partial class ProcessStage : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the processstage entity
		/// </summary>
		public partial class Fields
		{
			public const string ClientData = "clientdata";
			public const string Connector = "connector";
			public const string IsTrigger = "istrigger";
			public const string IsTriggerName = "istriggername";
			public const string OperationId = "operationid";
			public const string OperationKind = "operationkind";
			public const string OperationKindName = "operationkindname";
			public const string OperationType = "operationtype";
			public const string OperationTypeName = "operationtypename";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string ParameterName = "parametername";
			public const string ParameterValue = "parametervalue";
			public const string ParentProcessStageId = "parentprocessstageid";
			public const string ParentProcessStageIdName = "parentprocessstageidname";
			public const string PrimaryEntityTypeCode = "primaryentitytypecode";
			public const string PrimaryEntityTypeCodename = "primaryentitytypecodename";
			public const string Process_ProcessStage = "process_processstage";
			public const string ProcessId = "processid";
			public const string ProcessIdName = "processidname";
			public const string ProcessStage_Account = "ProcessStage_Account";
			public const string ProcessStage_Appointments = "ProcessStage_Appointments";
			public const string ProcessStage_Contact = "ProcessStage_Contact";
			public const string ProcessStage_Emails = "ProcessStage_Emails";
			public const string ReferencingProcessStage_ParentProcessStage = "processstage_parentprocessstage";
			public const string ProcessStage_PhoneCalls = "ProcessStage_PhoneCalls";
			public const string ProcessStage_ProcessStageParameter = "ProcessStage_ProcessStageParameter";
			public const string ProcessStage_SystemUsers = "ProcessStage_SystemUsers";
			public const string ProcessStage_Tasks = "ProcessStage_Tasks";
			public const string ProcessStage_Teams = "ProcessStage_Teams";
			public const string ProcessStageId = "processstageid";
			public const string Id = "processstageid";
			public const string ReferencedProcessStage_ParentProcessStage = "ReferencedProcessStage_ParentProcessStage";
			public const string StageCategory = "stagecategory";
			public const string StageCategoryName = "stagecategoryname";
			public const string StageName = "stagename";
			public const string VersionNumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ProcessStage(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ProcessStage(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ProcessStage(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ProcessStage() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "processstageid";
		
		public const string PrimaryNameAttribute = "stagename";
		
		public const string EntitySchemaName = "ProcessStage";
		
		public const string EntityLogicalName = "processstage";
		
		public const string EntityLogicalCollectionName = "processstages";
		
		public const string EntitySetName = "processstages";
		
		/// <summary>
		/// Step metadata for process stage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientdata")]
		public string ClientData
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("clientdata");
			}
		}
		
		/// <summary>
		/// The connector associated with the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connector")]
		public string Connector
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("connector");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("connector", value);
			}
		}
		
		/// <summary>
		/// Whether the stage is a trigger
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("istrigger")]
		public System.Nullable<bool> IsTrigger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("istrigger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("istrigger", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("istriggername")]
		public string IsTriggerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("istrigger"))
				{
					return this.FormattedValues["istrigger"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The operation id of the stage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationid")]
		public string OperationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("operationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("operationid", value);
			}
		}
		
		/// <summary>
		/// The operation kind
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationkind")]
		public virtual ProcessStage_OperationKind? OperationKind
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ProcessStage_OperationKind?)(EntityOptionSetEnum.GetEnum(this, "operationkind")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("operationkind", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationkindname")]
		public string OperationKindName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("operationkind"))
				{
					return this.FormattedValues["operationkind"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The type of the operation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationtype")]
		public virtual ProcessStage_OperationType? OperationType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ProcessStage_OperationType?)(EntityOptionSetEnum.GetEnum(this, "operationtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("operationtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationtypename")]
		public string OperationTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("operationtype"))
				{
					return this.FormattedValues["operationtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
		}
		
		/// <summary>
		/// Select the business unit that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public System.Nullable<System.Guid> OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// The parameter name.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parametername")]
		public string ParameterName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("parametername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parametername", value);
			}
		}
		
		/// <summary>
		/// The parameter value.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parametervalue")]
		public string ParameterValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("parametervalue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parametervalue", value);
			}
		}
		
		/// <summary>
		/// The parent stage for the parameter.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentprocessstageid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentProcessStageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentprocessstageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parentprocessstageid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentprocessstageidname")]
		public string ParentProcessStageIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("parentprocessstageid"))
				{
					return this.FormattedValues["parentprocessstageid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Primary entity associated with the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryentitytypecode")]
		public string PrimaryEntityTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("primaryentitytypecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("primaryentitytypecode", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryentitytypecodename")]
		public string PrimaryEntityTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("primaryentitytypecode"))
				{
					return this.FormattedValues["primaryentitytypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public Microsoft.Xrm.Sdk.EntityReference ProcessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processidname")]
		public string ProcessIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("processid"))
				{
					return this.FormattedValues["processid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the ID of the process stage record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processstageid")]
		public System.Nullable<System.Guid> ProcessStageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processstageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processstageid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processstageid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ProcessStageId = value;
			}
		}
		
		/// <summary>
		/// Select the category of the sales process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stagecategory")]
		public virtual Processstage_Category? StageCategory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Processstage_Category?)(EntityOptionSetEnum.GetEnum(this, "stagecategory")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stagecategory", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stagecategoryname")]
		public string StageCategoryName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("stagecategory"))
				{
					return this.FormattedValues["stagecategory"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type a name for the process stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stagename")]
		public string StageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("stagename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stagename", value);
			}
		}
		
		/// <summary>
		/// Version number of the process stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N processstage_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_account")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Account> ProcessStage_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Account>("processstage_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.Account>("processstage_account", null, value);
			}
		}
		
		/// <summary>
		/// 1:N processstage_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_appointments")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Appointment> ProcessStage_Appointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Appointment>("processstage_appointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.Appointment>("processstage_appointments", null, value);
			}
		}
		
		/// <summary>
		/// 1:N processstage_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_contact")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Contact> ProcessStage_Contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Contact>("processstage_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.Contact>("processstage_contact", null, value);
			}
		}
		
		/// <summary>
		/// 1:N processstage_emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_emails")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Email> ProcessStage_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Email>("processstage_emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.Email>("processstage_emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N processstage_parentprocessstage
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_parentprocessstage", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.ProcessStage> ReferencedProcessStage_ParentProcessStage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.ProcessStage>("processstage_parentprocessstage", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.ProcessStage>("processstage_parentprocessstage", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N processstage_phonecalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_phonecalls")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.PhoneCall> ProcessStage_PhoneCalls
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.PhoneCall>("processstage_phonecalls", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.PhoneCall>("processstage_phonecalls", null, value);
			}
		}
		
		/// <summary>
		/// 1:N processstage_processstageparameter
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_processstageparameter")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.ProcessStageParameter> ProcessStage_ProcessStageParameter
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.ProcessStageParameter>("processstage_processstageparameter", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.ProcessStageParameter>("processstage_processstageparameter", null, value);
			}
		}
		
		/// <summary>
		/// 1:N processstage_systemusers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_systemusers")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.SystemUser> ProcessStage_SystemUsers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.SystemUser>("processstage_systemusers", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.SystemUser>("processstage_systemusers", null, value);
			}
		}
		
		/// <summary>
		/// 1:N processstage_tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_tasks")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Task> ProcessStage_Tasks
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Task>("processstage_tasks", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.Task>("processstage_tasks", null, value);
			}
		}
		
		/// <summary>
		/// 1:N processstage_teams
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_teams")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Team> ProcessStage_Teams
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Team>("processstage_teams", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.Team>("processstage_teams", null, value);
			}
		}
		
		/// <summary>
		/// N:1 process_processstage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("process_processstage")]
		public Xyz.Xrm.Entities.Workflow Process_ProcessStage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Workflow>("process_processstage", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Workflow>("process_processstage", null, value);
			}
		}
		
		/// <summary>
		/// N:1 processstage_parentprocessstage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentprocessstageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_parentprocessstage", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Xyz.Xrm.Entities.ProcessStage ReferencingProcessStage_ParentProcessStage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.ProcessStage>("processstage_parentprocessstage", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.ProcessStage>("processstage_parentprocessstage", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ProcessStage(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["processstageid"] = base.Id;
                        break;
                    case "processstageid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
