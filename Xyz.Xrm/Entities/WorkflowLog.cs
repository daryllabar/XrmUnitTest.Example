//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

//------------------------------------------------------------------------------

namespace Xyz.Xrm.Entities
{
	
	/// <summary>
	/// Log used to track process execution.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("workflowlog")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.42")]
	public partial class WorkflowLog : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActivityName = "activityname";
			public const string AsyncOperationId = "asyncoperationid";
			public const string ChildWorkflowInstanceId = "childworkflowinstanceid";
			public const string CompletedOn = "completedon";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string Description = "description";
			public const string Duration = "duration";
			public const string ErrorCode = "errorcode";
			public const string ErrorText = "errortext";
			public const string InteractionActivityResult = "interactionactivityresult";
			public const string IterationCount = "iterationcount";
			public const string Message = "message";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RepetitionCount = "repetitioncount";
			public const string RepetitionId = "repetitionid";
			public const string StageName = "stagename";
			public const string StartedOn = "startedon";
			public const string Status = "status";
			public const string StepName = "stepname";
			public const string WorkflowLogId = "workflowlogid";
			public const string Id = "workflowlogid";
			public const string business_unit_workflowlogs = "business_unit_workflowlogs";
			public const string lk_opportunitysalesprocess_workflowlogs = "lk_opportunitysalesprocess_workflowlogs";
			public const string lk_workflowlog_asyncoperation_childworkflow = "lk_workflowlog_asyncoperation_childworkflow";
			public const string lk_workflowlog_asyncoperations = "lk_workflowlog_asyncoperations";
			public const string lk_workflowlog_createdby = "lk_workflowlog_createdby";
			public const string lk_workflowlog_createdonbehalfby = "lk_workflowlog_createdonbehalfby";
			public const string lk_workflowlog_modifiedby = "lk_workflowlog_modifiedby";
			public const string lk_workflowlog_modifiedonbehalfby = "lk_workflowlog_modifiedonbehalfby";
			public const string lk_workflowlog_processsession = "lk_workflowlog_processsession";
			public const string lk_workflowlog_processsession_childworkflow = "lk_workflowlog_processsession_childworkflow";
			public const string team_workflowlog = "team_workflowlog";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public WorkflowLog() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "workflowlog";
		
		public const string EntitySchemaName = "WorkflowLog";
		
		public const string PrimaryIdAttribute = "workflowlogid";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Name of the activity which the process step is currently processing.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityname")]
		public string ActivityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("activityname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActivityName");
				this.SetAttributeValue("activityname", value);
				this.OnPropertyChanged("ActivityName");
			}
		}
		
		/// <summary>
		/// lk_opportunitysalesprocess_workflowlogs
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncoperationid")]
		public Microsoft.Xrm.Sdk.EntityReference AsyncOperationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("asyncoperationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AsyncOperationId");
				this.SetAttributeValue("asyncoperationid", value);
				this.OnPropertyChanged("AsyncOperationId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("childworkflowinstanceid")]
		public Microsoft.Xrm.Sdk.EntityReference ChildWorkflowInstanceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("childworkflowinstanceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ChildWorkflowInstanceId");
				this.SetAttributeValue("childworkflowinstanceid", value);
				this.OnPropertyChanged("ChildWorkflowInstanceId");
			}
		}
		
		/// <summary>
		/// Date and time when the operation was completed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completedon")]
		public System.Nullable<System.DateTime> CompletedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("completedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CompletedOn");
				this.SetAttributeValue("completedon", value);
				this.OnPropertyChanged("CompletedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the process log entry.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the process log entry was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the process log.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Description of the process step.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Duration between completed on and started on, used by business process flow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duration")]
		public System.Nullable<int> Duration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("duration");
			}
		}
		
		/// <summary>
		/// Error code related to process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("errorcode")]
		public System.Nullable<int> ErrorCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("errorcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ErrorCode");
				this.SetAttributeValue("errorcode", value);
				this.OnPropertyChanged("ErrorCode");
			}
		}
		
		/// <summary>
		/// The string representation of the error.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("errortext")]
		public string ErrorText
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("errortext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ErrorText");
				this.SetAttributeValue("errortext", value);
				this.OnPropertyChanged("ErrorText");
			}
		}
		
		/// <summary>
		/// String specifying the result of an interaction activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactionactivityresult")]
		public string InteractionActivityResult
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("interactionactivityresult");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("InteractionActivityResult");
				this.SetAttributeValue("interactionactivityresult", value);
				this.OnPropertyChanged("InteractionActivityResult");
			}
		}
		
		/// <summary>
		/// The iteration count for the action when in a do until loop.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iterationcount")]
		public System.Nullable<int> IterationCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("iterationcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IterationCount");
				this.SetAttributeValue("iterationcount", value);
				this.OnPropertyChanged("IterationCount");
			}
		}
		
		/// <summary>
		/// Message related to process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("message")]
		public string Message
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("message");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Message");
				this.SetAttributeValue("message", value);
				this.OnPropertyChanged("Message");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the process log entry.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the process log entry was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the process log.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the process log.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the process log.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// The count of repetitions of the action when in a loop.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("repetitioncount")]
		public System.Nullable<int> RepetitionCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("repetitioncount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RepetitionCount");
				this.SetAttributeValue("repetitioncount", value);
				this.OnPropertyChanged("RepetitionCount");
			}
		}
		
		/// <summary>
		/// The string representation of the repetition and iteration / level of the action.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("repetitionid")]
		public string RepetitionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("repetitionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RepetitionId");
				this.SetAttributeValue("repetitionid", value);
				this.OnPropertyChanged("RepetitionId");
			}
		}
		
		/// <summary>
		/// Name of the process stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stagename")]
		public string StageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("stagename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StageName");
				this.SetAttributeValue("stagename", value);
				this.OnPropertyChanged("StageName");
			}
		}
		
		/// <summary>
		/// Date and time when the operation was started.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("startedon")]
		public System.Nullable<System.DateTime> StartedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("startedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StartedOn");
				this.SetAttributeValue("startedon", value);
				this.OnPropertyChanged("StartedOn");
			}
		}
		
		/// <summary>
		/// Status of the process step for which process log record has been created: In Progress, Successfully Completed, or Failed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("status")]
		public virtual WorkflowLog_Status? Status
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((WorkflowLog_Status?)(EntityOptionSetEnum.GetEnum(this, "status")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Status");
				this.SetAttributeValue("status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("Status");
			}
		}
		
		/// <summary>
		/// Name of the process step.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stepname")]
		public string StepName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("stepname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StepName");
				this.SetAttributeValue("stepname", value);
				this.OnPropertyChanged("StepName");
			}
		}
		
		/// <summary>
		/// Unique identifier of the process log entry.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowlogid")]
		public System.Nullable<System.Guid> WorkflowLogId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("workflowlogid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("WorkflowLogId");
				this.SetAttributeValue("workflowlogid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("WorkflowLogId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowlogid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.WorkflowLogId = value;
			}
		}
		
		/// <summary>
		/// N:1 business_unit_workflowlogs
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_workflowlogs")]
		public Xyz.Xrm.Entities.BusinessUnit business_unit_workflowlogs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.BusinessUnit>("business_unit_workflowlogs", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opportunitysalesprocess_workflowlogs
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncoperationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunitysalesprocess_workflowlogs")]
		public Xyz.Xrm.Entities.OpportunitySalesProcess lk_opportunitysalesprocess_workflowlogs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.OpportunitySalesProcess>("lk_opportunitysalesprocess_workflowlogs", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_opportunitysalesprocess_workflowlogs");
				this.SetRelatedEntity<Xyz.Xrm.Entities.OpportunitySalesProcess>("lk_opportunitysalesprocess_workflowlogs", null, value);
				this.OnPropertyChanged("lk_opportunitysalesprocess_workflowlogs");
			}
		}
		
		/// <summary>
		/// N:1 lk_workflowlog_asyncoperation_childworkflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("childworkflowinstanceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_asyncoperation_childworkflow")]
		public Xyz.Xrm.Entities.AsyncOperation lk_workflowlog_asyncoperation_childworkflow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.AsyncOperation>("lk_workflowlog_asyncoperation_childworkflow", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_workflowlog_asyncoperation_childworkflow");
				this.SetRelatedEntity<Xyz.Xrm.Entities.AsyncOperation>("lk_workflowlog_asyncoperation_childworkflow", null, value);
				this.OnPropertyChanged("lk_workflowlog_asyncoperation_childworkflow");
			}
		}
		
		/// <summary>
		/// N:1 lk_workflowlog_asyncoperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncoperationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_asyncoperations")]
		public Xyz.Xrm.Entities.AsyncOperation lk_workflowlog_asyncoperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.AsyncOperation>("lk_workflowlog_asyncoperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_workflowlog_asyncoperations");
				this.SetRelatedEntity<Xyz.Xrm.Entities.AsyncOperation>("lk_workflowlog_asyncoperations", null, value);
				this.OnPropertyChanged("lk_workflowlog_asyncoperations");
			}
		}
		
		/// <summary>
		/// N:1 lk_workflowlog_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_createdby")]
		public Xyz.Xrm.Entities.SystemUser lk_workflowlog_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_workflowlog_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_workflowlog_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_createdonbehalfby")]
		public Xyz.Xrm.Entities.SystemUser lk_workflowlog_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_workflowlog_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_workflowlog_createdonbehalfby");
				this.SetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_workflowlog_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_workflowlog_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_workflowlog_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_modifiedby")]
		public Xyz.Xrm.Entities.SystemUser lk_workflowlog_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_workflowlog_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_workflowlog_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_modifiedonbehalfby")]
		public Xyz.Xrm.Entities.SystemUser lk_workflowlog_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_workflowlog_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_workflowlog_modifiedonbehalfby");
				this.SetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_workflowlog_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_workflowlog_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_workflowlog_processsession
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncoperationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_processsession")]
		public Xyz.Xrm.Entities.ProcessSession lk_workflowlog_processsession
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.ProcessSession>("lk_workflowlog_processsession", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_workflowlog_processsession");
				this.SetRelatedEntity<Xyz.Xrm.Entities.ProcessSession>("lk_workflowlog_processsession", null, value);
				this.OnPropertyChanged("lk_workflowlog_processsession");
			}
		}
		
		/// <summary>
		/// N:1 lk_workflowlog_processsession_childworkflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("childworkflowinstanceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_processsession_childworkflow")]
		public Xyz.Xrm.Entities.ProcessSession lk_workflowlog_processsession_childworkflow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.ProcessSession>("lk_workflowlog_processsession_childworkflow", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_workflowlog_processsession_childworkflow");
				this.SetRelatedEntity<Xyz.Xrm.Entities.ProcessSession>("lk_workflowlog_processsession_childworkflow", null, value);
				this.OnPropertyChanged("lk_workflowlog_processsession_childworkflow");
			}
		}
		
		/// <summary>
		/// N:1 team_workflowlog
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_workflowlog")]
		public Xyz.Xrm.Entities.Team team_workflowlog
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Team>("team_workflowlog", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public WorkflowLog(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["workflowlogid"] = base.Id;
                        break;
                    case "workflowlogid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}