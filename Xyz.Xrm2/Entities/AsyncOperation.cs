#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xyz.Xrm.Entities
{
	
	
	/// <summary>
	/// Type of the system job.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum AsyncOperation_OperationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Activity Propagation", 5)]
		ActivityPropagation = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("AI Builder Prediction Events", 72)]
		AiBuilderPredictionEvents = 190690092,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("AI Builder Training Events", 71)]
		AiBuilderTrainingEvents = 190690091,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ALM Anomaly Detection Operation", 59)]
		AlmAnomalyDetectionOperation = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("App Module Metadata Operation", 58)]
		AppModuleMetadataOperation = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Archive Execution Async Operation", 95)]
		ArchiveExecutionAsyncOperation = 301,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("AsyncArchive Async Operation", 92)]
		AsyncarchiveAsyncOperation = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Async Restore Job", 112)]
		AsyncRestoreJob = 187,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Audit Partition Creation", 35)]
		AuditPartitionCreation = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Bulk Archive Operation", 94)]
		BulkArchiveOperation = 300,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Bulk Delete", 12)]
		BulkDelete = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Bulk Delete File Attachment", 67)]
		BulkDeleteFileAttachment = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Bulk Delete Subprocess", 22)]
		BulkDeleteSubprocess = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Bulk Duplicate Detection", 7)]
		BulkDuplicateDetection = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Bulk Email", 1)]
		BulkEmail = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Calculate Organization Maximum Storage Size", 21)]
		CalculateOrganizationMaximumStorageSize = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Calculate Organization Storage Size", 17)]
		CalculateOrganizationStorageSize = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Calculate Rollup Field", 49)]
		CalculateRollupField = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("CallbackRegistration Expander Operation", 62)]
		CallbackregistrationExpanderOperation = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cancel Async Operations (System)", 93)]
		CancelAsyncOperationsSystem = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("CascadeAssign", 63)]
		Cascadeassign = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cascade Assign All Async Operation", 109)]
		CascadeAssignAllAsyncOperation = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("CascadeDelete", 64)]
		Cascadedelete = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cascade FlowSession Permissions Async Operation", 90)]
		CascadeFlowsessionPermissionsAsyncOperation = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cascade Grant or Revoke Access Version Tracking Async Operation", 110)]
		CascadeGrantOrRevokeAccessVersionTrackingAsyncOperation = 12801,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cascade Merge Async Operation", 78)]
		CascadeMergeAsyncOperation = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cascade Reparent DB Async Operation", 77)]
		CascadeReparentDbAsyncOperation = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Catalog Service Generate Package Async Operation", 103)]
		CatalogServiceGeneratePackageAsyncOperation = 320,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Catalog Service Install Request Async Operation", 105)]
		CatalogServiceInstallRequestAsyncOperation = 322,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Catalog Service Submit Approval Request Async Operation", 104)]
		CatalogServiceSubmitApprovalRequestAsyncOperation = 321,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Check For Language Pack Updates", 36)]
		CheckForLanguagePackUpdates = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cleanup inactive workflow assemblies", 31)]
		CleanupInactiveWorkflowAssemblies = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cleanup Solution Components", 57)]
		CleanupSolutionComponents = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Collection Organization Size Statistics", 19)]
		CollectionOrganizationSizeStatistics = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Collect Organization Database Statistics", 18)]
		CollectOrganizationDatabaseStatistics = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Collect Organization Statistics", 15)]
		CollectOrganizationStatistics = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Convert Date And Time Behavior", 52)]
		ConvertDateAndTimeBehavior = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Create Or Refresh Virtual Entity", 79)]
		CreateOrRefreshVirtualEntity = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Database log backup", 25)]
		DatabaseLogBackup = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Database Tuning", 20)]
		DatabaseTuning = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("DBCC SHRINKDATABASE maintenance job", 27)]
		DbccShrinkdatabaseMaintenanceJob = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("DBCC SHRINKFILE maintenance job", 28)]
		DbccShrinkfileMaintenanceJob = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("DeleteAndPromote Async Operation", 83)]
		DeleteandpromoteAsyncOperation = 207,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Deletes related Elastic Table records when a SQL record is deleted", 108)]
		DeletesRelatedElasticTableRecordsWhenASqlRecordIsDeleted = 333,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Deletion Service", 13)]
		DeletionService = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Denormalization Async Operation", 88)]
		DenormalizationAsyncOperation = 239,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Duplicate Detection Rule Publish", 6)]
		DuplicateDetectionRulePublish = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Encryption Health Check", 45)]
		EncryptionHealthCheck = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("EntityKey Index Creation", 53)]
		EntitykeyIndexCreation = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Event Expander Operation", 65)]
		EventExpanderOperation = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Execute Async Request", 46)]
		ExecuteAsyncRequest = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Execute DataProcessing Configuration", 99)]
		ExecuteDataprocessingConfiguration = 306,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Export Solution Async Operation", 80)]
		ExportSolutionAsyncOperation = 202,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("FinOps DB Sync Async Operation", 101)]
		FinopsDbSyncAsyncOperation = 308,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("FinOps Deploy Custom Package Async Operation", 107)]
		FinopsDeployCustomPackageAsyncOperation = 332,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("FinOps Deployment Async Operation", 96)]
		FinopsDeploymentAsyncOperation = 302,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("FinOps Unit Test Async Operation", 102)]
		FinopsUnitTestAsyncOperation = 309,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Flow Notification", 60)]
		FlowNotification = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Goal Roll Up", 34)]
		GoalRollUp = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Import", 4)]
		Import = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Import File Parse", 2)]
		ImportFileParse = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Import Sample Data", 33)]
		ImportSampleData = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Import Solution Async Operation", 81)]
		ImportSolutionAsyncOperation = 203,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Import Solution Metadata", 66)]
		ImportSolutionMetadata = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Import Subprocess", 16)]
		ImportSubprocess = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Import Translation", 51)]
		ImportTranslation = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ImportTranslation Async Operation", 86)]
		ImporttranslationAsyncOperation = 210,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Incoming Email Processing", 43)]
		IncomingEmailProcessing = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Index Management", 14)]
		IndexManagement = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Mailbox Test Access", 44)]
		MailboxTestAccess = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Mass Calculate Rollup Field", 50)]
		MassCalculateRollupField = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Matchcode Update", 11)]
		MatchcodeUpdate = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Migrate article content to file storage", 75)]
		MigrateArticleContentToFileStorage = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Migrate notes to attachments job", 74)]
		MigrateNotesToAttachmentsJob = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Organization Full Text Catalog Index", 24)]
		OrganizationFullTextCatalogIndex = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Outgoing Activity", 42)]
		OutgoingActivity = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Post Component Version Create Async Operation", 73)]
		PostComponentVersionCreateAsyncOperation = 331,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Post to Yammer", 47)]
		PostToYammer = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Process Table For RecycleBin", 111)]
		ProcessTableForRecyclebin = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("ProvisionLanguage Async Operation", 85)]
		ProvisionlanguageAsyncOperation = 209,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Provision language for user", 70)]
		ProvisionLanguageForUser = 201,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Provision Language Pack", 37)]
		ProvisionLanguagePack = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("PublishAll Async Operation", 82)]
		PublishallAsyncOperation = 204,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Purge Archived Content Operation", 97)]
		PurgeArchivedContentOperation = 304,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Quick Campaign", 10)]
		QuickCampaign = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Recurring Series Expansion", 32)]
		RecurringSeriesExpansion = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Refresh Business Unit for Records Owned By Principal", 68)]
		RefreshBusinessUnitForRecordsOwnedByPrincipal = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Refresh Runtime Integration Components Async Operation", 89)]
		RefreshRuntimeIntegrationComponentsAsyncOperation = 250,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Regenerate Entity Row Count Snapshot Data", 40)]
		RegenerateEntityRowCountSnapshotData = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Regenerate Read Share Snapshot Data", 41)]
		RegenerateReadShareSnapshotData = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Register Offering Async Operation", 98)]
		RegisterOfferingAsyncOperation = 305,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Reindex all indices maintenance job", 29)]
		ReindexAllIndicesMaintenanceJob = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Relationship Assistant Cards", 56)]
		RelationshipAssistantCards = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Resource Booking Sync", 55)]
		ResourceBookingSync = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Revoke Inherited Access", 69)]
		RevokeInheritedAccess = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Ribbon Client Metadata Operation", 61)]
		RibbonClientMetadataOperation = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("SQM Data Collection", 8)]
		SqmDataCollection = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("StageAndUpgrade Async Operation", 87)]
		StageandupgradeAsyncOperation = 211,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Storage Limit Notification", 30)]
		StorageLimitNotification = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Sync Synapse Tables Schema", 100)]
		SyncSynapseTablesSchema = 307,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("System Event", 0)]
		SystemEvent = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("TDS endpoint provisioning new TVF functions and grant permission Async Operation", 106)]
		TdsEndpointProvisioningNewTvfFunctionsAndGrantPermissionAsyncOperation = 330,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Transform Parse Data", 3)]
		TransformParseData = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("UninstallSolution Async Operation", 84)]
		UninstallsolutionAsyncOperation = 208,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Update Contract States", 26)]
		UpdateContractStates = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Updated Deactived On for Resolved Cases job", 76)]
		UpdatedDeactivedOnForResolvedCasesJob = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Update Entitlement States", 48)]
		UpdateEntitlementStates = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Update Knowledge Article States", 54)]
		UpdateKnowledgeArticleStates = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Update Modern Flow Async Operation", 91)]
		UpdateModernFlowAsyncOperation = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Update Organization Database", 38)]
		UpdateOrganizationDatabase = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Update Solution", 39)]
		UpdateSolution = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Update Statistic Intervals", 23)]
		UpdateStatisticIntervals = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Workflow", 9)]
		Workflow = 10,
	}
	
	/// <summary>
	/// Status of the system job.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum AsyncOperation_StateCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Completed", 3)]
		Completed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Locked", 2)]
		Locked = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Ready", 0)]
		Ready = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Suspended", 1)]
		Suspended = 1,
	}
	
	/// <summary>
	/// Reason for the status of the system job.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum AsyncOperation_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Canceled", 7)]
		Canceled = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Canceling", 4)]
		Canceling = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Failed", 6)]
		Failed = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("In Progress", 2)]
		InProgress = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Pausing", 3)]
		Pausing = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Succeeded", 5)]
		Succeeded = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Waiting", 1)]
		Waiting = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Waiting For Resources", 0)]
		WaitingForResources = 0,
	}
	
	/// <summary>
	/// Process whose execution can proceed independently or in the background.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("asyncoperation")]
	public partial class AsyncOperation : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the asyncoperation entity
		/// </summary>
		public partial class Fields
		{
			public const string Account_AsyncOperations = "Account_AsyncOperations";
			public const string ActivityMimeAttachment_AsyncOperations = "ActivityMimeAttachment_AsyncOperations";
			public const string ActivityPointer_AsyncOperations = "ActivityPointer_AsyncOperations";
			public const string Annotation_AsyncOperations = "Annotation_AsyncOperations";
			public const string Appointment_AsyncOperations = "Appointment_AsyncOperations";
			public const string AsyncOperation_Emails = "AsyncOperation_Emails";
			public const string AsyncOperationId = "asyncoperationid";
			public const string Id = "asyncoperationid";
			public const string AttributeMap_AsyncOperations = "AttributeMap_AsyncOperations";
			public const string BreadcrumbId = "breadcrumbid";
			public const string Business_Unit_AsyncOperation = "business_unit_asyncoperation";
			public const string BusinessUnit_AsyncOperations = "BusinessUnit_AsyncOperations";
			public const string CallerOrigin = "callerorigin";
			public const string CompletedOn = "completedon";
			public const string Contact_AsyncOperations = "Contact_AsyncOperations";
			public const string CorrelationId = "correlationid";
			public const string CorrelationUpdatedTime = "correlationupdatedtime";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Data = "data";
			public const string DataBlobId = "datablobid";
			public const string DataBlobId_Name = "datablobid_name";
			public const string DependencyToken = "dependencytoken";
			public const string Depth = "depth";
			public const string Email_AsyncOperations = "Email_AsyncOperations";
			public const string ErrorCode = "errorcode";
			public const string ExecutionTimesPan = "executiontimespan";
			public const string ExpanderStartTime = "expanderstarttime";
			public const string FriendlyMessage = "friendlymessage";
			public const string HostId = "hostid";
			public const string IsWaitingForEvent = "iswaitingforevent";
			public const string Lk_AsyncOperation_CreatedBy = "lk_asyncoperation_createdby";
			public const string Lk_AsyncOperation_CreatedOnBehalfBy = "lk_asyncoperation_createdonbehalfby";
			public const string Lk_AsyncOperation_ModifiedBy = "lk_asyncoperation_modifiedby";
			public const string Lk_AsyncOperation_ModifiedOnBehalfBy = "lk_asyncoperation_modifiedonbehalfby";
			public const string Lk_AsyncOperation_WorkflowActivationId = "lk_asyncoperation_workflowactivationid";
			public const string Lk_WorkflowLog_AsyncOperation_ChildWorkflow = "Lk_WorkflowLog_AsyncOperation_ChildWorkflow";
			public const string Lk_WorkflowLog_AsyncOperations = "Lk_WorkflowLog_AsyncOperations";
			public const string Message = "message";
			public const string MessageName = "messagename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OperationType = "operationtype";
			public const string OperationTypeName = "operationtypename";
			public const string Organization_AsyncOperations = "Organization_AsyncOperations";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningExtensionId = "owningextensionid";
			public const string OwningExtensionIdName = "owningextensionidname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentPlugInexecutionId = "parentpluginexecutionid";
			public const string PhoneCall_AsyncOperations = "PhoneCall_AsyncOperations";
			public const string PostponeUntil = "postponeuntil";
			public const string PrimaryEntityType = "primaryentitytype";
			public const string PrimaryEntityTypeName = "primaryentitytypename";
			public const string Privilege_AsyncOperations = "Privilege_AsyncOperations";
			public const string ProcessStageParameter_AsyncOperations = "processstageparameter_AsyncOperations";
			public const string Queue_AsyncOperations = "Queue_AsyncOperations";
			public const string QueueItem_AsyncOperations = "QueueItem_AsyncOperations";
			public const string RecurrencePattern = "recurrencepattern";
			public const string RecurrenceStartTime = "recurrencestarttime";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RequestId = "requestid";
			public const string RetainJobHistory = "retainjobhistory";
			public const string RetryCount = "retrycount";
			public const string Role_AsyncOperations = "Role_AsyncOperations";
			public const string RootExecutionContext = "rootexecutioncontext";
			public const string Sequence = "sequence";
			public const string StartedOn = "startedon";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string Subtype = "subtype";
			public const string System_User_AsyncOperation = "system_user_asyncoperation";
			public const string SystemUser_AsyncOperations = "SystemUser_AsyncOperations";
			public const string Task_AsyncOperations = "Task_AsyncOperations";
			public const string Team_AsyncOperation = "team_asyncoperation";
			public const string Team_AsyncOperations = "Team_AsyncOperations";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrency_AsyncOperations = "TransactionCurrency_AsyncOperations";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string WorkflowActivationId = "workflowactivationid";
			public const string WorkflowActivationIdName = "workflowactivationidname";
			public const string WorkflowStageName = "workflowstagename";
			public const string Workload = "workload";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public AsyncOperation(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public AsyncOperation(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public AsyncOperation(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public AsyncOperation() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "asyncoperationid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntitySchemaName = "AsyncOperation";
		
		public const string EntityLogicalName = "asyncoperation";
		
		public const string EntityLogicalCollectionName = "asyncoperations";
		
		public const string EntitySetName = "asyncoperations";
		
		/// <summary>
		/// Unique identifier of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncoperationid")]
		public System.Nullable<System.Guid> AsyncOperationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("asyncoperationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("asyncoperationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncoperationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.AsyncOperationId = value;
			}
		}
		
		/// <summary>
		/// The breadcrumb record ID.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("breadcrumbid")]
		public System.Nullable<System.Guid> BreadcrumbId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("breadcrumbid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("breadcrumbid", value);
			}
		}
		
		/// <summary>
		/// The origin of the caller.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("callerorigin")]
		public string CallerOrigin
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("callerorigin");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("callerorigin", value);
			}
		}
		
		/// <summary>
		/// Date and time when the system job was completed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completedon")]
		public System.Nullable<System.DateTime> CompletedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("completedon");
			}
		}
		
		/// <summary>
		/// Unique identifier used to correlate between multiple SDK requests and system jobs.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlationid")]
		public System.Nullable<System.Guid> CorrelationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("correlationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("correlationid", value);
			}
		}
		
		/// <summary>
		/// Last time the correlation depth was updated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlationupdatedtime")]
		public System.Nullable<System.DateTime> CorrelationUpdatedTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("correlationupdatedtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("correlationupdatedtime", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the system job was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the asyncoperation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unstructured data associated with the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("data")]
		public string Data
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("data");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("data", value);
			}
		}
		
		/// <summary>
		/// File Id for the blob url used for file storage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datablobid")]
		public object DataBlobId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("datablobid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datablobid_name")]
		public string DataBlobId_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("datablobid"))
				{
					return this.FormattedValues["datablobid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Execution of all operations with the same dependency token is serialized.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependencytoken")]
		public string DependencyToken
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dependencytoken");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dependencytoken", value);
			}
		}
		
		/// <summary>
		/// Number of SDK calls made since the first call.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("depth")]
		public System.Nullable<int> Depth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("depth");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("depth", value);
			}
		}
		
		/// <summary>
		/// Error code returned from a canceled system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("errorcode")]
		public System.Nullable<int> ErrorCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("errorcode");
			}
		}
		
		/// <summary>
		/// Time that the system job has taken to execute.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("executiontimespan")]
		public System.Nullable<double> ExecutionTimesPan
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("executiontimespan");
			}
		}
		
		/// <summary>
		/// The datetime when the Expander pipeline started.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expanderstarttime")]
		public System.Nullable<System.DateTime> ExpanderStartTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("expanderstarttime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("expanderstarttime", value);
			}
		}
		
		/// <summary>
		/// Message provided by the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("friendlymessage")]
		public string FriendlyMessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("friendlymessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("friendlymessage", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the host that owns this system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hostid")]
		public string HostId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("hostid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("hostid", value);
			}
		}
		
		/// <summary>
		/// Indicates that the system job is waiting for an event.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iswaitingforevent")]
		public System.Nullable<bool> IsWaitingForEvent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iswaitingforevent");
			}
		}
		
		/// <summary>
		/// Message related to the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("message")]
		public string Message
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("message");
			}
		}
		
		/// <summary>
		/// Name of the message that started this system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messagename")]
		public string MessageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("messagename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("messagename", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Name of the user who last modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// YomiName of the user who last modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the system job was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the asyncoperation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Name of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Type of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationtype")]
		public virtual AsyncOperation_OperationType? OperationType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((AsyncOperation_OperationType?)(EntityOptionSetEnum.GetEnum(this, "operationtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("operationtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Describes the record type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationtypename")]
		public string OperationTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("operationtype"))
				{
					return this.FormattedValues["operationtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the owning extension with which the system job is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningextensionid")]
		public Microsoft.Xrm.Sdk.EntityReference OwningExtensionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningextensionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("owningextensionid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningextensionidname")]
		public string OwningExtensionIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningextensionid"))
				{
					return this.FormattedValues["owningextensionid"];
				}
				else
				{
					return default(string);
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("owningextensionidname", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentpluginexecutionid")]
		public System.Nullable<System.Guid> ParentPlugInexecutionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("parentpluginexecutionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parentpluginexecutionid", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the system job should run only after the specified date and time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeuntil")]
		public System.Nullable<System.DateTime> PostponeUntil
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeuntil");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("postponeuntil", value);
			}
		}
		
		/// <summary>
		/// Type of entity with which the system job is primarily associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryentitytype")]
		public string PrimaryEntityType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("primaryentitytype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("primaryentitytype", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryentitytypename")]
		public string PrimaryEntityTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("primaryentitytype"))
				{
					return this.FormattedValues["primaryentitytype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Pattern of the system job's recurrence.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencepattern")]
		public string RecurrencePattern
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("recurrencepattern");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("recurrencepattern", value);
			}
		}
		
		/// <summary>
		/// Starting time in UTC for the recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencestarttime")]
		public System.Nullable<System.DateTime> RecurrenceStartTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("recurrencestarttime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("recurrencestarttime", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the object with which the system job is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("regardingobjectid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidname")]
		public string RegardingObjectIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("regardingobjectidname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidyominame")]
		public string RegardingObjectIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("regardingobjectidyominame", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the request that generated the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requestid")]
		public System.Nullable<System.Guid> RequestId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("requestid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("requestid", value);
			}
		}
		
		/// <summary>
		/// Retain job history.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("retainjobhistory")]
		public System.Nullable<bool> RetainJobHistory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("retainjobhistory");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("retainjobhistory", value);
			}
		}
		
		/// <summary>
		/// Number of times to retry the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("retrycount")]
		public System.Nullable<int> RetryCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("retrycount");
			}
		}
		
		/// <summary>
		/// Root execution context of the job that trigerred async job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rootexecutioncontext")]
		public string RootExecutionContext
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("rootexecutioncontext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("rootexecutioncontext", value);
			}
		}
		
		/// <summary>
		/// Order in which operations were submitted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sequence")]
		public System.Nullable<long> Sequence
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("sequence");
			}
		}
		
		/// <summary>
		/// Date and time when the system job was started.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("startedon")]
		public System.Nullable<System.DateTime> StartedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("startedon");
			}
		}
		
		/// <summary>
		/// Status of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual AsyncOperation_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((AsyncOperation_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// State name of the async operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual AsyncOperation_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((AsyncOperation_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The Subtype of the Async Job
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subtype")]
		public System.Nullable<int> Subtype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("subtype");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the workflow activation related to the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowactivationid")]
		public Microsoft.Xrm.Sdk.EntityReference WorkflowActivationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("workflowactivationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("workflowactivationid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowactivationidname")]
		public string WorkflowActivationIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("workflowactivationid"))
				{
					return this.FormattedValues["workflowactivationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Name of a workflow stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowstagename")]
		public string WorkflowStageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("workflowstagename");
			}
		}
		
		/// <summary>
		/// The workload name.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workload")]
		public string Workload
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("workload");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("workload", value);
			}
		}
		
		/// <summary>
		/// 1:N AsyncOperation_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("AsyncOperation_Emails")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.Email> AsyncOperation_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.Email>("AsyncOperation_Emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.Email>("AsyncOperation_Emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N lk_workflowlog_asyncoperation_childworkflow
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_asyncoperation_childworkflow")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.WorkflowLog> Lk_WorkflowLog_AsyncOperation_ChildWorkflow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.WorkflowLog>("lk_workflowlog_asyncoperation_childworkflow", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.WorkflowLog>("lk_workflowlog_asyncoperation_childworkflow", null, value);
			}
		}
		
		/// <summary>
		/// 1:N lk_workflowlog_asyncoperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_workflowlog_asyncoperations")]
		public System.Collections.Generic.IEnumerable<Xyz.Xrm.Entities.WorkflowLog> Lk_WorkflowLog_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Xyz.Xrm.Entities.WorkflowLog>("lk_workflowlog_asyncoperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Xyz.Xrm.Entities.WorkflowLog>("lk_workflowlog_asyncoperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Account_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_AsyncOperations")]
		public Xyz.Xrm.Entities.Account Account_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Account>("Account_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Account>("Account_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ActivityMimeAttachment_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ActivityMimeAttachment_AsyncOperations")]
		public Xyz.Xrm.Entities.ActivityMimeAttachment ActivityMimeAttachment_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.ActivityMimeAttachment>("ActivityMimeAttachment_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.ActivityMimeAttachment>("ActivityMimeAttachment_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ActivityPointer_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ActivityPointer_AsyncOperations")]
		public Xyz.Xrm.Entities.ActivityPointer ActivityPointer_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.ActivityPointer>("ActivityPointer_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.ActivityPointer>("ActivityPointer_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Annotation_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Annotation_AsyncOperations")]
		public Xyz.Xrm.Entities.Annotation Annotation_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Annotation>("Annotation_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Annotation>("Annotation_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Appointment_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Appointment_AsyncOperations")]
		public Xyz.Xrm.Entities.Appointment Appointment_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Appointment>("Appointment_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Appointment>("Appointment_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 AttributeMap_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("AttributeMap_AsyncOperations")]
		public Xyz.Xrm.Entities.AttributeMap AttributeMap_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.AttributeMap>("AttributeMap_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.AttributeMap>("AttributeMap_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_asyncoperation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_asyncoperation")]
		public Xyz.Xrm.Entities.BusinessUnit Business_Unit_AsyncOperation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.BusinessUnit>("business_unit_asyncoperation", null);
			}
		}
		
		/// <summary>
		/// N:1 BusinessUnit_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BusinessUnit_AsyncOperations")]
		public Xyz.Xrm.Entities.BusinessUnit BusinessUnit_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.BusinessUnit>("BusinessUnit_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.BusinessUnit>("BusinessUnit_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Contact_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_AsyncOperations")]
		public Xyz.Xrm.Entities.Contact Contact_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Contact>("Contact_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Contact>("Contact_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Email_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Email_AsyncOperations")]
		public Xyz.Xrm.Entities.Email Email_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Email>("Email_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Email>("Email_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_asyncoperation_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_asyncoperation_createdby")]
		public Xyz.Xrm.Entities.SystemUser Lk_AsyncOperation_CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_asyncoperation_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_asyncoperation_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_asyncoperation_createdonbehalfby")]
		public Xyz.Xrm.Entities.SystemUser Lk_AsyncOperation_CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_asyncoperation_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_asyncoperation_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_asyncoperation_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_asyncoperation_modifiedby")]
		public Xyz.Xrm.Entities.SystemUser Lk_AsyncOperation_ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_asyncoperation_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_asyncoperation_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_asyncoperation_modifiedonbehalfby")]
		public Xyz.Xrm.Entities.SystemUser Lk_AsyncOperation_ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_asyncoperation_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("lk_asyncoperation_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_asyncoperation_workflowactivationid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowactivationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_asyncoperation_workflowactivationid")]
		public Xyz.Xrm.Entities.Workflow Lk_AsyncOperation_WorkflowActivationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Workflow>("lk_asyncoperation_workflowactivationid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Workflow>("lk_asyncoperation_workflowactivationid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Organization_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Organization_AsyncOperations")]
		public Xyz.Xrm.Entities.Organization Organization_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Organization>("Organization_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Organization>("Organization_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 PhoneCall_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("PhoneCall_AsyncOperations")]
		public Xyz.Xrm.Entities.PhoneCall PhoneCall_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.PhoneCall>("PhoneCall_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.PhoneCall>("PhoneCall_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Privilege_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Privilege_AsyncOperations")]
		public Xyz.Xrm.Entities.Privilege Privilege_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Privilege>("Privilege_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Privilege>("Privilege_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 processstageparameter_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstageparameter_AsyncOperations")]
		public Xyz.Xrm.Entities.ProcessStageParameter ProcessStageParameter_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.ProcessStageParameter>("processstageparameter_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.ProcessStageParameter>("processstageparameter_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Queue_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Queue_AsyncOperations")]
		public Xyz.Xrm.Entities.Queue Queue_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Queue>("Queue_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Queue>("Queue_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 QueueItem_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("QueueItem_AsyncOperations")]
		public Xyz.Xrm.Entities.QueueItem QueueItem_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.QueueItem>("QueueItem_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.QueueItem>("QueueItem_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Role_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Role_AsyncOperations")]
		public Xyz.Xrm.Entities.Role Role_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Role>("Role_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Role>("Role_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 system_user_asyncoperation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("system_user_asyncoperation")]
		public Xyz.Xrm.Entities.SystemUser System_User_AsyncOperation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("system_user_asyncoperation", null);
			}
		}
		
		/// <summary>
		/// N:1 SystemUser_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SystemUser_AsyncOperations")]
		public Xyz.Xrm.Entities.SystemUser SystemUser_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("SystemUser_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.SystemUser>("SystemUser_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Task_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Task_AsyncOperations")]
		public Xyz.Xrm.Entities.Task Task_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Task>("Task_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Task>("Task_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_asyncoperation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_asyncoperation")]
		public Xyz.Xrm.Entities.Team Team_AsyncOperation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Team>("team_asyncoperation", null);
			}
		}
		
		/// <summary>
		/// N:1 Team_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Team_AsyncOperations")]
		public Xyz.Xrm.Entities.Team Team_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.Team>("Team_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.Team>("Team_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_AsyncOperations")]
		public Xyz.Xrm.Entities.TransactionCurrency TransactionCurrency_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Xyz.Xrm.Entities.TransactionCurrency>("TransactionCurrency_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Xyz.Xrm.Entities.TransactionCurrency>("TransactionCurrency_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public AsyncOperation(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["asyncoperationid"] = base.Id;
                        break;
                    case "asyncoperationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
